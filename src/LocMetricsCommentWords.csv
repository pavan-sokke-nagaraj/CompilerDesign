Word,Count
->,110
*,68
if,66
},63
{,61
+,55
return,54
the,50
to,48
false;,32
else,29
=,25
and,23
|,22
,20
of,20
id,20
&&,20
type,20
true;,19
EPSILON,19
symbol,19
\LOGTYPE.SYNTAX,\,18
-,18
check,17
\PrintUtil.info(grammarLog,\,17
\"\\,16
token,15
function,14
class,14
;,14
is,13
A,12
factor,12
for,11
arithExpr,11
(,11
),10
Function,10
table,10
set,10
expr,9
new,9
all,9
arraySizeList,9
or,9
bodyCode,9
4,9
indiceList,9
Symbol,9
@param,9
call,9
parsing,8
not,8
0.001,8
boolean,8
float,8
private,8
==,8
aParams,7
ctrlStat,7
term,7
data,7
a,7
are,7
\"\factor\,6
Sokke,6
Table,6
int,6
array,6
2nd,6
@author,6
statBlock,6
variable,6
Pavan,6
Nagaraj,6
with,6
<pavansn8@gmail.com>,6
statementList,6
IOException,6
System.out.println(symbol.getToken().getValue());,6
main,5
print,5
funcDefList,5
eg:,5
relOp,5
arithExprRight,5
@throws,5
System.out.println(symbol.toString());,5
String,5
addOp,5
\printGrammar("\factor"\,\,5
\tokens,\,5
\"\%\,5
order,5
//,4
sign,4
\"\"\);\,4
-4,4
\Analysis,\,4
tokens,4
generate,4
termFactor,4
from,4
there,4
program,4
convert,4
Insert,4
dotIdNest,4
\EPSILON"\);\,4
\"\r2"\,\,4
current,4
funcBody,4
aParamsTailList,4
recognized,4
\System.out.println("\fraction\t"\\,4
varDecFunDef,4
\"\"\))\,4
intStr);,4
fParams,4
fraction);,4
integer[1-9],4
args,4
\System.out.println("\LOL"\);\,4
ending,4
first,4
classDeclList,4
value,4
no,4
\)"\);\,4
statement,4
section,4
types,4
0's,4
\System.out.println("\intStr\t"\\,4
Assignment,4
\errors,\,4
indiceOrParam,4
comment,4
\factor"\);\,4
bodyCode2,4
idFactor,4
fParamsTailList,4
overloading,3
\"\"\,\,3
System.out.println(tableSymbol.getToken().getValue());,3
\"\r1"\,\,3
param,3
>,3
Driver,3
Analysis,3
p2),3
\p1,\,3
Semantic,3
details,3
\"\sl"\,\,3
dotIdList,3
<>,3
ascii,3
var,3
checking,3
Code,3
extract,3
\printGrammar("\IorP"\,\,3
except,3
symbols,3
>=,3
subExpr,3
values,3
System.out.println(tableSymbol.symbolType);,3
num,3
Vector<Token>();,3
defined,3
lookahead,3
Semantics,3
<=,3
!=,3
msg,3
comments,3
\"\indiceOrParam\,3
assignOp,3
<<,3
\asmCode("\"\,\,3
\"\8"\,\,3
compare,3
assignStat,3
address,3
<,3
\8"\);\,3
structure,3
1:,3
varDecFunDef1,3
rules,3
body,2
position,2
datatype,2
symbol.getToken().getValue(),2
\(!skipErrors("\factor"\,\,2
copy,2
\"\arithExprRight\,2
it,2
arrayVar,2
\LOGTYPE.LEXER,\,2
'\r\n',2
functionName(param,2
\"\idFactor\,2
],2
lhsVal,2
0),2
parse,2
Token,2
\"\\\logs\\"\\,2
\LOGTYPE.SEMATICS,\,2
arraySize,2
RHS:,2
nextToken();,2
\printGrammar("\arithERR"\,\,2
aParamsTail,2
numbers,2
\System.getProperty("\user.dir"\)\,2
token.toString());,2
return(true),2
Lexical,2
according,2
each,2
logFileName;,2
input,2
multOp,2
factor(),2
mul,2
symRHS,2
related,2
redefined,2
\"\(\,2
funcDef,2
\(checkFirstSet("\("\))\,2
methods,2
\HashMap<String,\,2
arithExprRight()),2
\printGrammar("\terFac"\,\,2
\floatMask,\,2
Symbol();,2
generation,2
getNextToken();,2
characters,2
\System.out.println("\LHS:\,2
factor()),2
tableSymbol.getDataType().getValue(),2
symLHS,2
in,2
(flag,2
\terFac"\);\,2
TAB,2
\ARRAY"\);\,2
indices,2
OF,2
token.getValue());,2
it's,2
rhsVal);,2
\IorP"\);\,2
put,2
\"\arithExpr\,2
termFactor()),2
SYMBOLTYPE.ISVARDECLARED),2
\"\term\,2
errors,2
Class,2
\indiceOrParam"\);\,2
eg,2
\arithERR"\);\,2
\//asmCode("\"\,\,2
\printGrammar("\I_F"\,\,2
Set,2
name,2
get,2
present,2
floatMask);,2
\TYPE:\t"\\,2
relExpr,2
\,\,2
To,2
indiceOrParam()),2
split,2
Generation,2
indice,2
fParamsTail,2
\arithExprRight"\);\,2
code,2
1st,2
\(matchTokenType("\T_DEL_R_LPAREN"\)\,2
after,2
file,2
[0-9]+._A,2
progBody,2
term(),2
\subExpr"\);\,2
validation...!!!!,2
save,2
[,2
logFile,2
\"\muli"\,\,2
identifiers,2
Syntactic,2
link,2
0.0010.0010.0001,2
during,2
PrintUtil.isLog,2
arithExpr(),2
System.out.println(funcCount);,2
\termFactor"\);\,2
classDecl,2
\"\termFactor\,2
funcHead,2
msg);,2
return(false),2
\matchTokenType("\T_DEL_R_RPAREN"\))\,2
round,2
\System.out.println("\UNDEFINED\,1
as,1
match(“$”),1
\(checkFirstSet("\factor"\))\,1
scan.nextLine();,1
write,1
subExpr()),1
match(token){,1
ifValidIndexType,1
\assignOp,\,1
\asmCode("\\"\\,\,2\,1
list,1
\factor,\,1
loop,1
\"\expr\,1
DIMENSION,1
\varDecFunDef5,\,1
(arrayVar.getArrLength(),1
\termFactor,\,1
\idFactor,\,1
\System.out.println("\--------->>>>>\,1
allocate,1
copyToken(symbol.getToken());,1
RHS,1
\"\termFactor"\))\,1
fileName,1
(arrayVar,1
\statement1,\,1
\NUMBER:\t"\\,1
System.out,1
\PrintUtil.error(semantics.semanticLog,\,1
\matchTokenType("\T_IDENTIFIER"\,\,1
termFactor(),1
iString);,1
\(matchTokenType("\multOp"\)\,1
parameters,1
\varDecFunDef4,\,1
\dotId,\,1
System.out.println(index.getDataType().getValue());,1
1),1
\,4\,1
nextToken(),1
\I_F"\);\,1
(term(),1
System.out.println(symbol.getToken().getValue(),1
\(checkFirstSet("\indiceOrParam"\))\,1
description,1
at,1
DATA,1
\"\num"\);\,1
\varDecFunDef7,\,1
provided,1
valid,1
\subFactor,\,1
tokenMap;,1
symbol);,1
grammar,1
Start,1
\statement,\,1
@return,1
\(checkFirstSet("\num"\))\,1
Lexer,1
index,1
compDateType,1
\(checkFirstSet("\sign"\))\,1
user,1
Program,1
change,1
\aParams,\,1
Address,1
Global,1
\statementList,\,1
tempSymb.setToken(copyToken(token));,1
Vector>,1
compSymb,1
\dotIdNest2,\,1
\matchTokenValue("\="\))\,1
create,1
\"\ARRAY\,1
short,1
\tokenMap.put("\COMMENTS"\,\,1
\System.out.println("\iString\t"\\,1
scanInputFile(),1
\copySymbol(compSymb,\,1
NAME,1
FormatLog());,1
LINE,1
into,1
\fParamsTail,\,1
(matchNum()),1
logging,1
st.nextToken();,1
\aParamsList,\,1
symbolsparsing,1
\varDecFunDef6,\,1
\"\LINE:\t"\\,1
(dotIdList(),1
\PrintUtil.error(parserLog,\,1
\tokenMap.put("\TOKENS"\,\,1
\(checkFollowSet("\termFactor"\))\,1
eof,1
\"\[COMPILER]"\\,1
\dotIdNest,\,1
\"\not\,1
token.getDesc(),1
associated,1
\idFactor2,\,1
\"\indiceOrParam"\))\,1
on,1
\indice,\,1
which,1
semantic,1
null;,1
\funcBody,\,1
HasMap,1
\"\\t"\\,1
\(checkFirstSet("\term"\))\,1
Vector>();,1
\RE--DEFINED"\);\,1
LHS,1
(indiceList()),1
then,1
\"\]"\\,1
\"\T_IDENTIFIER"\));\,1
\assignStat,\,1
(matchSign(),1
prog,1
\tokenMap.put("\ERRORS"\,\,1
indiceOrParam(),1
terminal,1
\ENCOUNTERED."\);\,1
.equals(symbol.getDataType().getValue()),1
MATCH:,1
\(checkFirstSet("\not"\))\,1
tokens);,1
logRecord.getLevel(),1
size,1
className.function(param,1
(startSymbol(),1
if(symbol.symbolType,1
\"\\tDW\t"\\,1
given,1
\varDec,\,1
implemented,1
SimpleFormatter,1
\(!skipErrors("\arithExpr"\,\,1
inputFile,1
eof);,1
\term,\,1
declared,1
Parent,1
fileHandler.setFormatter(new,1
length,1
symbol.setDataTypeDefined(false);,1
VARIABLE,1
semantics.isFunctionReDefined(symbol);,1
\prog,\,1
^,1
lol,1
\funcDefList,\,1
SYMBOL:,1
\copySymbol(arrayVar,\,1
Variable,1
local,1
\"\INVALID\,1
\st,\,1
(idFactor()),1
UNDECLARED,1
\"\\tDATA\,1
\(checkFirstSet("\."\))\,1
\"\\n"\;\,1
work,1
contains,1
\DIMENSIONS:\t"\\,1
\bodyCode2,\,1
\progBody,\,1
holds,1
\(matchTokenType("\T_IDENTIFIER"\,\,1
FUNCTION,1
vector,1
\"\arithExprRight"\))\,1
MISSING:,1
\Token(lineNum,\,1
msg;,1
\(matchTokenType("\T_DEL_DOT"\)\,1
tokenize,1
analysis,1
functions,1
null,1
\printGrammar("\term"\,\,1
\array,\,1
isArray,1
line,1
line(10),1
arrayVar.getToken().getValue(),1
logRecord.getMessage(),1
\(!skipErrors("\multOp"\,\,1
\"\FUNCTION\,1
\arraySizeList,\,1
\funcHead,\,1
moonData.add(symbol.getAddress(),1
Symbols,1
slides,1
(!eof);,1
global,1
SPACE,1
comments);,1
\sign,\,1
tale,1
\(matchTokenType("\T_LOGICAL_NOT"\)\,1
\System.out.println("\<<<----------\,1
Initialize,1
\.println("\IDENTIFIER\,1
Syntax,1
All,1
an,1
\Tokens,Errors\,1
\idOrIndice,\,1
(arithExpr(),1
\varDecFunDef3,\,1
FILE,1
calcArrayAddr,1
System.out.println(currTable.getAddrLink());,1
\aParamsTail,\,1
aParams(),1
generated,1
\Number:\t"\\,1
PARAMETERS,1
TOKEN,1
update,1
\PrintUtil.error(semanticLog,\,1
other,1
printCode();,1
arrayVar.isArray()),1
type:,1
CodeGenDriver,1
System.out.println(function.getToken().getValue(),1
\System.out.println("\NEW\,1
\printGrammar("\expr"\,\,1
\(checkFollowSet("\idFactor"\))\,1
logRecord.getMessage();,1
public,1
\copySymbol(result,\,1
\(checkFirstSet("\id"\))\,1
\PrintUtil.warning(errorLog,\,1
\aParamsTailList,\,1
\indiceNest,\,1
\varDecFunDef2,\,1
arrayVar.getArrLength(),1
\System.out.println("\---------->>>\,1
\position,\,1
int/float/id/value,1
\VARIABLE:\t"\\,1
idString2,1
flag,1
\multOp,\,1
\arithExpr,\,1
\indiceList,\,1
symbolList,1
\addOp,\,1
\(checkFollowSet("\indiceOrParam"\))\,1
expr(),1
\ctrlStat,\,1
made,1
\relOp,\,1
\"\i_ndiceList\,1
function.getToken().getPosition());,1
Input,1
\fParams,\,1
arithExprR);,1
arrSymb.setMemory(arrMemory);,1
\(matchTokenType("\addOp"\)\,1
children,1
\(!skipErrors("\indiceOrParam"\,\,1
(isFunctionReDefined(symbol)),1
System.out.println();,1
tokenMap,1
\printGrammar("\arithExpr"\,\,1
do,1
\"\idFactor"\))\,1
(factor(),1
\classDeclList,\,1
\idFactor"\);\,1
System.out.println(output);,1
\tokenize(token,\,1
\simple,\,1
parent,1
idFactor(),1
\"\addOp\,1
compDateTypeNum,1
\bodyCode,\,1
MISS,1
found,1
free,1
textFormatter,1
tokenList.add(new,1
\System.out.println("\END\,1
addition,1
its,1
true,1
FOR,1
RESERVE_WORD_MAP,1
symbol.getDataType().getValue());,1
arithExprRight(),1
memory,1
\(checkFirstSet("\multOp"\))\,1
Line,1
SYMBOLTYPE.ISCLASSORFUNC),1
parse(){,1
\(checkFirstSet("\addOp"\))\,1
arrayVar.getToken().getPosition();,1
\relExpr,\,1
throws,1
arrayVar.setToken(arrayToken);,1
\"\\tTOKEN:\tT_IDENTIFIER"\);\,1
\funcDef,\,1
\(checkFollowSet("\arithExprRight"\))\,1
\idString2,\,1
\variable,\,1
\(!skipErrors("\addOp"\,\,1
\classDecl,\,1
classSymb);,1
entry,1
lineNum,1
symbol.getToken().getPosition();,1
\arithExprRight,\,1
attribute,1
used,1
.equals(function.getDataType().getValue()),1
System.out.println(,1
HashMap,1
arithExprRight2);,1
\"\\tLEXEME:\t"\\,1
\statBlock,\,1
listed,1
\(!skipErrors("\."\,\,1
token),1
NO,1
\(checkFirstSet("\arithExpr"\))\,1
\System.out.println("\arrMemory:\,1
\"\sign\,1
\REDEFINED:\t"\\,1
Ordinary,1
follow,1
migration,1
errors);,1
\fParamsTailList,\,1
logger,1
\"\multOp\,1
\"\id\,1
Quit,1
\varDecFunDef1,\,1
SimpleFormatter();,1
\expr,\,1
symbol.getToken().getPosition());,1
space,1
\iSymbol,\,1
validate,1
\"\\tAT\,1
\idNest,\,1
this,1
arrMemory);,1
\arraySize,\,1
tokenType,1
\(!skipErrors("\term"\,\,1
\MATCH"\);\,1
\num,\,1
while,1
\num"\);\,1
9,1
arrayToken,1
\"\["\\,1
\ID\t"\\,1
ASSIGNMENT,1
(lookahead,1
\copySymbol(subSymb,\,1
issue,1
number,1
\"\0"\);\,1
tables,1
\bodyCode3,\,1
\PrintUtil.warning(commentLog,\,1
level,1
(!semantics.isDataTypeDefined(token)),1
MISSING,1
(symbol.isArray()),1
\subExpr,\,1
4:,1
\"\\t\,1
