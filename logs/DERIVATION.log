[INFO][SYNTAX]prog
[INFO][SYNTAX]classDeclList progBody
[INFO][SYNTAX]ClassDecl classDeclList progBody
[INFO][SYNTAX]class id { varDecFunDef } ; classDeclList progBody
[INFO][SYNTAX]class Foo1 { varDecFunDef } ; classDeclList progBody
[INFO][SYNTAX]class Foo1 { type id var_DecFunDef1 } ; classDeclList progBody
[INFO][SYNTAX]class Foo1 { int id var_DecFunDef1 } ; classDeclList progBody
[INFO][SYNTAX]class Foo1 { int i var_DecFunDef1 } ; classDeclList progBody
[INFO][SYNTAX]class Foo1 { int i arraySizeList ; varDecFunDef  } ; classDeclList progBody
[INFO][SYNTAX]class Foo1 { int i array_Size arraySizeList ; varDecFunDef  } ; classDeclList progBody
[INFO][SYNTAX]class Foo1 { int i  [ T_INTEGER ]  arraySizeList ; varDecFunDef  } ; classDeclList progBody
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]  arraySizeList ; varDecFunDef  } ; classDeclList progBody
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]  array_Size arraySizeList ; varDecFunDef  } ; classDeclList progBody
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ T_INTEGER ]  arraySizeList ; varDecFunDef  } ; classDeclList progBody
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]  arraySizeList ; varDecFunDef  } ; classDeclList progBody
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; varDecFunDef  } ; classDeclList progBody
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; type id var_DecFunDef1  } ; classDeclList progBody
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int id var_DecFunDef1  } ; classDeclList progBody
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a var_DecFunDef1  } ; classDeclList progBody
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a arraySizeList ; varDecFunDef   } ; classDeclList progBody
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; varDecFunDef   } ; classDeclList progBody
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; type id var_DecFunDef1   } ; classDeclList progBody
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int id var_DecFunDef1   } ; classDeclList progBody
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol var_DecFunDef1   } ; classDeclList progBody
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol arraySizeList ; varDecFunDef    } ; classDeclList progBody
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol array_Size arraySizeList ; varDecFunDef    } ; classDeclList progBody
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ T_INTEGER ]  arraySizeList ; varDecFunDef    } ; classDeclList progBody
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]  arraySizeList ; varDecFunDef    } ; classDeclList progBody
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ; varDecFunDef    } ; classDeclList progBody
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; classDeclList progBody
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; ClassDecl classDeclList progBody
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class id { varDecFunDef } ; classDeclList progBody
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { varDecFunDef } ; classDeclList progBody
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { type id var_DecFunDef1 } ; classDeclList progBody
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int id var_DecFunDef1 } ; classDeclList progBody
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i var_DecFunDef1 } ; classDeclList progBody
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i arraySizeList ; varDecFunDef  } ; classDeclList progBody
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i array_Size arraySizeList ; varDecFunDef  } ; classDeclList progBody
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ T_INTEGER ]  arraySizeList ; varDecFunDef  } ; classDeclList progBody
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]  arraySizeList ; varDecFunDef  } ; classDeclList progBody
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]  array_Size arraySizeList ; varDecFunDef  } ; classDeclList progBody
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ T_INTEGER ]  arraySizeList ; varDecFunDef  } ; classDeclList progBody
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]  arraySizeList ; varDecFunDef  } ; classDeclList progBody
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; varDecFunDef  } ; classDeclList progBody
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; type id var_DecFunDef1  } ; classDeclList progBody
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int id var_DecFunDef1  } ; classDeclList progBody
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a var_DecFunDef1  } ; classDeclList progBody
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a arraySizeList ; varDecFunDef   } ; classDeclList progBody
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; varDecFunDef   } ; classDeclList progBody
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; type id var_DecFunDef1   } ; classDeclList progBody
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int id var_DecFunDef1   } ; classDeclList progBody
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol var_DecFunDef1   } ; classDeclList progBody
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol arraySizeList ; varDecFunDef    } ; classDeclList progBody
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol array_Size arraySizeList ; varDecFunDef    } ; classDeclList progBody
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ T_INTEGER ]  arraySizeList ; varDecFunDef    } ; classDeclList progBody
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]  arraySizeList ; varDecFunDef    } ; classDeclList progBody
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ; varDecFunDef    } ; classDeclList progBody
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; classDeclList progBody
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  progBody
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program funcBody ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { bodyCode } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { id body_Code2 } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { Foo body_Code2 } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { Foo id arraySizeList ; bodyCode } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { Foo f arraySizeList ; bodyCode } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { Foo f  ; bodyCode } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { Foo f  ; id body_Code2 } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { Foo f  ; Foo1 body_Code2 } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { Foo f  ; Foo1 id arraySizeList ; bodyCode } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { Foo f  ; Foo1 f1 arraySizeList ; bodyCode } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { Foo f  ; Foo1 f1  ; bodyCode } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { Foo f  ; Foo1 f1  ; id body_Code2 } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { Foo f  ; Foo1 f1  ; f body_Code2 } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { Foo f  ; Foo1 f1  ; f i_ndiceList dotList = expr ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { Foo f  ; Foo1 f1  ; f  dotList = expr ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { Foo f  ; Foo1 f1  ; f  . id i_ndiceList = expr ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { Foo f  ; Foo1 f1  ; f  . a i_ndiceList = expr ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { Foo f  ; Foo1 f1  ; f  . a  = expr ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { Foo f  ; Foo1 f1  ; f  . a  = arithExpr subExpr ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { Foo f  ; Foo1 f1  ; f  . a  = term arithERR subExpr ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { Foo f  ; Foo1 f1  ; f  . a  = factor terFac arithERR subExpr ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { Foo f  ; Foo1 f1  ; f  . a  = num terFac arithERR subExpr ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { Foo f  ; Foo1 f1  ; f  . a  = 100 terFac arithERR subExpr ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { Foo f  ; Foo1 f1  ; f  . a  = 100  arithERR subExpr ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { Foo f  ; Foo1 f1  ; f  . a  = 100   subExpr ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { Foo f  ; Foo1 f1  ; f  . a  = 100    ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { Foo f  ; Foo1 f1  ; f  . a  = 100    ; statement S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { Foo f  ; Foo1 f1  ; f  . a  = 100    ; ctrlStat ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { Foo f  ; Foo1 f1  ; f  . a  = 100    ; put ( expr ) ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { Foo f  ; Foo1 f1  ; f  . a  = 100    ; put ( arithExpr subExpr ) ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { Foo f  ; Foo1 f1  ; f  . a  = 100    ; put ( term arithERR subExpr ) ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { Foo f  ; Foo1 f1  ; f  . a  = 100    ; put ( factor terFac arithERR subExpr ) ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { Foo f  ; Foo1 f1  ; f  . a  = 100    ; put ( id IorP terFac arithERR subExpr ) ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { Foo f  ; Foo1 f1  ; f  . a  = 100    ; put ( f IorP terFac arithERR subExpr ) ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { Foo f  ; Foo1 f1  ; f  . a  = 100    ; put ( f i_ndiceList I_F terFac arithERR subExpr ) ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { Foo f  ; Foo1 f1  ; f  . a  = 100    ; put ( f  I_F terFac arithERR subExpr ) ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { Foo f  ; Foo1 f1  ; f  . a  = 100    ; put ( f  . id IorP terFac arithERR subExpr ) ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { Foo f  ; Foo1 f1  ; f  . a  = 100    ; put ( f  . a IorP terFac arithERR subExpr ) ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { Foo f  ; Foo1 f1  ; f  . a  = 100    ; put ( f  . a  terFac arithERR subExpr ) ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { Foo f  ; Foo1 f1  ; f  . a  = 100    ; put ( f  . a   arithERR subExpr ) ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { Foo f  ; Foo1 f1  ; f  . a  = 100    ; put ( f  . a    subExpr ) ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { Foo f  ; Foo1 f1  ; f  . a  = 100    ; put ( f  . a     ) ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { Foo f  ; Foo1 f1  ; f  . a  = 100    ; put ( f  . a     ) ; statement S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { Foo f  ; Foo1 f1  ; f  . a  = 100    ; put ( f  . a     ) ; assignStat ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { Foo f  ; Foo1 f1  ; f  . a  = 100    ; put ( f  . a     ) ; variable = expr ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { Foo f  ; Foo1 f1  ; f  . a  = 100    ; put ( f  . a     ) ; id i_ndiceList dotNest = expr ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { Foo f  ; Foo1 f1  ; f  . a  = 100    ; put ( f  . a     ) ; f i_ndiceList dotNest = expr ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { Foo f  ; Foo1 f1  ; f  . a  = 100    ; put ( f  . a     ) ; f  dotNest = expr ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { Foo f  ; Foo1 f1  ; f  . a  = 100    ; put ( f  . a     ) ; f  . id i_ndiceList dotNest = expr ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { Foo f  ; Foo1 f1  ; f  . a  = 100    ; put ( f  . a     ) ; f  . i i_ndiceList dotNest = expr ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { Foo f  ; Foo1 f1  ; f  . a  = 100    ; put ( f  . a     ) ; f  . i indice i_ndiceList dotNest = expr ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { Foo f  ; Foo1 f1  ; f  . a  = 100    ; put ( f  . a     ) ; f  . i [ arithExpr ] i_ndiceList dotNest = expr ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { Foo f  ; Foo1 f1  ; f  . a  = 100    ; put ( f  . a     ) ; f  . i [ term arithERR ] i_ndiceList dotNest = expr ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { Foo f  ; Foo1 f1  ; f  . a  = 100    ; put ( f  . a     ) ; f  . i [ factor terFac arithERR ] i_ndiceList dotNest = expr ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { Foo f  ; Foo1 f1  ; f  . a  = 100    ; put ( f  . a     ) ; f  . i [ num terFac arithERR ] i_ndiceList dotNest = expr ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { Foo f  ; Foo1 f1  ; f  . a  = 100    ; put ( f  . a     ) ; f  . i [ 4 terFac arithERR ] i_ndiceList dotNest = expr ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { Foo f  ; Foo1 f1  ; f  . a  = 100    ; put ( f  . a     ) ; f  . i [ 4  arithERR ] i_ndiceList dotNest = expr ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { Foo f  ; Foo1 f1  ; f  . a  = 100    ; put ( f  . a     ) ; f  . i [ 4   ] i_ndiceList dotNest = expr ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { Foo f  ; Foo1 f1  ; f  . a  = 100    ; put ( f  . a     ) ; f  . i [ 4   ] indice i_ndiceList dotNest = expr ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { Foo f  ; Foo1 f1  ; f  . a  = 100    ; put ( f  . a     ) ; f  . i [ 4   ] [ arithExpr ] i_ndiceList dotNest = expr ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { Foo f  ; Foo1 f1  ; f  . a  = 100    ; put ( f  . a     ) ; f  . i [ 4   ] [ term arithERR ] i_ndiceList dotNest = expr ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { Foo f  ; Foo1 f1  ; f  . a  = 100    ; put ( f  . a     ) ; f  . i [ 4   ] [ factor terFac arithERR ] i_ndiceList dotNest = expr ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { Foo f  ; Foo1 f1  ; f  . a  = 100    ; put ( f  . a     ) ; f  . i [ 4   ] [ num terFac arithERR ] i_ndiceList dotNest = expr ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { Foo f  ; Foo1 f1  ; f  . a  = 100    ; put ( f  . a     ) ; f  . i [ 4   ] [ 4 terFac arithERR ] i_ndiceList dotNest = expr ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { Foo f  ; Foo1 f1  ; f  . a  = 100    ; put ( f  . a     ) ; f  . i [ 4   ] [ 4  arithERR ] i_ndiceList dotNest = expr ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { Foo f  ; Foo1 f1  ; f  . a  = 100    ; put ( f  . a     ) ; f  . i [ 4   ] [ 4   ] i_ndiceList dotNest = expr ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { Foo f  ; Foo1 f1  ; f  . a  = 100    ; put ( f  . a     ) ; f  . i [ 4   ] [ 4   ]  dotNest = expr ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { Foo f  ; Foo1 f1  ; f  . a  = 100    ; put ( f  . a     ) ; f  . i [ 4   ] [ 4   ]   = expr ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { Foo f  ; Foo1 f1  ; f  . a  = 100    ; put ( f  . a     ) ; f  . i [ 4   ] [ 4   ]   = arithExpr subExpr ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { Foo f  ; Foo1 f1  ; f  . a  = 100    ; put ( f  . a     ) ; f  . i [ 4   ] [ 4   ]   = term arithERR subExpr ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { Foo f  ; Foo1 f1  ; f  . a  = 100    ; put ( f  . a     ) ; f  . i [ 4   ] [ 4   ]   = factor terFac arithERR subExpr ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { Foo f  ; Foo1 f1  ; f  . a  = 100    ; put ( f  . a     ) ; f  . i [ 4   ] [ 4   ]   = id IorP terFac arithERR subExpr ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { Foo f  ; Foo1 f1  ; f  . a  = 100    ; put ( f  . a     ) ; f  . i [ 4   ] [ 4   ]   = f IorP terFac arithERR subExpr ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { Foo f  ; Foo1 f1  ; f  . a  = 100    ; put ( f  . a     ) ; f  . i [ 4   ] [ 4   ]   = f i_ndiceList I_F terFac arithERR subExpr ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { Foo f  ; Foo1 f1  ; f  . a  = 100    ; put ( f  . a     ) ; f  . i [ 4   ] [ 4   ]   = f  I_F terFac arithERR subExpr ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { Foo f  ; Foo1 f1  ; f  . a  = 100    ; put ( f  . a     ) ; f  . i [ 4   ] [ 4   ]   = f  . id IorP terFac arithERR subExpr ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { Foo f  ; Foo1 f1  ; f  . a  = 100    ; put ( f  . a     ) ; f  . i [ 4   ] [ 4   ]   = f  . a IorP terFac arithERR subExpr ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { Foo f  ; Foo1 f1  ; f  . a  = 100    ; put ( f  . a     ) ; f  . i [ 4   ] [ 4   ]   = f  . a  terFac arithERR subExpr ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { Foo f  ; Foo1 f1  ; f  . a  = 100    ; put ( f  . a     ) ; f  . i [ 4   ] [ 4   ]   = f  . a   arithERR subExpr ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { Foo f  ; Foo1 f1  ; f  . a  = 100    ; put ( f  . a     ) ; f  . i [ 4   ] [ 4   ]   = f  . a   addOp term arithERR subExpr ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { Foo f  ; Foo1 f1  ; f  . a  = 100    ; put ( f  . a     ) ; f  . i [ 4   ] [ 4   ]   = f  . a   + term arithERR subExpr ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { Foo f  ; Foo1 f1  ; f  . a  = 100    ; put ( f  . a     ) ; f  . i [ 4   ] [ 4   ]   = f  . a   + factor terFac arithERR subExpr ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { Foo f  ; Foo1 f1  ; f  . a  = 100    ; put ( f  . a     ) ; f  . i [ 4   ] [ 4   ]   = f  . a   + id IorP terFac arithERR subExpr ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { Foo f  ; Foo1 f1  ; f  . a  = 100    ; put ( f  . a     ) ; f  . i [ 4   ] [ 4   ]   = f  . a   + f IorP terFac arithERR subExpr ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { Foo f  ; Foo1 f1  ; f  . a  = 100    ; put ( f  . a     ) ; f  . i [ 4   ] [ 4   ]   = f  . a   + f i_ndiceList I_F terFac arithERR subExpr ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { Foo f  ; Foo1 f1  ; f  . a  = 100    ; put ( f  . a     ) ; f  . i [ 4   ] [ 4   ]   = f  . a   + f  I_F terFac arithERR subExpr ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { Foo f  ; Foo1 f1  ; f  . a  = 100    ; put ( f  . a     ) ; f  . i [ 4   ] [ 4   ]   = f  . a   + f  . id IorP terFac arithERR subExpr ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { Foo f  ; Foo1 f1  ; f  . a  = 100    ; put ( f  . a     ) ; f  . i [ 4   ] [ 4   ]   = f  . a   + f  . a IorP terFac arithERR subExpr ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { Foo f  ; Foo1 f1  ; f  . a  = 100    ; put ( f  . a     ) ; f  . i [ 4   ] [ 4   ]   = f  . a   + f  . a  terFac arithERR subExpr ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { Foo f  ; Foo1 f1  ; f  . a  = 100    ; put ( f  . a     ) ; f  . i [ 4   ] [ 4   ]   = f  . a   + f  . a   arithERR subExpr ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { Foo f  ; Foo1 f1  ; f  . a  = 100    ; put ( f  . a     ) ; f  . i [ 4   ] [ 4   ]   = f  . a   + f  . a    subExpr ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { Foo f  ; Foo1 f1  ; f  . a  = 100    ; put ( f  . a     ) ; f  . i [ 4   ] [ 4   ]   = f  . a   + f  . a     ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { Foo f  ; Foo1 f1  ; f  . a  = 100    ; put ( f  . a     ) ; f  . i [ 4   ] [ 4   ]   = f  . a   + f  . a     ; statement S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { Foo f  ; Foo1 f1  ; f  . a  = 100    ; put ( f  . a     ) ; f  . i [ 4   ] [ 4   ]   = f  . a   + f  . a     ; ctrlStat ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { Foo f  ; Foo1 f1  ; f  . a  = 100    ; put ( f  . a     ) ; f  . i [ 4   ] [ 4   ]   = f  . a   + f  . a     ; put ( expr ) ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { Foo f  ; Foo1 f1  ; f  . a  = 100    ; put ( f  . a     ) ; f  . i [ 4   ] [ 4   ]   = f  . a   + f  . a     ; put ( arithExpr subExpr ) ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { Foo f  ; Foo1 f1  ; f  . a  = 100    ; put ( f  . a     ) ; f  . i [ 4   ] [ 4   ]   = f  . a   + f  . a     ; put ( term arithERR subExpr ) ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { Foo f  ; Foo1 f1  ; f  . a  = 100    ; put ( f  . a     ) ; f  . i [ 4   ] [ 4   ]   = f  . a   + f  . a     ; put ( factor terFac arithERR subExpr ) ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { Foo f  ; Foo1 f1  ; f  . a  = 100    ; put ( f  . a     ) ; f  . i [ 4   ] [ 4   ]   = f  . a   + f  . a     ; put ( id IorP terFac arithERR subExpr ) ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { Foo f  ; Foo1 f1  ; f  . a  = 100    ; put ( f  . a     ) ; f  . i [ 4   ] [ 4   ]   = f  . a   + f  . a     ; put ( f IorP terFac arithERR subExpr ) ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { Foo f  ; Foo1 f1  ; f  . a  = 100    ; put ( f  . a     ) ; f  . i [ 4   ] [ 4   ]   = f  . a   + f  . a     ; put ( f i_ndiceList I_F terFac arithERR subExpr ) ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { Foo f  ; Foo1 f1  ; f  . a  = 100    ; put ( f  . a     ) ; f  . i [ 4   ] [ 4   ]   = f  . a   + f  . a     ; put ( f  I_F terFac arithERR subExpr ) ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { Foo f  ; Foo1 f1  ; f  . a  = 100    ; put ( f  . a     ) ; f  . i [ 4   ] [ 4   ]   = f  . a   + f  . a     ; put ( f  . id IorP terFac arithERR subExpr ) ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { Foo f  ; Foo1 f1  ; f  . a  = 100    ; put ( f  . a     ) ; f  . i [ 4   ] [ 4   ]   = f  . a   + f  . a     ; put ( f  . i IorP terFac arithERR subExpr ) ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { Foo f  ; Foo1 f1  ; f  . a  = 100    ; put ( f  . a     ) ; f  . i [ 4   ] [ 4   ]   = f  . a   + f  . a     ; put ( f  . i i_ndiceList I_F terFac arithERR subExpr ) ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { Foo f  ; Foo1 f1  ; f  . a  = 100    ; put ( f  . a     ) ; f  . i [ 4   ] [ 4   ]   = f  . a   + f  . a     ; put ( f  . i indice i_ndiceList I_F terFac arithERR subExpr ) ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { Foo f  ; Foo1 f1  ; f  . a  = 100    ; put ( f  . a     ) ; f  . i [ 4   ] [ 4   ]   = f  . a   + f  . a     ; put ( f  . i [ arithExpr ] i_ndiceList I_F terFac arithERR subExpr ) ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { Foo f  ; Foo1 f1  ; f  . a  = 100    ; put ( f  . a     ) ; f  . i [ 4   ] [ 4   ]   = f  . a   + f  . a     ; put ( f  . i [ term arithERR ] i_ndiceList I_F terFac arithERR subExpr ) ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { Foo f  ; Foo1 f1  ; f  . a  = 100    ; put ( f  . a     ) ; f  . i [ 4   ] [ 4   ]   = f  . a   + f  . a     ; put ( f  . i [ factor terFac arithERR ] i_ndiceList I_F terFac arithERR subExpr ) ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { Foo f  ; Foo1 f1  ; f  . a  = 100    ; put ( f  . a     ) ; f  . i [ 4   ] [ 4   ]   = f  . a   + f  . a     ; put ( f  . i [ num terFac arithERR ] i_ndiceList I_F terFac arithERR subExpr ) ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { Foo f  ; Foo1 f1  ; f  . a  = 100    ; put ( f  . a     ) ; f  . i [ 4   ] [ 4   ]   = f  . a   + f  . a     ; put ( f  . i [ 4 terFac arithERR ] i_ndiceList I_F terFac arithERR subExpr ) ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { Foo f  ; Foo1 f1  ; f  . a  = 100    ; put ( f  . a     ) ; f  . i [ 4   ] [ 4   ]   = f  . a   + f  . a     ; put ( f  . i [ 4  arithERR ] i_ndiceList I_F terFac arithERR subExpr ) ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { Foo f  ; Foo1 f1  ; f  . a  = 100    ; put ( f  . a     ) ; f  . i [ 4   ] [ 4   ]   = f  . a   + f  . a     ; put ( f  . i [ 4   ] i_ndiceList I_F terFac arithERR subExpr ) ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { Foo f  ; Foo1 f1  ; f  . a  = 100    ; put ( f  . a     ) ; f  . i [ 4   ] [ 4   ]   = f  . a   + f  . a     ; put ( f  . i [ 4   ] indice i_ndiceList I_F terFac arithERR subExpr ) ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { Foo f  ; Foo1 f1  ; f  . a  = 100    ; put ( f  . a     ) ; f  . i [ 4   ] [ 4   ]   = f  . a   + f  . a     ; put ( f  . i [ 4   ] [ arithExpr ] i_ndiceList I_F terFac arithERR subExpr ) ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { Foo f  ; Foo1 f1  ; f  . a  = 100    ; put ( f  . a     ) ; f  . i [ 4   ] [ 4   ]   = f  . a   + f  . a     ; put ( f  . i [ 4   ] [ term arithERR ] i_ndiceList I_F terFac arithERR subExpr ) ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { Foo f  ; Foo1 f1  ; f  . a  = 100    ; put ( f  . a     ) ; f  . i [ 4   ] [ 4   ]   = f  . a   + f  . a     ; put ( f  . i [ 4   ] [ factor terFac arithERR ] i_ndiceList I_F terFac arithERR subExpr ) ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { Foo f  ; Foo1 f1  ; f  . a  = 100    ; put ( f  . a     ) ; f  . i [ 4   ] [ 4   ]   = f  . a   + f  . a     ; put ( f  . i [ 4   ] [ num terFac arithERR ] i_ndiceList I_F terFac arithERR subExpr ) ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { Foo f  ; Foo1 f1  ; f  . a  = 100    ; put ( f  . a     ) ; f  . i [ 4   ] [ 4   ]   = f  . a   + f  . a     ; put ( f  . i [ 4   ] [ 4 terFac arithERR ] i_ndiceList I_F terFac arithERR subExpr ) ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { Foo f  ; Foo1 f1  ; f  . a  = 100    ; put ( f  . a     ) ; f  . i [ 4   ] [ 4   ]   = f  . a   + f  . a     ; put ( f  . i [ 4   ] [ 4  arithERR ] i_ndiceList I_F terFac arithERR subExpr ) ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { Foo f  ; Foo1 f1  ; f  . a  = 100    ; put ( f  . a     ) ; f  . i [ 4   ] [ 4   ]   = f  . a   + f  . a     ; put ( f  . i [ 4   ] [ 4   ] i_ndiceList I_F terFac arithERR subExpr ) ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { Foo f  ; Foo1 f1  ; f  . a  = 100    ; put ( f  . a     ) ; f  . i [ 4   ] [ 4   ]   = f  . a   + f  . a     ; put ( f  . i [ 4   ] [ 4   ]  I_F terFac arithERR subExpr ) ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { Foo f  ; Foo1 f1  ; f  . a  = 100    ; put ( f  . a     ) ; f  . i [ 4   ] [ 4   ]   = f  . a   + f  . a     ; put ( f  . i [ 4   ] [ 4   ]   terFac arithERR subExpr ) ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { Foo f  ; Foo1 f1  ; f  . a  = 100    ; put ( f  . a     ) ; f  . i [ 4   ] [ 4   ]   = f  . a   + f  . a     ; put ( f  . i [ 4   ] [ 4   ]    arithERR subExpr ) ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { Foo f  ; Foo1 f1  ; f  . a  = 100    ; put ( f  . a     ) ; f  . i [ 4   ] [ 4   ]   = f  . a   + f  . a     ; put ( f  . i [ 4   ] [ 4   ]     subExpr ) ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { Foo f  ; Foo1 f1  ; f  . a  = 100    ; put ( f  . a     ) ; f  . i [ 4   ] [ 4   ]   = f  . a   + f  . a     ; put ( f  . i [ 4   ] [ 4   ]      ) ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { Foo f  ; Foo1 f1  ; f  . a  = 100    ; put ( f  . a     ) ; f  . i [ 4   ] [ 4   ]   = f  . a   + f  . a     ; put ( f  . i [ 4   ] [ 4   ]      ) ; statement S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { Foo f  ; Foo1 f1  ; f  . a  = 100    ; put ( f  . a     ) ; f  . i [ 4   ] [ 4   ]   = f  . a   + f  . a     ; put ( f  . i [ 4   ] [ 4   ]      ) ; assignStat ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { Foo f  ; Foo1 f1  ; f  . a  = 100    ; put ( f  . a     ) ; f  . i [ 4   ] [ 4   ]   = f  . a   + f  . a     ; put ( f  . i [ 4   ] [ 4   ]      ) ; variable = expr ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { Foo f  ; Foo1 f1  ; f  . a  = 100    ; put ( f  . a     ) ; f  . i [ 4   ] [ 4   ]   = f  . a   + f  . a     ; put ( f  . i [ 4   ] [ 4   ]      ) ; id i_ndiceList dotNest = expr ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { Foo f  ; Foo1 f1  ; f  . a  = 100    ; put ( f  . a     ) ; f  . i [ 4   ] [ 4   ]   = f  . a   + f  . a     ; put ( f  . i [ 4   ] [ 4   ]      ) ; f i_ndiceList dotNest = expr ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { Foo f  ; Foo1 f1  ; f  . a  = 100    ; put ( f  . a     ) ; f  . i [ 4   ] [ 4   ]   = f  . a   + f  . a     ; put ( f  . i [ 4   ] [ 4   ]      ) ; f  dotNest = expr ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { Foo f  ; Foo1 f1  ; f  . a  = 100    ; put ( f  . a     ) ; f  . i [ 4   ] [ 4   ]   = f  . a   + f  . a     ; put ( f  . i [ 4   ] [ 4   ]      ) ; f  . id i_ndiceList dotNest = expr ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { Foo f  ; Foo1 f1  ; f  . a  = 100    ; put ( f  . a     ) ; f  . i [ 4   ] [ 4   ]   = f  . a   + f  . a     ; put ( f  . i [ 4   ] [ 4   ]      ) ; f  . i i_ndiceList dotNest = expr ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { Foo f  ; Foo1 f1  ; f  . a  = 100    ; put ( f  . a     ) ; f  . i [ 4   ] [ 4   ]   = f  . a   + f  . a     ; put ( f  . i [ 4   ] [ 4   ]      ) ; f  . i indice i_ndiceList dotNest = expr ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { Foo f  ; Foo1 f1  ; f  . a  = 100    ; put ( f  . a     ) ; f  . i [ 4   ] [ 4   ]   = f  . a   + f  . a     ; put ( f  . i [ 4   ] [ 4   ]      ) ; f  . i [ arithExpr ] i_ndiceList dotNest = expr ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { Foo f  ; Foo1 f1  ; f  . a  = 100    ; put ( f  . a     ) ; f  . i [ 4   ] [ 4   ]   = f  . a   + f  . a     ; put ( f  . i [ 4   ] [ 4   ]      ) ; f  . i [ term arithERR ] i_ndiceList dotNest = expr ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { Foo f  ; Foo1 f1  ; f  . a  = 100    ; put ( f  . a     ) ; f  . i [ 4   ] [ 4   ]   = f  . a   + f  . a     ; put ( f  . i [ 4   ] [ 4   ]      ) ; f  . i [ factor terFac arithERR ] i_ndiceList dotNest = expr ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { Foo f  ; Foo1 f1  ; f  . a  = 100    ; put ( f  . a     ) ; f  . i [ 4   ] [ 4   ]   = f  . a   + f  . a     ; put ( f  . i [ 4   ] [ 4   ]      ) ; f  . i [ num terFac arithERR ] i_ndiceList dotNest = expr ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { Foo f  ; Foo1 f1  ; f  . a  = 100    ; put ( f  . a     ) ; f  . i [ 4   ] [ 4   ]   = f  . a   + f  . a     ; put ( f  . i [ 4   ] [ 4   ]      ) ; f  . i [ 0 terFac arithERR ] i_ndiceList dotNest = expr ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { Foo f  ; Foo1 f1  ; f  . a  = 100    ; put ( f  . a     ) ; f  . i [ 4   ] [ 4   ]   = f  . a   + f  . a     ; put ( f  . i [ 4   ] [ 4   ]      ) ; f  . i [ 0  arithERR ] i_ndiceList dotNest = expr ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { Foo f  ; Foo1 f1  ; f  . a  = 100    ; put ( f  . a     ) ; f  . i [ 4   ] [ 4   ]   = f  . a   + f  . a     ; put ( f  . i [ 4   ] [ 4   ]      ) ; f  . i [ 0   ] i_ndiceList dotNest = expr ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { Foo f  ; Foo1 f1  ; f  . a  = 100    ; put ( f  . a     ) ; f  . i [ 4   ] [ 4   ]   = f  . a   + f  . a     ; put ( f  . i [ 4   ] [ 4   ]      ) ; f  . i [ 0   ] indice i_ndiceList dotNest = expr ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { Foo f  ; Foo1 f1  ; f  . a  = 100    ; put ( f  . a     ) ; f  . i [ 4   ] [ 4   ]   = f  . a   + f  . a     ; put ( f  . i [ 4   ] [ 4   ]      ) ; f  . i [ 0   ] [ arithExpr ] i_ndiceList dotNest = expr ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { Foo f  ; Foo1 f1  ; f  . a  = 100    ; put ( f  . a     ) ; f  . i [ 4   ] [ 4   ]   = f  . a   + f  . a     ; put ( f  . i [ 4   ] [ 4   ]      ) ; f  . i [ 0   ] [ term arithERR ] i_ndiceList dotNest = expr ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { Foo f  ; Foo1 f1  ; f  . a  = 100    ; put ( f  . a     ) ; f  . i [ 4   ] [ 4   ]   = f  . a   + f  . a     ; put ( f  . i [ 4   ] [ 4   ]      ) ; f  . i [ 0   ] [ factor terFac arithERR ] i_ndiceList dotNest = expr ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { Foo f  ; Foo1 f1  ; f  . a  = 100    ; put ( f  . a     ) ; f  . i [ 4   ] [ 4   ]   = f  . a   + f  . a     ; put ( f  . i [ 4   ] [ 4   ]      ) ; f  . i [ 0   ] [ num terFac arithERR ] i_ndiceList dotNest = expr ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { Foo f  ; Foo1 f1  ; f  . a  = 100    ; put ( f  . a     ) ; f  . i [ 4   ] [ 4   ]   = f  . a   + f  . a     ; put ( f  . i [ 4   ] [ 4   ]      ) ; f  . i [ 0   ] [ 0 terFac arithERR ] i_ndiceList dotNest = expr ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { Foo f  ; Foo1 f1  ; f  . a  = 100    ; put ( f  . a     ) ; f  . i [ 4   ] [ 4   ]   = f  . a   + f  . a     ; put ( f  . i [ 4   ] [ 4   ]      ) ; f  . i [ 0   ] [ 0  arithERR ] i_ndiceList dotNest = expr ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { Foo f  ; Foo1 f1  ; f  . a  = 100    ; put ( f  . a     ) ; f  . i [ 4   ] [ 4   ]   = f  . a   + f  . a     ; put ( f  . i [ 4   ] [ 4   ]      ) ; f  . i [ 0   ] [ 0   ] i_ndiceList dotNest = expr ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { Foo f  ; Foo1 f1  ; f  . a  = 100    ; put ( f  . a     ) ; f  . i [ 4   ] [ 4   ]   = f  . a   + f  . a     ; put ( f  . i [ 4   ] [ 4   ]      ) ; f  . i [ 0   ] [ 0   ]  dotNest = expr ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { Foo f  ; Foo1 f1  ; f  . a  = 100    ; put ( f  . a     ) ; f  . i [ 4   ] [ 4   ]   = f  . a   + f  . a     ; put ( f  . i [ 4   ] [ 4   ]      ) ; f  . i [ 0   ] [ 0   ]   = expr ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { Foo f  ; Foo1 f1  ; f  . a  = 100    ; put ( f  . a     ) ; f  . i [ 4   ] [ 4   ]   = f  . a   + f  . a     ; put ( f  . i [ 4   ] [ 4   ]      ) ; f  . i [ 0   ] [ 0   ]   = arithExpr subExpr ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { Foo f  ; Foo1 f1  ; f  . a  = 100    ; put ( f  . a     ) ; f  . i [ 4   ] [ 4   ]   = f  . a   + f  . a     ; put ( f  . i [ 4   ] [ 4   ]      ) ; f  . i [ 0   ] [ 0   ]   = term arithERR subExpr ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { Foo f  ; Foo1 f1  ; f  . a  = 100    ; put ( f  . a     ) ; f  . i [ 4   ] [ 4   ]   = f  . a   + f  . a     ; put ( f  . i [ 4   ] [ 4   ]      ) ; f  . i [ 0   ] [ 0   ]   = factor terFac arithERR subExpr ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { Foo f  ; Foo1 f1  ; f  . a  = 100    ; put ( f  . a     ) ; f  . i [ 4   ] [ 4   ]   = f  . a   + f  . a     ; put ( f  . i [ 4   ] [ 4   ]      ) ; f  . i [ 0   ] [ 0   ]   = id IorP terFac arithERR subExpr ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { Foo f  ; Foo1 f1  ; f  . a  = 100    ; put ( f  . a     ) ; f  . i [ 4   ] [ 4   ]   = f  . a   + f  . a     ; put ( f  . i [ 4   ] [ 4   ]      ) ; f  . i [ 0   ] [ 0   ]   = f IorP terFac arithERR subExpr ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { Foo f  ; Foo1 f1  ; f  . a  = 100    ; put ( f  . a     ) ; f  . i [ 4   ] [ 4   ]   = f  . a   + f  . a     ; put ( f  . i [ 4   ] [ 4   ]      ) ; f  . i [ 0   ] [ 0   ]   = f i_ndiceList I_F terFac arithERR subExpr ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { Foo f  ; Foo1 f1  ; f  . a  = 100    ; put ( f  . a     ) ; f  . i [ 4   ] [ 4   ]   = f  . a   + f  . a     ; put ( f  . i [ 4   ] [ 4   ]      ) ; f  . i [ 0   ] [ 0   ]   = f  I_F terFac arithERR subExpr ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { Foo f  ; Foo1 f1  ; f  . a  = 100    ; put ( f  . a     ) ; f  . i [ 4   ] [ 4   ]   = f  . a   + f  . a     ; put ( f  . i [ 4   ] [ 4   ]      ) ; f  . i [ 0   ] [ 0   ]   = f  . id IorP terFac arithERR subExpr ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { Foo f  ; Foo1 f1  ; f  . a  = 100    ; put ( f  . a     ) ; f  . i [ 4   ] [ 4   ]   = f  . a   + f  . a     ; put ( f  . i [ 4   ] [ 4   ]      ) ; f  . i [ 0   ] [ 0   ]   = f  . i IorP terFac arithERR subExpr ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { Foo f  ; Foo1 f1  ; f  . a  = 100    ; put ( f  . a     ) ; f  . i [ 4   ] [ 4   ]   = f  . a   + f  . a     ; put ( f  . i [ 4   ] [ 4   ]      ) ; f  . i [ 0   ] [ 0   ]   = f  . i i_ndiceList I_F terFac arithERR subExpr ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { Foo f  ; Foo1 f1  ; f  . a  = 100    ; put ( f  . a     ) ; f  . i [ 4   ] [ 4   ]   = f  . a   + f  . a     ; put ( f  . i [ 4   ] [ 4   ]      ) ; f  . i [ 0   ] [ 0   ]   = f  . i indice i_ndiceList I_F terFac arithERR subExpr ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { Foo f  ; Foo1 f1  ; f  . a  = 100    ; put ( f  . a     ) ; f  . i [ 4   ] [ 4   ]   = f  . a   + f  . a     ; put ( f  . i [ 4   ] [ 4   ]      ) ; f  . i [ 0   ] [ 0   ]   = f  . i [ arithExpr ] i_ndiceList I_F terFac arithERR subExpr ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { Foo f  ; Foo1 f1  ; f  . a  = 100    ; put ( f  . a     ) ; f  . i [ 4   ] [ 4   ]   = f  . a   + f  . a     ; put ( f  . i [ 4   ] [ 4   ]      ) ; f  . i [ 0   ] [ 0   ]   = f  . i [ term arithERR ] i_ndiceList I_F terFac arithERR subExpr ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { Foo f  ; Foo1 f1  ; f  . a  = 100    ; put ( f  . a     ) ; f  . i [ 4   ] [ 4   ]   = f  . a   + f  . a     ; put ( f  . i [ 4   ] [ 4   ]      ) ; f  . i [ 0   ] [ 0   ]   = f  . i [ factor terFac arithERR ] i_ndiceList I_F terFac arithERR subExpr ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { Foo f  ; Foo1 f1  ; f  . a  = 100    ; put ( f  . a     ) ; f  . i [ 4   ] [ 4   ]   = f  . a   + f  . a     ; put ( f  . i [ 4   ] [ 4   ]      ) ; f  . i [ 0   ] [ 0   ]   = f  . i [ num terFac arithERR ] i_ndiceList I_F terFac arithERR subExpr ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { Foo f  ; Foo1 f1  ; f  . a  = 100    ; put ( f  . a     ) ; f  . i [ 4   ] [ 4   ]   = f  . a   + f  . a     ; put ( f  . i [ 4   ] [ 4   ]      ) ; f  . i [ 0   ] [ 0   ]   = f  . i [ 4 terFac arithERR ] i_ndiceList I_F terFac arithERR subExpr ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { Foo f  ; Foo1 f1  ; f  . a  = 100    ; put ( f  . a     ) ; f  . i [ 4   ] [ 4   ]   = f  . a   + f  . a     ; put ( f  . i [ 4   ] [ 4   ]      ) ; f  . i [ 0   ] [ 0   ]   = f  . i [ 4  arithERR ] i_ndiceList I_F terFac arithERR subExpr ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { Foo f  ; Foo1 f1  ; f  . a  = 100    ; put ( f  . a     ) ; f  . i [ 4   ] [ 4   ]   = f  . a   + f  . a     ; put ( f  . i [ 4   ] [ 4   ]      ) ; f  . i [ 0   ] [ 0   ]   = f  . i [ 4   ] i_ndiceList I_F terFac arithERR subExpr ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { Foo f  ; Foo1 f1  ; f  . a  = 100    ; put ( f  . a     ) ; f  . i [ 4   ] [ 4   ]   = f  . a   + f  . a     ; put ( f  . i [ 4   ] [ 4   ]      ) ; f  . i [ 0   ] [ 0   ]   = f  . i [ 4   ] indice i_ndiceList I_F terFac arithERR subExpr ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { Foo f  ; Foo1 f1  ; f  . a  = 100    ; put ( f  . a     ) ; f  . i [ 4   ] [ 4   ]   = f  . a   + f  . a     ; put ( f  . i [ 4   ] [ 4   ]      ) ; f  . i [ 0   ] [ 0   ]   = f  . i [ 4   ] [ arithExpr ] i_ndiceList I_F terFac arithERR subExpr ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { Foo f  ; Foo1 f1  ; f  . a  = 100    ; put ( f  . a     ) ; f  . i [ 4   ] [ 4   ]   = f  . a   + f  . a     ; put ( f  . i [ 4   ] [ 4   ]      ) ; f  . i [ 0   ] [ 0   ]   = f  . i [ 4   ] [ term arithERR ] i_ndiceList I_F terFac arithERR subExpr ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { Foo f  ; Foo1 f1  ; f  . a  = 100    ; put ( f  . a     ) ; f  . i [ 4   ] [ 4   ]   = f  . a   + f  . a     ; put ( f  . i [ 4   ] [ 4   ]      ) ; f  . i [ 0   ] [ 0   ]   = f  . i [ 4   ] [ factor terFac arithERR ] i_ndiceList I_F terFac arithERR subExpr ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { Foo f  ; Foo1 f1  ; f  . a  = 100    ; put ( f  . a     ) ; f  . i [ 4   ] [ 4   ]   = f  . a   + f  . a     ; put ( f  . i [ 4   ] [ 4   ]      ) ; f  . i [ 0   ] [ 0   ]   = f  . i [ 4   ] [ num terFac arithERR ] i_ndiceList I_F terFac arithERR subExpr ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { Foo f  ; Foo1 f1  ; f  . a  = 100    ; put ( f  . a     ) ; f  . i [ 4   ] [ 4   ]   = f  . a   + f  . a     ; put ( f  . i [ 4   ] [ 4   ]      ) ; f  . i [ 0   ] [ 0   ]   = f  . i [ 4   ] [ 4 terFac arithERR ] i_ndiceList I_F terFac arithERR subExpr ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { Foo f  ; Foo1 f1  ; f  . a  = 100    ; put ( f  . a     ) ; f  . i [ 4   ] [ 4   ]   = f  . a   + f  . a     ; put ( f  . i [ 4   ] [ 4   ]      ) ; f  . i [ 0   ] [ 0   ]   = f  . i [ 4   ] [ 4  arithERR ] i_ndiceList I_F terFac arithERR subExpr ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { Foo f  ; Foo1 f1  ; f  . a  = 100    ; put ( f  . a     ) ; f  . i [ 4   ] [ 4   ]   = f  . a   + f  . a     ; put ( f  . i [ 4   ] [ 4   ]      ) ; f  . i [ 0   ] [ 0   ]   = f  . i [ 4   ] [ 4   ] i_ndiceList I_F terFac arithERR subExpr ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { Foo f  ; Foo1 f1  ; f  . a  = 100    ; put ( f  . a     ) ; f  . i [ 4   ] [ 4   ]   = f  . a   + f  . a     ; put ( f  . i [ 4   ] [ 4   ]      ) ; f  . i [ 0   ] [ 0   ]   = f  . i [ 4   ] [ 4   ]  I_F terFac arithERR subExpr ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { Foo f  ; Foo1 f1  ; f  . a  = 100    ; put ( f  . a     ) ; f  . i [ 4   ] [ 4   ]   = f  . a   + f  . a     ; put ( f  . i [ 4   ] [ 4   ]      ) ; f  . i [ 0   ] [ 0   ]   = f  . i [ 4   ] [ 4   ]   terFac arithERR subExpr ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { Foo f  ; Foo1 f1  ; f  . a  = 100    ; put ( f  . a     ) ; f  . i [ 4   ] [ 4   ]   = f  . a   + f  . a     ; put ( f  . i [ 4   ] [ 4   ]      ) ; f  . i [ 0   ] [ 0   ]   = f  . i [ 4   ] [ 4   ]   multOp factor terFac arithERR subExpr ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { Foo f  ; Foo1 f1  ; f  . a  = 100    ; put ( f  . a     ) ; f  . i [ 4   ] [ 4   ]   = f  . a   + f  . a     ; put ( f  . i [ 4   ] [ 4   ]      ) ; f  . i [ 0   ] [ 0   ]   = f  . i [ 4   ] [ 4   ]   * factor terFac arithERR subExpr ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { Foo f  ; Foo1 f1  ; f  . a  = 100    ; put ( f  . a     ) ; f  . i [ 4   ] [ 4   ]   = f  . a   + f  . a     ; put ( f  . i [ 4   ] [ 4   ]      ) ; f  . i [ 0   ] [ 0   ]   = f  . i [ 4   ] [ 4   ]   * id IorP terFac arithERR subExpr ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { Foo f  ; Foo1 f1  ; f  . a  = 100    ; put ( f  . a     ) ; f  . i [ 4   ] [ 4   ]   = f  . a   + f  . a     ; put ( f  . i [ 4   ] [ 4   ]      ) ; f  . i [ 0   ] [ 0   ]   = f  . i [ 4   ] [ 4   ]   * f IorP terFac arithERR subExpr ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { Foo f  ; Foo1 f1  ; f  . a  = 100    ; put ( f  . a     ) ; f  . i [ 4   ] [ 4   ]   = f  . a   + f  . a     ; put ( f  . i [ 4   ] [ 4   ]      ) ; f  . i [ 0   ] [ 0   ]   = f  . i [ 4   ] [ 4   ]   * f i_ndiceList I_F terFac arithERR subExpr ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { Foo f  ; Foo1 f1  ; f  . a  = 100    ; put ( f  . a     ) ; f  . i [ 4   ] [ 4   ]   = f  . a   + f  . a     ; put ( f  . i [ 4   ] [ 4   ]      ) ; f  . i [ 0   ] [ 0   ]   = f  . i [ 4   ] [ 4   ]   * f  I_F terFac arithERR subExpr ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { Foo f  ; Foo1 f1  ; f  . a  = 100    ; put ( f  . a     ) ; f  . i [ 4   ] [ 4   ]   = f  . a   + f  . a     ; put ( f  . i [ 4   ] [ 4   ]      ) ; f  . i [ 0   ] [ 0   ]   = f  . i [ 4   ] [ 4   ]   * f  . id IorP terFac arithERR subExpr ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { Foo f  ; Foo1 f1  ; f  . a  = 100    ; put ( f  . a     ) ; f  . i [ 4   ] [ 4   ]   = f  . a   + f  . a     ; put ( f  . i [ 4   ] [ 4   ]      ) ; f  . i [ 0   ] [ 0   ]   = f  . i [ 4   ] [ 4   ]   * f  . i IorP terFac arithERR subExpr ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { Foo f  ; Foo1 f1  ; f  . a  = 100    ; put ( f  . a     ) ; f  . i [ 4   ] [ 4   ]   = f  . a   + f  . a     ; put ( f  . i [ 4   ] [ 4   ]      ) ; f  . i [ 0   ] [ 0   ]   = f  . i [ 4   ] [ 4   ]   * f  . i i_ndiceList I_F terFac arithERR subExpr ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { Foo f  ; Foo1 f1  ; f  . a  = 100    ; put ( f  . a     ) ; f  . i [ 4   ] [ 4   ]   = f  . a   + f  . a     ; put ( f  . i [ 4   ] [ 4   ]      ) ; f  . i [ 0   ] [ 0   ]   = f  . i [ 4   ] [ 4   ]   * f  . i indice i_ndiceList I_F terFac arithERR subExpr ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { Foo f  ; Foo1 f1  ; f  . a  = 100    ; put ( f  . a     ) ; f  . i [ 4   ] [ 4   ]   = f  . a   + f  . a     ; put ( f  . i [ 4   ] [ 4   ]      ) ; f  . i [ 0   ] [ 0   ]   = f  . i [ 4   ] [ 4   ]   * f  . i [ arithExpr ] i_ndiceList I_F terFac arithERR subExpr ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { Foo f  ; Foo1 f1  ; f  . a  = 100    ; put ( f  . a     ) ; f  . i [ 4   ] [ 4   ]   = f  . a   + f  . a     ; put ( f  . i [ 4   ] [ 4   ]      ) ; f  . i [ 0   ] [ 0   ]   = f  . i [ 4   ] [ 4   ]   * f  . i [ term arithERR ] i_ndiceList I_F terFac arithERR subExpr ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { Foo f  ; Foo1 f1  ; f  . a  = 100    ; put ( f  . a     ) ; f  . i [ 4   ] [ 4   ]   = f  . a   + f  . a     ; put ( f  . i [ 4   ] [ 4   ]      ) ; f  . i [ 0   ] [ 0   ]   = f  . i [ 4   ] [ 4   ]   * f  . i [ factor terFac arithERR ] i_ndiceList I_F terFac arithERR subExpr ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { Foo f  ; Foo1 f1  ; f  . a  = 100    ; put ( f  . a     ) ; f  . i [ 4   ] [ 4   ]   = f  . a   + f  . a     ; put ( f  . i [ 4   ] [ 4   ]      ) ; f  . i [ 0   ] [ 0   ]   = f  . i [ 4   ] [ 4   ]   * f  . i [ num terFac arithERR ] i_ndiceList I_F terFac arithERR subExpr ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { Foo f  ; Foo1 f1  ; f  . a  = 100    ; put ( f  . a     ) ; f  . i [ 4   ] [ 4   ]   = f  . a   + f  . a     ; put ( f  . i [ 4   ] [ 4   ]      ) ; f  . i [ 0   ] [ 0   ]   = f  . i [ 4   ] [ 4   ]   * f  . i [ 4 terFac arithERR ] i_ndiceList I_F terFac arithERR subExpr ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { Foo f  ; Foo1 f1  ; f  . a  = 100    ; put ( f  . a     ) ; f  . i [ 4   ] [ 4   ]   = f  . a   + f  . a     ; put ( f  . i [ 4   ] [ 4   ]      ) ; f  . i [ 0   ] [ 0   ]   = f  . i [ 4   ] [ 4   ]   * f  . i [ 4  arithERR ] i_ndiceList I_F terFac arithERR subExpr ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { Foo f  ; Foo1 f1  ; f  . a  = 100    ; put ( f  . a     ) ; f  . i [ 4   ] [ 4   ]   = f  . a   + f  . a     ; put ( f  . i [ 4   ] [ 4   ]      ) ; f  . i [ 0   ] [ 0   ]   = f  . i [ 4   ] [ 4   ]   * f  . i [ 4   ] i_ndiceList I_F terFac arithERR subExpr ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { Foo f  ; Foo1 f1  ; f  . a  = 100    ; put ( f  . a     ) ; f  . i [ 4   ] [ 4   ]   = f  . a   + f  . a     ; put ( f  . i [ 4   ] [ 4   ]      ) ; f  . i [ 0   ] [ 0   ]   = f  . i [ 4   ] [ 4   ]   * f  . i [ 4   ] indice i_ndiceList I_F terFac arithERR subExpr ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { Foo f  ; Foo1 f1  ; f  . a  = 100    ; put ( f  . a     ) ; f  . i [ 4   ] [ 4   ]   = f  . a   + f  . a     ; put ( f  . i [ 4   ] [ 4   ]      ) ; f  . i [ 0   ] [ 0   ]   = f  . i [ 4   ] [ 4   ]   * f  . i [ 4   ] [ arithExpr ] i_ndiceList I_F terFac arithERR subExpr ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { Foo f  ; Foo1 f1  ; f  . a  = 100    ; put ( f  . a     ) ; f  . i [ 4   ] [ 4   ]   = f  . a   + f  . a     ; put ( f  . i [ 4   ] [ 4   ]      ) ; f  . i [ 0   ] [ 0   ]   = f  . i [ 4   ] [ 4   ]   * f  . i [ 4   ] [ term arithERR ] i_ndiceList I_F terFac arithERR subExpr ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { Foo f  ; Foo1 f1  ; f  . a  = 100    ; put ( f  . a     ) ; f  . i [ 4   ] [ 4   ]   = f  . a   + f  . a     ; put ( f  . i [ 4   ] [ 4   ]      ) ; f  . i [ 0   ] [ 0   ]   = f  . i [ 4   ] [ 4   ]   * f  . i [ 4   ] [ factor terFac arithERR ] i_ndiceList I_F terFac arithERR subExpr ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { Foo f  ; Foo1 f1  ; f  . a  = 100    ; put ( f  . a     ) ; f  . i [ 4   ] [ 4   ]   = f  . a   + f  . a     ; put ( f  . i [ 4   ] [ 4   ]      ) ; f  . i [ 0   ] [ 0   ]   = f  . i [ 4   ] [ 4   ]   * f  . i [ 4   ] [ num terFac arithERR ] i_ndiceList I_F terFac arithERR subExpr ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { Foo f  ; Foo1 f1  ; f  . a  = 100    ; put ( f  . a     ) ; f  . i [ 4   ] [ 4   ]   = f  . a   + f  . a     ; put ( f  . i [ 4   ] [ 4   ]      ) ; f  . i [ 0   ] [ 0   ]   = f  . i [ 4   ] [ 4   ]   * f  . i [ 4   ] [ 4 terFac arithERR ] i_ndiceList I_F terFac arithERR subExpr ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { Foo f  ; Foo1 f1  ; f  . a  = 100    ; put ( f  . a     ) ; f  . i [ 4   ] [ 4   ]   = f  . a   + f  . a     ; put ( f  . i [ 4   ] [ 4   ]      ) ; f  . i [ 0   ] [ 0   ]   = f  . i [ 4   ] [ 4   ]   * f  . i [ 4   ] [ 4  arithERR ] i_ndiceList I_F terFac arithERR subExpr ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { Foo f  ; Foo1 f1  ; f  . a  = 100    ; put ( f  . a     ) ; f  . i [ 4   ] [ 4   ]   = f  . a   + f  . a     ; put ( f  . i [ 4   ] [ 4   ]      ) ; f  . i [ 0   ] [ 0   ]   = f  . i [ 4   ] [ 4   ]   * f  . i [ 4   ] [ 4   ] i_ndiceList I_F terFac arithERR subExpr ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { Foo f  ; Foo1 f1  ; f  . a  = 100    ; put ( f  . a     ) ; f  . i [ 4   ] [ 4   ]   = f  . a   + f  . a     ; put ( f  . i [ 4   ] [ 4   ]      ) ; f  . i [ 0   ] [ 0   ]   = f  . i [ 4   ] [ 4   ]   * f  . i [ 4   ] [ 4   ]  I_F terFac arithERR subExpr ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { Foo f  ; Foo1 f1  ; f  . a  = 100    ; put ( f  . a     ) ; f  . i [ 4   ] [ 4   ]   = f  . a   + f  . a     ; put ( f  . i [ 4   ] [ 4   ]      ) ; f  . i [ 0   ] [ 0   ]   = f  . i [ 4   ] [ 4   ]   * f  . i [ 4   ] [ 4   ]   terFac arithERR subExpr ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { Foo f  ; Foo1 f1  ; f  . a  = 100    ; put ( f  . a     ) ; f  . i [ 4   ] [ 4   ]   = f  . a   + f  . a     ; put ( f  . i [ 4   ] [ 4   ]      ) ; f  . i [ 0   ] [ 0   ]   = f  . i [ 4   ] [ 4   ]   * f  . i [ 4   ] [ 4   ]    arithERR subExpr ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { Foo f  ; Foo1 f1  ; f  . a  = 100    ; put ( f  . a     ) ; f  . i [ 4   ] [ 4   ]   = f  . a   + f  . a     ; put ( f  . i [ 4   ] [ 4   ]      ) ; f  . i [ 0   ] [ 0   ]   = f  . i [ 4   ] [ 4   ]   * f  . i [ 4   ] [ 4   ]     subExpr ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { Foo f  ; Foo1 f1  ; f  . a  = 100    ; put ( f  . a     ) ; f  . i [ 4   ] [ 4   ]   = f  . a   + f  . a     ; put ( f  . i [ 4   ] [ 4   ]      ) ; f  . i [ 0   ] [ 0   ]   = f  . i [ 4   ] [ 4   ]   * f  . i [ 4   ] [ 4   ]      ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { Foo f  ; Foo1 f1  ; f  . a  = 100    ; put ( f  . a     ) ; f  . i [ 4   ] [ 4   ]   = f  . a   + f  . a     ; put ( f  . i [ 4   ] [ 4   ]      ) ; f  . i [ 0   ] [ 0   ]   = f  . i [ 4   ] [ 4   ]   * f  . i [ 4   ] [ 4   ]      ; statement S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { Foo f  ; Foo1 f1  ; f  . a  = 100    ; put ( f  . a     ) ; f  . i [ 4   ] [ 4   ]   = f  . a   + f  . a     ; put ( f  . i [ 4   ] [ 4   ]      ) ; f  . i [ 0   ] [ 0   ]   = f  . i [ 4   ] [ 4   ]   * f  . i [ 4   ] [ 4   ]      ; ctrlStat ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { Foo f  ; Foo1 f1  ; f  . a  = 100    ; put ( f  . a     ) ; f  . i [ 4   ] [ 4   ]   = f  . a   + f  . a     ; put ( f  . i [ 4   ] [ 4   ]      ) ; f  . i [ 0   ] [ 0   ]   = f  . i [ 4   ] [ 4   ]   * f  . i [ 4   ] [ 4   ]      ; put ( expr ) ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { Foo f  ; Foo1 f1  ; f  . a  = 100    ; put ( f  . a     ) ; f  . i [ 4   ] [ 4   ]   = f  . a   + f  . a     ; put ( f  . i [ 4   ] [ 4   ]      ) ; f  . i [ 0   ] [ 0   ]   = f  . i [ 4   ] [ 4   ]   * f  . i [ 4   ] [ 4   ]      ; put ( arithExpr subExpr ) ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { Foo f  ; Foo1 f1  ; f  . a  = 100    ; put ( f  . a     ) ; f  . i [ 4   ] [ 4   ]   = f  . a   + f  . a     ; put ( f  . i [ 4   ] [ 4   ]      ) ; f  . i [ 0   ] [ 0   ]   = f  . i [ 4   ] [ 4   ]   * f  . i [ 4   ] [ 4   ]      ; put ( term arithERR subExpr ) ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { Foo f  ; Foo1 f1  ; f  . a  = 100    ; put ( f  . a     ) ; f  . i [ 4   ] [ 4   ]   = f  . a   + f  . a     ; put ( f  . i [ 4   ] [ 4   ]      ) ; f  . i [ 0   ] [ 0   ]   = f  . i [ 4   ] [ 4   ]   * f  . i [ 4   ] [ 4   ]      ; put ( factor terFac arithERR subExpr ) ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { Foo f  ; Foo1 f1  ; f  . a  = 100    ; put ( f  . a     ) ; f  . i [ 4   ] [ 4   ]   = f  . a   + f  . a     ; put ( f  . i [ 4   ] [ 4   ]      ) ; f  . i [ 0   ] [ 0   ]   = f  . i [ 4   ] [ 4   ]   * f  . i [ 4   ] [ 4   ]      ; put ( id IorP terFac arithERR subExpr ) ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { Foo f  ; Foo1 f1  ; f  . a  = 100    ; put ( f  . a     ) ; f  . i [ 4   ] [ 4   ]   = f  . a   + f  . a     ; put ( f  . i [ 4   ] [ 4   ]      ) ; f  . i [ 0   ] [ 0   ]   = f  . i [ 4   ] [ 4   ]   * f  . i [ 4   ] [ 4   ]      ; put ( f IorP terFac arithERR subExpr ) ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { Foo f  ; Foo1 f1  ; f  . a  = 100    ; put ( f  . a     ) ; f  . i [ 4   ] [ 4   ]   = f  . a   + f  . a     ; put ( f  . i [ 4   ] [ 4   ]      ) ; f  . i [ 0   ] [ 0   ]   = f  . i [ 4   ] [ 4   ]   * f  . i [ 4   ] [ 4   ]      ; put ( f i_ndiceList I_F terFac arithERR subExpr ) ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { Foo f  ; Foo1 f1  ; f  . a  = 100    ; put ( f  . a     ) ; f  . i [ 4   ] [ 4   ]   = f  . a   + f  . a     ; put ( f  . i [ 4   ] [ 4   ]      ) ; f  . i [ 0   ] [ 0   ]   = f  . i [ 4   ] [ 4   ]   * f  . i [ 4   ] [ 4   ]      ; put ( f  I_F terFac arithERR subExpr ) ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { Foo f  ; Foo1 f1  ; f  . a  = 100    ; put ( f  . a     ) ; f  . i [ 4   ] [ 4   ]   = f  . a   + f  . a     ; put ( f  . i [ 4   ] [ 4   ]      ) ; f  . i [ 0   ] [ 0   ]   = f  . i [ 4   ] [ 4   ]   * f  . i [ 4   ] [ 4   ]      ; put ( f  . id IorP terFac arithERR subExpr ) ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { Foo f  ; Foo1 f1  ; f  . a  = 100    ; put ( f  . a     ) ; f  . i [ 4   ] [ 4   ]   = f  . a   + f  . a     ; put ( f  . i [ 4   ] [ 4   ]      ) ; f  . i [ 0   ] [ 0   ]   = f  . i [ 4   ] [ 4   ]   * f  . i [ 4   ] [ 4   ]      ; put ( f  . i IorP terFac arithERR subExpr ) ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { Foo f  ; Foo1 f1  ; f  . a  = 100    ; put ( f  . a     ) ; f  . i [ 4   ] [ 4   ]   = f  . a   + f  . a     ; put ( f  . i [ 4   ] [ 4   ]      ) ; f  . i [ 0   ] [ 0   ]   = f  . i [ 4   ] [ 4   ]   * f  . i [ 4   ] [ 4   ]      ; put ( f  . i i_ndiceList I_F terFac arithERR subExpr ) ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { Foo f  ; Foo1 f1  ; f  . a  = 100    ; put ( f  . a     ) ; f  . i [ 4   ] [ 4   ]   = f  . a   + f  . a     ; put ( f  . i [ 4   ] [ 4   ]      ) ; f  . i [ 0   ] [ 0   ]   = f  . i [ 4   ] [ 4   ]   * f  . i [ 4   ] [ 4   ]      ; put ( f  . i indice i_ndiceList I_F terFac arithERR subExpr ) ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { Foo f  ; Foo1 f1  ; f  . a  = 100    ; put ( f  . a     ) ; f  . i [ 4   ] [ 4   ]   = f  . a   + f  . a     ; put ( f  . i [ 4   ] [ 4   ]      ) ; f  . i [ 0   ] [ 0   ]   = f  . i [ 4   ] [ 4   ]   * f  . i [ 4   ] [ 4   ]      ; put ( f  . i [ arithExpr ] i_ndiceList I_F terFac arithERR subExpr ) ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { Foo f  ; Foo1 f1  ; f  . a  = 100    ; put ( f  . a     ) ; f  . i [ 4   ] [ 4   ]   = f  . a   + f  . a     ; put ( f  . i [ 4   ] [ 4   ]      ) ; f  . i [ 0   ] [ 0   ]   = f  . i [ 4   ] [ 4   ]   * f  . i [ 4   ] [ 4   ]      ; put ( f  . i [ term arithERR ] i_ndiceList I_F terFac arithERR subExpr ) ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { Foo f  ; Foo1 f1  ; f  . a  = 100    ; put ( f  . a     ) ; f  . i [ 4   ] [ 4   ]   = f  . a   + f  . a     ; put ( f  . i [ 4   ] [ 4   ]      ) ; f  . i [ 0   ] [ 0   ]   = f  . i [ 4   ] [ 4   ]   * f  . i [ 4   ] [ 4   ]      ; put ( f  . i [ factor terFac arithERR ] i_ndiceList I_F terFac arithERR subExpr ) ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { Foo f  ; Foo1 f1  ; f  . a  = 100    ; put ( f  . a     ) ; f  . i [ 4   ] [ 4   ]   = f  . a   + f  . a     ; put ( f  . i [ 4   ] [ 4   ]      ) ; f  . i [ 0   ] [ 0   ]   = f  . i [ 4   ] [ 4   ]   * f  . i [ 4   ] [ 4   ]      ; put ( f  . i [ num terFac arithERR ] i_ndiceList I_F terFac arithERR subExpr ) ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { Foo f  ; Foo1 f1  ; f  . a  = 100    ; put ( f  . a     ) ; f  . i [ 4   ] [ 4   ]   = f  . a   + f  . a     ; put ( f  . i [ 4   ] [ 4   ]      ) ; f  . i [ 0   ] [ 0   ]   = f  . i [ 4   ] [ 4   ]   * f  . i [ 4   ] [ 4   ]      ; put ( f  . i [ 0 terFac arithERR ] i_ndiceList I_F terFac arithERR subExpr ) ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { Foo f  ; Foo1 f1  ; f  . a  = 100    ; put ( f  . a     ) ; f  . i [ 4   ] [ 4   ]   = f  . a   + f  . a     ; put ( f  . i [ 4   ] [ 4   ]      ) ; f  . i [ 0   ] [ 0   ]   = f  . i [ 4   ] [ 4   ]   * f  . i [ 4   ] [ 4   ]      ; put ( f  . i [ 0  arithERR ] i_ndiceList I_F terFac arithERR subExpr ) ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { Foo f  ; Foo1 f1  ; f  . a  = 100    ; put ( f  . a     ) ; f  . i [ 4   ] [ 4   ]   = f  . a   + f  . a     ; put ( f  . i [ 4   ] [ 4   ]      ) ; f  . i [ 0   ] [ 0   ]   = f  . i [ 4   ] [ 4   ]   * f  . i [ 4   ] [ 4   ]      ; put ( f  . i [ 0   ] i_ndiceList I_F terFac arithERR subExpr ) ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { Foo f  ; Foo1 f1  ; f  . a  = 100    ; put ( f  . a     ) ; f  . i [ 4   ] [ 4   ]   = f  . a   + f  . a     ; put ( f  . i [ 4   ] [ 4   ]      ) ; f  . i [ 0   ] [ 0   ]   = f  . i [ 4   ] [ 4   ]   * f  . i [ 4   ] [ 4   ]      ; put ( f  . i [ 0   ] indice i_ndiceList I_F terFac arithERR subExpr ) ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { Foo f  ; Foo1 f1  ; f  . a  = 100    ; put ( f  . a     ) ; f  . i [ 4   ] [ 4   ]   = f  . a   + f  . a     ; put ( f  . i [ 4   ] [ 4   ]      ) ; f  . i [ 0   ] [ 0   ]   = f  . i [ 4   ] [ 4   ]   * f  . i [ 4   ] [ 4   ]      ; put ( f  . i [ 0   ] [ arithExpr ] i_ndiceList I_F terFac arithERR subExpr ) ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { Foo f  ; Foo1 f1  ; f  . a  = 100    ; put ( f  . a     ) ; f  . i [ 4   ] [ 4   ]   = f  . a   + f  . a     ; put ( f  . i [ 4   ] [ 4   ]      ) ; f  . i [ 0   ] [ 0   ]   = f  . i [ 4   ] [ 4   ]   * f  . i [ 4   ] [ 4   ]      ; put ( f  . i [ 0   ] [ term arithERR ] i_ndiceList I_F terFac arithERR subExpr ) ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { Foo f  ; Foo1 f1  ; f  . a  = 100    ; put ( f  . a     ) ; f  . i [ 4   ] [ 4   ]   = f  . a   + f  . a     ; put ( f  . i [ 4   ] [ 4   ]      ) ; f  . i [ 0   ] [ 0   ]   = f  . i [ 4   ] [ 4   ]   * f  . i [ 4   ] [ 4   ]      ; put ( f  . i [ 0   ] [ factor terFac arithERR ] i_ndiceList I_F terFac arithERR subExpr ) ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { Foo f  ; Foo1 f1  ; f  . a  = 100    ; put ( f  . a     ) ; f  . i [ 4   ] [ 4   ]   = f  . a   + f  . a     ; put ( f  . i [ 4   ] [ 4   ]      ) ; f  . i [ 0   ] [ 0   ]   = f  . i [ 4   ] [ 4   ]   * f  . i [ 4   ] [ 4   ]      ; put ( f  . i [ 0   ] [ num terFac arithERR ] i_ndiceList I_F terFac arithERR subExpr ) ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { Foo f  ; Foo1 f1  ; f  . a  = 100    ; put ( f  . a     ) ; f  . i [ 4   ] [ 4   ]   = f  . a   + f  . a     ; put ( f  . i [ 4   ] [ 4   ]      ) ; f  . i [ 0   ] [ 0   ]   = f  . i [ 4   ] [ 4   ]   * f  . i [ 4   ] [ 4   ]      ; put ( f  . i [ 0   ] [ 0 terFac arithERR ] i_ndiceList I_F terFac arithERR subExpr ) ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { Foo f  ; Foo1 f1  ; f  . a  = 100    ; put ( f  . a     ) ; f  . i [ 4   ] [ 4   ]   = f  . a   + f  . a     ; put ( f  . i [ 4   ] [ 4   ]      ) ; f  . i [ 0   ] [ 0   ]   = f  . i [ 4   ] [ 4   ]   * f  . i [ 4   ] [ 4   ]      ; put ( f  . i [ 0   ] [ 0  arithERR ] i_ndiceList I_F terFac arithERR subExpr ) ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { Foo f  ; Foo1 f1  ; f  . a  = 100    ; put ( f  . a     ) ; f  . i [ 4   ] [ 4   ]   = f  . a   + f  . a     ; put ( f  . i [ 4   ] [ 4   ]      ) ; f  . i [ 0   ] [ 0   ]   = f  . i [ 4   ] [ 4   ]   * f  . i [ 4   ] [ 4   ]      ; put ( f  . i [ 0   ] [ 0   ] i_ndiceList I_F terFac arithERR subExpr ) ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { Foo f  ; Foo1 f1  ; f  . a  = 100    ; put ( f  . a     ) ; f  . i [ 4   ] [ 4   ]   = f  . a   + f  . a     ; put ( f  . i [ 4   ] [ 4   ]      ) ; f  . i [ 0   ] [ 0   ]   = f  . i [ 4   ] [ 4   ]   * f  . i [ 4   ] [ 4   ]      ; put ( f  . i [ 0   ] [ 0   ]  I_F terFac arithERR subExpr ) ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { Foo f  ; Foo1 f1  ; f  . a  = 100    ; put ( f  . a     ) ; f  . i [ 4   ] [ 4   ]   = f  . a   + f  . a     ; put ( f  . i [ 4   ] [ 4   ]      ) ; f  . i [ 0   ] [ 0   ]   = f  . i [ 4   ] [ 4   ]   * f  . i [ 4   ] [ 4   ]      ; put ( f  . i [ 0   ] [ 0   ]   terFac arithERR subExpr ) ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { Foo f  ; Foo1 f1  ; f  . a  = 100    ; put ( f  . a     ) ; f  . i [ 4   ] [ 4   ]   = f  . a   + f  . a     ; put ( f  . i [ 4   ] [ 4   ]      ) ; f  . i [ 0   ] [ 0   ]   = f  . i [ 4   ] [ 4   ]   * f  . i [ 4   ] [ 4   ]      ; put ( f  . i [ 0   ] [ 0   ]    arithERR subExpr ) ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { Foo f  ; Foo1 f1  ; f  . a  = 100    ; put ( f  . a     ) ; f  . i [ 4   ] [ 4   ]   = f  . a   + f  . a     ; put ( f  . i [ 4   ] [ 4   ]      ) ; f  . i [ 0   ] [ 0   ]   = f  . i [ 4   ] [ 4   ]   * f  . i [ 4   ] [ 4   ]      ; put ( f  . i [ 0   ] [ 0   ]     subExpr ) ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { Foo f  ; Foo1 f1  ; f  . a  = 100    ; put ( f  . a     ) ; f  . i [ 4   ] [ 4   ]   = f  . a   + f  . a     ; put ( f  . i [ 4   ] [ 4   ]      ) ; f  . i [ 0   ] [ 0   ]   = f  . i [ 4   ] [ 4   ]   * f  . i [ 4   ] [ 4   ]      ; put ( f  . i [ 0   ] [ 0   ]      ) ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { Foo f  ; Foo1 f1  ; f  . a  = 100    ; put ( f  . a     ) ; f  . i [ 4   ] [ 4   ]   = f  . a   + f  . a     ; put ( f  . i [ 4   ] [ 4   ]      ) ; f  . i [ 0   ] [ 0   ]   = f  . i [ 4   ] [ 4   ]   * f  . i [ 4   ] [ 4   ]      ; put ( f  . i [ 0   ] [ 0   ]      ) ; statement S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { Foo f  ; Foo1 f1  ; f  . a  = 100    ; put ( f  . a     ) ; f  . i [ 4   ] [ 4   ]   = f  . a   + f  . a     ; put ( f  . i [ 4   ] [ 4   ]      ) ; f  . i [ 0   ] [ 0   ]   = f  . i [ 4   ] [ 4   ]   * f  . i [ 4   ] [ 4   ]      ; put ( f  . i [ 0   ] [ 0   ]      ) ; assignStat ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { Foo f  ; Foo1 f1  ; f  . a  = 100    ; put ( f  . a     ) ; f  . i [ 4   ] [ 4   ]   = f  . a   + f  . a     ; put ( f  . i [ 4   ] [ 4   ]      ) ; f  . i [ 0   ] [ 0   ]   = f  . i [ 4   ] [ 4   ]   * f  . i [ 4   ] [ 4   ]      ; put ( f  . i [ 0   ] [ 0   ]      ) ; variable = expr ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { Foo f  ; Foo1 f1  ; f  . a  = 100    ; put ( f  . a     ) ; f  . i [ 4   ] [ 4   ]   = f  . a   + f  . a     ; put ( f  . i [ 4   ] [ 4   ]      ) ; f  . i [ 0   ] [ 0   ]   = f  . i [ 4   ] [ 4   ]   * f  . i [ 4   ] [ 4   ]      ; put ( f  . i [ 0   ] [ 0   ]      ) ; id i_ndiceList dotNest = expr ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { Foo f  ; Foo1 f1  ; f  . a  = 100    ; put ( f  . a     ) ; f  . i [ 4   ] [ 4   ]   = f  . a   + f  . a     ; put ( f  . i [ 4   ] [ 4   ]      ) ; f  . i [ 0   ] [ 0   ]   = f  . i [ 4   ] [ 4   ]   * f  . i [ 4   ] [ 4   ]      ; put ( f  . i [ 0   ] [ 0   ]      ) ; f i_ndiceList dotNest = expr ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { Foo f  ; Foo1 f1  ; f  . a  = 100    ; put ( f  . a     ) ; f  . i [ 4   ] [ 4   ]   = f  . a   + f  . a     ; put ( f  . i [ 4   ] [ 4   ]      ) ; f  . i [ 0   ] [ 0   ]   = f  . i [ 4   ] [ 4   ]   * f  . i [ 4   ] [ 4   ]      ; put ( f  . i [ 0   ] [ 0   ]      ) ; f  dotNest = expr ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { Foo f  ; Foo1 f1  ; f  . a  = 100    ; put ( f  . a     ) ; f  . i [ 4   ] [ 4   ]   = f  . a   + f  . a     ; put ( f  . i [ 4   ] [ 4   ]      ) ; f  . i [ 0   ] [ 0   ]   = f  . i [ 4   ] [ 4   ]   * f  . i [ 4   ] [ 4   ]      ; put ( f  . i [ 0   ] [ 0   ]      ) ; f  . id i_ndiceList dotNest = expr ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { Foo f  ; Foo1 f1  ; f  . a  = 100    ; put ( f  . a     ) ; f  . i [ 4   ] [ 4   ]   = f  . a   + f  . a     ; put ( f  . i [ 4   ] [ 4   ]      ) ; f  . i [ 0   ] [ 0   ]   = f  . i [ 4   ] [ 4   ]   * f  . i [ 4   ] [ 4   ]      ; put ( f  . i [ 0   ] [ 0   ]      ) ; f  . lol i_ndiceList dotNest = expr ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { Foo f  ; Foo1 f1  ; f  . a  = 100    ; put ( f  . a     ) ; f  . i [ 4   ] [ 4   ]   = f  . a   + f  . a     ; put ( f  . i [ 4   ] [ 4   ]      ) ; f  . i [ 0   ] [ 0   ]   = f  . i [ 4   ] [ 4   ]   * f  . i [ 4   ] [ 4   ]      ; put ( f  . i [ 0   ] [ 0   ]      ) ; f  . lol indice i_ndiceList dotNest = expr ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { Foo f  ; Foo1 f1  ; f  . a  = 100    ; put ( f  . a     ) ; f  . i [ 4   ] [ 4   ]   = f  . a   + f  . a     ; put ( f  . i [ 4   ] [ 4   ]      ) ; f  . i [ 0   ] [ 0   ]   = f  . i [ 4   ] [ 4   ]   * f  . i [ 4   ] [ 4   ]      ; put ( f  . i [ 0   ] [ 0   ]      ) ; f  . lol [ arithExpr ] i_ndiceList dotNest = expr ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { Foo f  ; Foo1 f1  ; f  . a  = 100    ; put ( f  . a     ) ; f  . i [ 4   ] [ 4   ]   = f  . a   + f  . a     ; put ( f  . i [ 4   ] [ 4   ]      ) ; f  . i [ 0   ] [ 0   ]   = f  . i [ 4   ] [ 4   ]   * f  . i [ 4   ] [ 4   ]      ; put ( f  . i [ 0   ] [ 0   ]      ) ; f  . lol [ term arithERR ] i_ndiceList dotNest = expr ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { Foo f  ; Foo1 f1  ; f  . a  = 100    ; put ( f  . a     ) ; f  . i [ 4   ] [ 4   ]   = f  . a   + f  . a     ; put ( f  . i [ 4   ] [ 4   ]      ) ; f  . i [ 0   ] [ 0   ]   = f  . i [ 4   ] [ 4   ]   * f  . i [ 4   ] [ 4   ]      ; put ( f  . i [ 0   ] [ 0   ]      ) ; f  . lol [ factor terFac arithERR ] i_ndiceList dotNest = expr ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { Foo f  ; Foo1 f1  ; f  . a  = 100    ; put ( f  . a     ) ; f  . i [ 4   ] [ 4   ]   = f  . a   + f  . a     ; put ( f  . i [ 4   ] [ 4   ]      ) ; f  . i [ 0   ] [ 0   ]   = f  . i [ 4   ] [ 4   ]   * f  . i [ 4   ] [ 4   ]      ; put ( f  . i [ 0   ] [ 0   ]      ) ; f  . lol [ num terFac arithERR ] i_ndiceList dotNest = expr ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { Foo f  ; Foo1 f1  ; f  . a  = 100    ; put ( f  . a     ) ; f  . i [ 4   ] [ 4   ]   = f  . a   + f  . a     ; put ( f  . i [ 4   ] [ 4   ]      ) ; f  . i [ 0   ] [ 0   ]   = f  . i [ 4   ] [ 4   ]   * f  . i [ 4   ] [ 4   ]      ; put ( f  . i [ 0   ] [ 0   ]      ) ; f  . lol [ 11 terFac arithERR ] i_ndiceList dotNest = expr ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { Foo f  ; Foo1 f1  ; f  . a  = 100    ; put ( f  . a     ) ; f  . i [ 4   ] [ 4   ]   = f  . a   + f  . a     ; put ( f  . i [ 4   ] [ 4   ]      ) ; f  . i [ 0   ] [ 0   ]   = f  . i [ 4   ] [ 4   ]   * f  . i [ 4   ] [ 4   ]      ; put ( f  . i [ 0   ] [ 0   ]      ) ; f  . lol [ 11  arithERR ] i_ndiceList dotNest = expr ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { Foo f  ; Foo1 f1  ; f  . a  = 100    ; put ( f  . a     ) ; f  . i [ 4   ] [ 4   ]   = f  . a   + f  . a     ; put ( f  . i [ 4   ] [ 4   ]      ) ; f  . i [ 0   ] [ 0   ]   = f  . i [ 4   ] [ 4   ]   * f  . i [ 4   ] [ 4   ]      ; put ( f  . i [ 0   ] [ 0   ]      ) ; f  . lol [ 11   ] i_ndiceList dotNest = expr ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { Foo f  ; Foo1 f1  ; f  . a  = 100    ; put ( f  . a     ) ; f  . i [ 4   ] [ 4   ]   = f  . a   + f  . a     ; put ( f  . i [ 4   ] [ 4   ]      ) ; f  . i [ 0   ] [ 0   ]   = f  . i [ 4   ] [ 4   ]   * f  . i [ 4   ] [ 4   ]      ; put ( f  . i [ 0   ] [ 0   ]      ) ; f  . lol [ 11   ] indice i_ndiceList dotNest = expr ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { Foo f  ; Foo1 f1  ; f  . a  = 100    ; put ( f  . a     ) ; f  . i [ 4   ] [ 4   ]   = f  . a   + f  . a     ; put ( f  . i [ 4   ] [ 4   ]      ) ; f  . i [ 0   ] [ 0   ]   = f  . i [ 4   ] [ 4   ]   * f  . i [ 4   ] [ 4   ]      ; put ( f  . i [ 0   ] [ 0   ]      ) ; f  . lol [ 11   ] [ arithExpr ] i_ndiceList dotNest = expr ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { Foo f  ; Foo1 f1  ; f  . a  = 100    ; put ( f  . a     ) ; f  . i [ 4   ] [ 4   ]   = f  . a   + f  . a     ; put ( f  . i [ 4   ] [ 4   ]      ) ; f  . i [ 0   ] [ 0   ]   = f  . i [ 4   ] [ 4   ]   * f  . i [ 4   ] [ 4   ]      ; put ( f  . i [ 0   ] [ 0   ]      ) ; f  . lol [ 11   ] [ term arithERR ] i_ndiceList dotNest = expr ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { Foo f  ; Foo1 f1  ; f  . a  = 100    ; put ( f  . a     ) ; f  . i [ 4   ] [ 4   ]   = f  . a   + f  . a     ; put ( f  . i [ 4   ] [ 4   ]      ) ; f  . i [ 0   ] [ 0   ]   = f  . i [ 4   ] [ 4   ]   * f  . i [ 4   ] [ 4   ]      ; put ( f  . i [ 0   ] [ 0   ]      ) ; f  . lol [ 11   ] [ factor terFac arithERR ] i_ndiceList dotNest = expr ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { Foo f  ; Foo1 f1  ; f  . a  = 100    ; put ( f  . a     ) ; f  . i [ 4   ] [ 4   ]   = f  . a   + f  . a     ; put ( f  . i [ 4   ] [ 4   ]      ) ; f  . i [ 0   ] [ 0   ]   = f  . i [ 4   ] [ 4   ]   * f  . i [ 4   ] [ 4   ]      ; put ( f  . i [ 0   ] [ 0   ]      ) ; f  . lol [ 11   ] [ num terFac arithERR ] i_ndiceList dotNest = expr ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { Foo f  ; Foo1 f1  ; f  . a  = 100    ; put ( f  . a     ) ; f  . i [ 4   ] [ 4   ]   = f  . a   + f  . a     ; put ( f  . i [ 4   ] [ 4   ]      ) ; f  . i [ 0   ] [ 0   ]   = f  . i [ 4   ] [ 4   ]   * f  . i [ 4   ] [ 4   ]      ; put ( f  . i [ 0   ] [ 0   ]      ) ; f  . lol [ 11   ] [ 11 terFac arithERR ] i_ndiceList dotNest = expr ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { Foo f  ; Foo1 f1  ; f  . a  = 100    ; put ( f  . a     ) ; f  . i [ 4   ] [ 4   ]   = f  . a   + f  . a     ; put ( f  . i [ 4   ] [ 4   ]      ) ; f  . i [ 0   ] [ 0   ]   = f  . i [ 4   ] [ 4   ]   * f  . i [ 4   ] [ 4   ]      ; put ( f  . i [ 0   ] [ 0   ]      ) ; f  . lol [ 11   ] [ 11  arithERR ] i_ndiceList dotNest = expr ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { Foo f  ; Foo1 f1  ; f  . a  = 100    ; put ( f  . a     ) ; f  . i [ 4   ] [ 4   ]   = f  . a   + f  . a     ; put ( f  . i [ 4   ] [ 4   ]      ) ; f  . i [ 0   ] [ 0   ]   = f  . i [ 4   ] [ 4   ]   * f  . i [ 4   ] [ 4   ]      ; put ( f  . i [ 0   ] [ 0   ]      ) ; f  . lol [ 11   ] [ 11   ] i_ndiceList dotNest = expr ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { Foo f  ; Foo1 f1  ; f  . a  = 100    ; put ( f  . a     ) ; f  . i [ 4   ] [ 4   ]   = f  . a   + f  . a     ; put ( f  . i [ 4   ] [ 4   ]      ) ; f  . i [ 0   ] [ 0   ]   = f  . i [ 4   ] [ 4   ]   * f  . i [ 4   ] [ 4   ]      ; put ( f  . i [ 0   ] [ 0   ]      ) ; f  . lol [ 11   ] [ 11   ]  dotNest = expr ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { Foo f  ; Foo1 f1  ; f  . a  = 100    ; put ( f  . a     ) ; f  . i [ 4   ] [ 4   ]   = f  . a   + f  . a     ; put ( f  . i [ 4   ] [ 4   ]      ) ; f  . i [ 0   ] [ 0   ]   = f  . i [ 4   ] [ 4   ]   * f  . i [ 4   ] [ 4   ]      ; put ( f  . i [ 0   ] [ 0   ]      ) ; f  . lol [ 11   ] [ 11   ]   = expr ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { Foo f  ; Foo1 f1  ; f  . a  = 100    ; put ( f  . a     ) ; f  . i [ 4   ] [ 4   ]   = f  . a   + f  . a     ; put ( f  . i [ 4   ] [ 4   ]      ) ; f  . i [ 0   ] [ 0   ]   = f  . i [ 4   ] [ 4   ]   * f  . i [ 4   ] [ 4   ]      ; put ( f  . i [ 0   ] [ 0   ]      ) ; f  . lol [ 11   ] [ 11   ]   = arithExpr subExpr ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { Foo f  ; Foo1 f1  ; f  . a  = 100    ; put ( f  . a     ) ; f  . i [ 4   ] [ 4   ]   = f  . a   + f  . a     ; put ( f  . i [ 4   ] [ 4   ]      ) ; f  . i [ 0   ] [ 0   ]   = f  . i [ 4   ] [ 4   ]   * f  . i [ 4   ] [ 4   ]      ; put ( f  . i [ 0   ] [ 0   ]      ) ; f  . lol [ 11   ] [ 11   ]   = term arithERR subExpr ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { Foo f  ; Foo1 f1  ; f  . a  = 100    ; put ( f  . a     ) ; f  . i [ 4   ] [ 4   ]   = f  . a   + f  . a     ; put ( f  . i [ 4   ] [ 4   ]      ) ; f  . i [ 0   ] [ 0   ]   = f  . i [ 4   ] [ 4   ]   * f  . i [ 4   ] [ 4   ]      ; put ( f  . i [ 0   ] [ 0   ]      ) ; f  . lol [ 11   ] [ 11   ]   = factor terFac arithERR subExpr ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { Foo f  ; Foo1 f1  ; f  . a  = 100    ; put ( f  . a     ) ; f  . i [ 4   ] [ 4   ]   = f  . a   + f  . a     ; put ( f  . i [ 4   ] [ 4   ]      ) ; f  . i [ 0   ] [ 0   ]   = f  . i [ 4   ] [ 4   ]   * f  . i [ 4   ] [ 4   ]      ; put ( f  . i [ 0   ] [ 0   ]      ) ; f  . lol [ 11   ] [ 11   ]   = num terFac arithERR subExpr ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { Foo f  ; Foo1 f1  ; f  . a  = 100    ; put ( f  . a     ) ; f  . i [ 4   ] [ 4   ]   = f  . a   + f  . a     ; put ( f  . i [ 4   ] [ 4   ]      ) ; f  . i [ 0   ] [ 0   ]   = f  . i [ 4   ] [ 4   ]   * f  . i [ 4   ] [ 4   ]      ; put ( f  . i [ 0   ] [ 0   ]      ) ; f  . lol [ 11   ] [ 11   ]   = 9999 terFac arithERR subExpr ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { Foo f  ; Foo1 f1  ; f  . a  = 100    ; put ( f  . a     ) ; f  . i [ 4   ] [ 4   ]   = f  . a   + f  . a     ; put ( f  . i [ 4   ] [ 4   ]      ) ; f  . i [ 0   ] [ 0   ]   = f  . i [ 4   ] [ 4   ]   * f  . i [ 4   ] [ 4   ]      ; put ( f  . i [ 0   ] [ 0   ]      ) ; f  . lol [ 11   ] [ 11   ]   = 9999  arithERR subExpr ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { Foo f  ; Foo1 f1  ; f  . a  = 100    ; put ( f  . a     ) ; f  . i [ 4   ] [ 4   ]   = f  . a   + f  . a     ; put ( f  . i [ 4   ] [ 4   ]      ) ; f  . i [ 0   ] [ 0   ]   = f  . i [ 4   ] [ 4   ]   * f  . i [ 4   ] [ 4   ]      ; put ( f  . i [ 0   ] [ 0   ]      ) ; f  . lol [ 11   ] [ 11   ]   = 9999   subExpr ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { Foo f  ; Foo1 f1  ; f  . a  = 100    ; put ( f  . a     ) ; f  . i [ 4   ] [ 4   ]   = f  . a   + f  . a     ; put ( f  . i [ 4   ] [ 4   ]      ) ; f  . i [ 0   ] [ 0   ]   = f  . i [ 4   ] [ 4   ]   * f  . i [ 4   ] [ 4   ]      ; put ( f  . i [ 0   ] [ 0   ]      ) ; f  . lol [ 11   ] [ 11   ]   = 9999    ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { Foo f  ; Foo1 f1  ; f  . a  = 100    ; put ( f  . a     ) ; f  . i [ 4   ] [ 4   ]   = f  . a   + f  . a     ; put ( f  . i [ 4   ] [ 4   ]      ) ; f  . i [ 0   ] [ 0   ]   = f  . i [ 4   ] [ 4   ]   * f  . i [ 4   ] [ 4   ]      ; put ( f  . i [ 0   ] [ 0   ]      ) ; f  . lol [ 11   ] [ 11   ]   = 9999    ; statement S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { Foo f  ; Foo1 f1  ; f  . a  = 100    ; put ( f  . a     ) ; f  . i [ 4   ] [ 4   ]   = f  . a   + f  . a     ; put ( f  . i [ 4   ] [ 4   ]      ) ; f  . i [ 0   ] [ 0   ]   = f  . i [ 4   ] [ 4   ]   * f  . i [ 4   ] [ 4   ]      ; put ( f  . i [ 0   ] [ 0   ]      ) ; f  . lol [ 11   ] [ 11   ]   = 9999    ; ctrlStat ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { Foo f  ; Foo1 f1  ; f  . a  = 100    ; put ( f  . a     ) ; f  . i [ 4   ] [ 4   ]   = f  . a   + f  . a     ; put ( f  . i [ 4   ] [ 4   ]      ) ; f  . i [ 0   ] [ 0   ]   = f  . i [ 4   ] [ 4   ]   * f  . i [ 4   ] [ 4   ]      ; put ( f  . i [ 0   ] [ 0   ]      ) ; f  . lol [ 11   ] [ 11   ]   = 9999    ; put ( expr ) ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { Foo f  ; Foo1 f1  ; f  . a  = 100    ; put ( f  . a     ) ; f  . i [ 4   ] [ 4   ]   = f  . a   + f  . a     ; put ( f  . i [ 4   ] [ 4   ]      ) ; f  . i [ 0   ] [ 0   ]   = f  . i [ 4   ] [ 4   ]   * f  . i [ 4   ] [ 4   ]      ; put ( f  . i [ 0   ] [ 0   ]      ) ; f  . lol [ 11   ] [ 11   ]   = 9999    ; put ( arithExpr subExpr ) ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { Foo f  ; Foo1 f1  ; f  . a  = 100    ; put ( f  . a     ) ; f  . i [ 4   ] [ 4   ]   = f  . a   + f  . a     ; put ( f  . i [ 4   ] [ 4   ]      ) ; f  . i [ 0   ] [ 0   ]   = f  . i [ 4   ] [ 4   ]   * f  . i [ 4   ] [ 4   ]      ; put ( f  . i [ 0   ] [ 0   ]      ) ; f  . lol [ 11   ] [ 11   ]   = 9999    ; put ( term arithERR subExpr ) ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { Foo f  ; Foo1 f1  ; f  . a  = 100    ; put ( f  . a     ) ; f  . i [ 4   ] [ 4   ]   = f  . a   + f  . a     ; put ( f  . i [ 4   ] [ 4   ]      ) ; f  . i [ 0   ] [ 0   ]   = f  . i [ 4   ] [ 4   ]   * f  . i [ 4   ] [ 4   ]      ; put ( f  . i [ 0   ] [ 0   ]      ) ; f  . lol [ 11   ] [ 11   ]   = 9999    ; put ( factor terFac arithERR subExpr ) ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { Foo f  ; Foo1 f1  ; f  . a  = 100    ; put ( f  . a     ) ; f  . i [ 4   ] [ 4   ]   = f  . a   + f  . a     ; put ( f  . i [ 4   ] [ 4   ]      ) ; f  . i [ 0   ] [ 0   ]   = f  . i [ 4   ] [ 4   ]   * f  . i [ 4   ] [ 4   ]      ; put ( f  . i [ 0   ] [ 0   ]      ) ; f  . lol [ 11   ] [ 11   ]   = 9999    ; put ( id IorP terFac arithERR subExpr ) ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { Foo f  ; Foo1 f1  ; f  . a  = 100    ; put ( f  . a     ) ; f  . i [ 4   ] [ 4   ]   = f  . a   + f  . a     ; put ( f  . i [ 4   ] [ 4   ]      ) ; f  . i [ 0   ] [ 0   ]   = f  . i [ 4   ] [ 4   ]   * f  . i [ 4   ] [ 4   ]      ; put ( f  . i [ 0   ] [ 0   ]      ) ; f  . lol [ 11   ] [ 11   ]   = 9999    ; put ( f IorP terFac arithERR subExpr ) ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { Foo f  ; Foo1 f1  ; f  . a  = 100    ; put ( f  . a     ) ; f  . i [ 4   ] [ 4   ]   = f  . a   + f  . a     ; put ( f  . i [ 4   ] [ 4   ]      ) ; f  . i [ 0   ] [ 0   ]   = f  . i [ 4   ] [ 4   ]   * f  . i [ 4   ] [ 4   ]      ; put ( f  . i [ 0   ] [ 0   ]      ) ; f  . lol [ 11   ] [ 11   ]   = 9999    ; put ( f i_ndiceList I_F terFac arithERR subExpr ) ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { Foo f  ; Foo1 f1  ; f  . a  = 100    ; put ( f  . a     ) ; f  . i [ 4   ] [ 4   ]   = f  . a   + f  . a     ; put ( f  . i [ 4   ] [ 4   ]      ) ; f  . i [ 0   ] [ 0   ]   = f  . i [ 4   ] [ 4   ]   * f  . i [ 4   ] [ 4   ]      ; put ( f  . i [ 0   ] [ 0   ]      ) ; f  . lol [ 11   ] [ 11   ]   = 9999    ; put ( f  I_F terFac arithERR subExpr ) ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { Foo f  ; Foo1 f1  ; f  . a  = 100    ; put ( f  . a     ) ; f  . i [ 4   ] [ 4   ]   = f  . a   + f  . a     ; put ( f  . i [ 4   ] [ 4   ]      ) ; f  . i [ 0   ] [ 0   ]   = f  . i [ 4   ] [ 4   ]   * f  . i [ 4   ] [ 4   ]      ; put ( f  . i [ 0   ] [ 0   ]      ) ; f  . lol [ 11   ] [ 11   ]   = 9999    ; put ( f  . id IorP terFac arithERR subExpr ) ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { Foo f  ; Foo1 f1  ; f  . a  = 100    ; put ( f  . a     ) ; f  . i [ 4   ] [ 4   ]   = f  . a   + f  . a     ; put ( f  . i [ 4   ] [ 4   ]      ) ; f  . i [ 0   ] [ 0   ]   = f  . i [ 4   ] [ 4   ]   * f  . i [ 4   ] [ 4   ]      ; put ( f  . i [ 0   ] [ 0   ]      ) ; f  . lol [ 11   ] [ 11   ]   = 9999    ; put ( f  . lol IorP terFac arithERR subExpr ) ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { Foo f  ; Foo1 f1  ; f  . a  = 100    ; put ( f  . a     ) ; f  . i [ 4   ] [ 4   ]   = f  . a   + f  . a     ; put ( f  . i [ 4   ] [ 4   ]      ) ; f  . i [ 0   ] [ 0   ]   = f  . i [ 4   ] [ 4   ]   * f  . i [ 4   ] [ 4   ]      ; put ( f  . i [ 0   ] [ 0   ]      ) ; f  . lol [ 11   ] [ 11   ]   = 9999    ; put ( f  . lol i_ndiceList I_F terFac arithERR subExpr ) ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { Foo f  ; Foo1 f1  ; f  . a  = 100    ; put ( f  . a     ) ; f  . i [ 4   ] [ 4   ]   = f  . a   + f  . a     ; put ( f  . i [ 4   ] [ 4   ]      ) ; f  . i [ 0   ] [ 0   ]   = f  . i [ 4   ] [ 4   ]   * f  . i [ 4   ] [ 4   ]      ; put ( f  . i [ 0   ] [ 0   ]      ) ; f  . lol [ 11   ] [ 11   ]   = 9999    ; put ( f  . lol indice i_ndiceList I_F terFac arithERR subExpr ) ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { Foo f  ; Foo1 f1  ; f  . a  = 100    ; put ( f  . a     ) ; f  . i [ 4   ] [ 4   ]   = f  . a   + f  . a     ; put ( f  . i [ 4   ] [ 4   ]      ) ; f  . i [ 0   ] [ 0   ]   = f  . i [ 4   ] [ 4   ]   * f  . i [ 4   ] [ 4   ]      ; put ( f  . i [ 0   ] [ 0   ]      ) ; f  . lol [ 11   ] [ 11   ]   = 9999    ; put ( f  . lol [ arithExpr ] i_ndiceList I_F terFac arithERR subExpr ) ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { Foo f  ; Foo1 f1  ; f  . a  = 100    ; put ( f  . a     ) ; f  . i [ 4   ] [ 4   ]   = f  . a   + f  . a     ; put ( f  . i [ 4   ] [ 4   ]      ) ; f  . i [ 0   ] [ 0   ]   = f  . i [ 4   ] [ 4   ]   * f  . i [ 4   ] [ 4   ]      ; put ( f  . i [ 0   ] [ 0   ]      ) ; f  . lol [ 11   ] [ 11   ]   = 9999    ; put ( f  . lol [ term arithERR ] i_ndiceList I_F terFac arithERR subExpr ) ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { Foo f  ; Foo1 f1  ; f  . a  = 100    ; put ( f  . a     ) ; f  . i [ 4   ] [ 4   ]   = f  . a   + f  . a     ; put ( f  . i [ 4   ] [ 4   ]      ) ; f  . i [ 0   ] [ 0   ]   = f  . i [ 4   ] [ 4   ]   * f  . i [ 4   ] [ 4   ]      ; put ( f  . i [ 0   ] [ 0   ]      ) ; f  . lol [ 11   ] [ 11   ]   = 9999    ; put ( f  . lol [ factor terFac arithERR ] i_ndiceList I_F terFac arithERR subExpr ) ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { Foo f  ; Foo1 f1  ; f  . a  = 100    ; put ( f  . a     ) ; f  . i [ 4   ] [ 4   ]   = f  . a   + f  . a     ; put ( f  . i [ 4   ] [ 4   ]      ) ; f  . i [ 0   ] [ 0   ]   = f  . i [ 4   ] [ 4   ]   * f  . i [ 4   ] [ 4   ]      ; put ( f  . i [ 0   ] [ 0   ]      ) ; f  . lol [ 11   ] [ 11   ]   = 9999    ; put ( f  . lol [ num terFac arithERR ] i_ndiceList I_F terFac arithERR subExpr ) ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { Foo f  ; Foo1 f1  ; f  . a  = 100    ; put ( f  . a     ) ; f  . i [ 4   ] [ 4   ]   = f  . a   + f  . a     ; put ( f  . i [ 4   ] [ 4   ]      ) ; f  . i [ 0   ] [ 0   ]   = f  . i [ 4   ] [ 4   ]   * f  . i [ 4   ] [ 4   ]      ; put ( f  . i [ 0   ] [ 0   ]      ) ; f  . lol [ 11   ] [ 11   ]   = 9999    ; put ( f  . lol [ 11 terFac arithERR ] i_ndiceList I_F terFac arithERR subExpr ) ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { Foo f  ; Foo1 f1  ; f  . a  = 100    ; put ( f  . a     ) ; f  . i [ 4   ] [ 4   ]   = f  . a   + f  . a     ; put ( f  . i [ 4   ] [ 4   ]      ) ; f  . i [ 0   ] [ 0   ]   = f  . i [ 4   ] [ 4   ]   * f  . i [ 4   ] [ 4   ]      ; put ( f  . i [ 0   ] [ 0   ]      ) ; f  . lol [ 11   ] [ 11   ]   = 9999    ; put ( f  . lol [ 11  arithERR ] i_ndiceList I_F terFac arithERR subExpr ) ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { Foo f  ; Foo1 f1  ; f  . a  = 100    ; put ( f  . a     ) ; f  . i [ 4   ] [ 4   ]   = f  . a   + f  . a     ; put ( f  . i [ 4   ] [ 4   ]      ) ; f  . i [ 0   ] [ 0   ]   = f  . i [ 4   ] [ 4   ]   * f  . i [ 4   ] [ 4   ]      ; put ( f  . i [ 0   ] [ 0   ]      ) ; f  . lol [ 11   ] [ 11   ]   = 9999    ; put ( f  . lol [ 11   ] i_ndiceList I_F terFac arithERR subExpr ) ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { Foo f  ; Foo1 f1  ; f  . a  = 100    ; put ( f  . a     ) ; f  . i [ 4   ] [ 4   ]   = f  . a   + f  . a     ; put ( f  . i [ 4   ] [ 4   ]      ) ; f  . i [ 0   ] [ 0   ]   = f  . i [ 4   ] [ 4   ]   * f  . i [ 4   ] [ 4   ]      ; put ( f  . i [ 0   ] [ 0   ]      ) ; f  . lol [ 11   ] [ 11   ]   = 9999    ; put ( f  . lol [ 11   ] indice i_ndiceList I_F terFac arithERR subExpr ) ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { Foo f  ; Foo1 f1  ; f  . a  = 100    ; put ( f  . a     ) ; f  . i [ 4   ] [ 4   ]   = f  . a   + f  . a     ; put ( f  . i [ 4   ] [ 4   ]      ) ; f  . i [ 0   ] [ 0   ]   = f  . i [ 4   ] [ 4   ]   * f  . i [ 4   ] [ 4   ]      ; put ( f  . i [ 0   ] [ 0   ]      ) ; f  . lol [ 11   ] [ 11   ]   = 9999    ; put ( f  . lol [ 11   ] [ arithExpr ] i_ndiceList I_F terFac arithERR subExpr ) ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { Foo f  ; Foo1 f1  ; f  . a  = 100    ; put ( f  . a     ) ; f  . i [ 4   ] [ 4   ]   = f  . a   + f  . a     ; put ( f  . i [ 4   ] [ 4   ]      ) ; f  . i [ 0   ] [ 0   ]   = f  . i [ 4   ] [ 4   ]   * f  . i [ 4   ] [ 4   ]      ; put ( f  . i [ 0   ] [ 0   ]      ) ; f  . lol [ 11   ] [ 11   ]   = 9999    ; put ( f  . lol [ 11   ] [ term arithERR ] i_ndiceList I_F terFac arithERR subExpr ) ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { Foo f  ; Foo1 f1  ; f  . a  = 100    ; put ( f  . a     ) ; f  . i [ 4   ] [ 4   ]   = f  . a   + f  . a     ; put ( f  . i [ 4   ] [ 4   ]      ) ; f  . i [ 0   ] [ 0   ]   = f  . i [ 4   ] [ 4   ]   * f  . i [ 4   ] [ 4   ]      ; put ( f  . i [ 0   ] [ 0   ]      ) ; f  . lol [ 11   ] [ 11   ]   = 9999    ; put ( f  . lol [ 11   ] [ factor terFac arithERR ] i_ndiceList I_F terFac arithERR subExpr ) ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { Foo f  ; Foo1 f1  ; f  . a  = 100    ; put ( f  . a     ) ; f  . i [ 4   ] [ 4   ]   = f  . a   + f  . a     ; put ( f  . i [ 4   ] [ 4   ]      ) ; f  . i [ 0   ] [ 0   ]   = f  . i [ 4   ] [ 4   ]   * f  . i [ 4   ] [ 4   ]      ; put ( f  . i [ 0   ] [ 0   ]      ) ; f  . lol [ 11   ] [ 11   ]   = 9999    ; put ( f  . lol [ 11   ] [ num terFac arithERR ] i_ndiceList I_F terFac arithERR subExpr ) ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { Foo f  ; Foo1 f1  ; f  . a  = 100    ; put ( f  . a     ) ; f  . i [ 4   ] [ 4   ]   = f  . a   + f  . a     ; put ( f  . i [ 4   ] [ 4   ]      ) ; f  . i [ 0   ] [ 0   ]   = f  . i [ 4   ] [ 4   ]   * f  . i [ 4   ] [ 4   ]      ; put ( f  . i [ 0   ] [ 0   ]      ) ; f  . lol [ 11   ] [ 11   ]   = 9999    ; put ( f  . lol [ 11   ] [ 11 terFac arithERR ] i_ndiceList I_F terFac arithERR subExpr ) ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { Foo f  ; Foo1 f1  ; f  . a  = 100    ; put ( f  . a     ) ; f  . i [ 4   ] [ 4   ]   = f  . a   + f  . a     ; put ( f  . i [ 4   ] [ 4   ]      ) ; f  . i [ 0   ] [ 0   ]   = f  . i [ 4   ] [ 4   ]   * f  . i [ 4   ] [ 4   ]      ; put ( f  . i [ 0   ] [ 0   ]      ) ; f  . lol [ 11   ] [ 11   ]   = 9999    ; put ( f  . lol [ 11   ] [ 11  arithERR ] i_ndiceList I_F terFac arithERR subExpr ) ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { Foo f  ; Foo1 f1  ; f  . a  = 100    ; put ( f  . a     ) ; f  . i [ 4   ] [ 4   ]   = f  . a   + f  . a     ; put ( f  . i [ 4   ] [ 4   ]      ) ; f  . i [ 0   ] [ 0   ]   = f  . i [ 4   ] [ 4   ]   * f  . i [ 4   ] [ 4   ]      ; put ( f  . i [ 0   ] [ 0   ]      ) ; f  . lol [ 11   ] [ 11   ]   = 9999    ; put ( f  . lol [ 11   ] [ 11   ] i_ndiceList I_F terFac arithERR subExpr ) ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { Foo f  ; Foo1 f1  ; f  . a  = 100    ; put ( f  . a     ) ; f  . i [ 4   ] [ 4   ]   = f  . a   + f  . a     ; put ( f  . i [ 4   ] [ 4   ]      ) ; f  . i [ 0   ] [ 0   ]   = f  . i [ 4   ] [ 4   ]   * f  . i [ 4   ] [ 4   ]      ; put ( f  . i [ 0   ] [ 0   ]      ) ; f  . lol [ 11   ] [ 11   ]   = 9999    ; put ( f  . lol [ 11   ] [ 11   ]  I_F terFac arithERR subExpr ) ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { Foo f  ; Foo1 f1  ; f  . a  = 100    ; put ( f  . a     ) ; f  . i [ 4   ] [ 4   ]   = f  . a   + f  . a     ; put ( f  . i [ 4   ] [ 4   ]      ) ; f  . i [ 0   ] [ 0   ]   = f  . i [ 4   ] [ 4   ]   * f  . i [ 4   ] [ 4   ]      ; put ( f  . i [ 0   ] [ 0   ]      ) ; f  . lol [ 11   ] [ 11   ]   = 9999    ; put ( f  . lol [ 11   ] [ 11   ]   terFac arithERR subExpr ) ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { Foo f  ; Foo1 f1  ; f  . a  = 100    ; put ( f  . a     ) ; f  . i [ 4   ] [ 4   ]   = f  . a   + f  . a     ; put ( f  . i [ 4   ] [ 4   ]      ) ; f  . i [ 0   ] [ 0   ]   = f  . i [ 4   ] [ 4   ]   * f  . i [ 4   ] [ 4   ]      ; put ( f  . i [ 0   ] [ 0   ]      ) ; f  . lol [ 11   ] [ 11   ]   = 9999    ; put ( f  . lol [ 11   ] [ 11   ]    arithERR subExpr ) ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { Foo f  ; Foo1 f1  ; f  . a  = 100    ; put ( f  . a     ) ; f  . i [ 4   ] [ 4   ]   = f  . a   + f  . a     ; put ( f  . i [ 4   ] [ 4   ]      ) ; f  . i [ 0   ] [ 0   ]   = f  . i [ 4   ] [ 4   ]   * f  . i [ 4   ] [ 4   ]      ; put ( f  . i [ 0   ] [ 0   ]      ) ; f  . lol [ 11   ] [ 11   ]   = 9999    ; put ( f  . lol [ 11   ] [ 11   ]     subExpr ) ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { Foo f  ; Foo1 f1  ; f  . a  = 100    ; put ( f  . a     ) ; f  . i [ 4   ] [ 4   ]   = f  . a   + f  . a     ; put ( f  . i [ 4   ] [ 4   ]      ) ; f  . i [ 0   ] [ 0   ]   = f  . i [ 4   ] [ 4   ]   * f  . i [ 4   ] [ 4   ]      ; put ( f  . i [ 0   ] [ 0   ]      ) ; f  . lol [ 11   ] [ 11   ]   = 9999    ; put ( f  . lol [ 11   ] [ 11   ]      ) ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { Foo f  ; Foo1 f1  ; f  . a  = 100    ; put ( f  . a     ) ; f  . i [ 4   ] [ 4   ]   = f  . a   + f  . a     ; put ( f  . i [ 4   ] [ 4   ]      ) ; f  . i [ 0   ] [ 0   ]   = f  . i [ 4   ] [ 4   ]   * f  . i [ 4   ] [ 4   ]      ; put ( f  . i [ 0   ] [ 0   ]      ) ; f  . lol [ 11   ] [ 11   ]   = 9999    ; put ( f  . lol [ 11   ] [ 11   ]      ) ; statement S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { Foo f  ; Foo1 f1  ; f  . a  = 100    ; put ( f  . a     ) ; f  . i [ 4   ] [ 4   ]   = f  . a   + f  . a     ; put ( f  . i [ 4   ] [ 4   ]      ) ; f  . i [ 0   ] [ 0   ]   = f  . i [ 4   ] [ 4   ]   * f  . i [ 4   ] [ 4   ]      ; put ( f  . i [ 0   ] [ 0   ]      ) ; f  . lol [ 11   ] [ 11   ]   = 9999    ; put ( f  . lol [ 11   ] [ 11   ]      ) ; assignStat ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { Foo f  ; Foo1 f1  ; f  . a  = 100    ; put ( f  . a     ) ; f  . i [ 4   ] [ 4   ]   = f  . a   + f  . a     ; put ( f  . i [ 4   ] [ 4   ]      ) ; f  . i [ 0   ] [ 0   ]   = f  . i [ 4   ] [ 4   ]   * f  . i [ 4   ] [ 4   ]      ; put ( f  . i [ 0   ] [ 0   ]      ) ; f  . lol [ 11   ] [ 11   ]   = 9999    ; put ( f  . lol [ 11   ] [ 11   ]      ) ; variable = expr ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { Foo f  ; Foo1 f1  ; f  . a  = 100    ; put ( f  . a     ) ; f  . i [ 4   ] [ 4   ]   = f  . a   + f  . a     ; put ( f  . i [ 4   ] [ 4   ]      ) ; f  . i [ 0   ] [ 0   ]   = f  . i [ 4   ] [ 4   ]   * f  . i [ 4   ] [ 4   ]      ; put ( f  . i [ 0   ] [ 0   ]      ) ; f  . lol [ 11   ] [ 11   ]   = 9999    ; put ( f  . lol [ 11   ] [ 11   ]      ) ; id i_ndiceList dotNest = expr ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { Foo f  ; Foo1 f1  ; f  . a  = 100    ; put ( f  . a     ) ; f  . i [ 4   ] [ 4   ]   = f  . a   + f  . a     ; put ( f  . i [ 4   ] [ 4   ]      ) ; f  . i [ 0   ] [ 0   ]   = f  . i [ 4   ] [ 4   ]   * f  . i [ 4   ] [ 4   ]      ; put ( f  . i [ 0   ] [ 0   ]      ) ; f  . lol [ 11   ] [ 11   ]   = 9999    ; put ( f  . lol [ 11   ] [ 11   ]      ) ; f1 i_ndiceList dotNest = expr ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { Foo f  ; Foo1 f1  ; f  . a  = 100    ; put ( f  . a     ) ; f  . i [ 4   ] [ 4   ]   = f  . a   + f  . a     ; put ( f  . i [ 4   ] [ 4   ]      ) ; f  . i [ 0   ] [ 0   ]   = f  . i [ 4   ] [ 4   ]   * f  . i [ 4   ] [ 4   ]      ; put ( f  . i [ 0   ] [ 0   ]      ) ; f  . lol [ 11   ] [ 11   ]   = 9999    ; put ( f  . lol [ 11   ] [ 11   ]      ) ; f1  dotNest = expr ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { Foo f  ; Foo1 f1  ; f  . a  = 100    ; put ( f  . a     ) ; f  . i [ 4   ] [ 4   ]   = f  . a   + f  . a     ; put ( f  . i [ 4   ] [ 4   ]      ) ; f  . i [ 0   ] [ 0   ]   = f  . i [ 4   ] [ 4   ]   * f  . i [ 4   ] [ 4   ]      ; put ( f  . i [ 0   ] [ 0   ]      ) ; f  . lol [ 11   ] [ 11   ]   = 9999    ; put ( f  . lol [ 11   ] [ 11   ]      ) ; f1  . id i_ndiceList dotNest = expr ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { Foo f  ; Foo1 f1  ; f  . a  = 100    ; put ( f  . a     ) ; f  . i [ 4   ] [ 4   ]   = f  . a   + f  . a     ; put ( f  . i [ 4   ] [ 4   ]      ) ; f  . i [ 0   ] [ 0   ]   = f  . i [ 4   ] [ 4   ]   * f  . i [ 4   ] [ 4   ]      ; put ( f  . i [ 0   ] [ 0   ]      ) ; f  . lol [ 11   ] [ 11   ]   = 9999    ; put ( f  . lol [ 11   ] [ 11   ]      ) ; f1  . a i_ndiceList dotNest = expr ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { Foo f  ; Foo1 f1  ; f  . a  = 100    ; put ( f  . a     ) ; f  . i [ 4   ] [ 4   ]   = f  . a   + f  . a     ; put ( f  . i [ 4   ] [ 4   ]      ) ; f  . i [ 0   ] [ 0   ]   = f  . i [ 4   ] [ 4   ]   * f  . i [ 4   ] [ 4   ]      ; put ( f  . i [ 0   ] [ 0   ]      ) ; f  . lol [ 11   ] [ 11   ]   = 9999    ; put ( f  . lol [ 11   ] [ 11   ]      ) ; f1  . a  dotNest = expr ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { Foo f  ; Foo1 f1  ; f  . a  = 100    ; put ( f  . a     ) ; f  . i [ 4   ] [ 4   ]   = f  . a   + f  . a     ; put ( f  . i [ 4   ] [ 4   ]      ) ; f  . i [ 0   ] [ 0   ]   = f  . i [ 4   ] [ 4   ]   * f  . i [ 4   ] [ 4   ]      ; put ( f  . i [ 0   ] [ 0   ]      ) ; f  . lol [ 11   ] [ 11   ]   = 9999    ; put ( f  . lol [ 11   ] [ 11   ]      ) ; f1  . a   = expr ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { Foo f  ; Foo1 f1  ; f  . a  = 100    ; put ( f  . a     ) ; f  . i [ 4   ] [ 4   ]   = f  . a   + f  . a     ; put ( f  . i [ 4   ] [ 4   ]      ) ; f  . i [ 0   ] [ 0   ]   = f  . i [ 4   ] [ 4   ]   * f  . i [ 4   ] [ 4   ]      ; put ( f  . i [ 0   ] [ 0   ]      ) ; f  . lol [ 11   ] [ 11   ]   = 9999    ; put ( f  . lol [ 11   ] [ 11   ]      ) ; f1  . a   = arithExpr subExpr ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { Foo f  ; Foo1 f1  ; f  . a  = 100    ; put ( f  . a     ) ; f  . i [ 4   ] [ 4   ]   = f  . a   + f  . a     ; put ( f  . i [ 4   ] [ 4   ]      ) ; f  . i [ 0   ] [ 0   ]   = f  . i [ 4   ] [ 4   ]   * f  . i [ 4   ] [ 4   ]      ; put ( f  . i [ 0   ] [ 0   ]      ) ; f  . lol [ 11   ] [ 11   ]   = 9999    ; put ( f  . lol [ 11   ] [ 11   ]      ) ; f1  . a   = term arithERR subExpr ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { Foo f  ; Foo1 f1  ; f  . a  = 100    ; put ( f  . a     ) ; f  . i [ 4   ] [ 4   ]   = f  . a   + f  . a     ; put ( f  . i [ 4   ] [ 4   ]      ) ; f  . i [ 0   ] [ 0   ]   = f  . i [ 4   ] [ 4   ]   * f  . i [ 4   ] [ 4   ]      ; put ( f  . i [ 0   ] [ 0   ]      ) ; f  . lol [ 11   ] [ 11   ]   = 9999    ; put ( f  . lol [ 11   ] [ 11   ]      ) ; f1  . a   = factor terFac arithERR subExpr ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { Foo f  ; Foo1 f1  ; f  . a  = 100    ; put ( f  . a     ) ; f  . i [ 4   ] [ 4   ]   = f  . a   + f  . a     ; put ( f  . i [ 4   ] [ 4   ]      ) ; f  . i [ 0   ] [ 0   ]   = f  . i [ 4   ] [ 4   ]   * f  . i [ 4   ] [ 4   ]      ; put ( f  . i [ 0   ] [ 0   ]      ) ; f  . lol [ 11   ] [ 11   ]   = 9999    ; put ( f  . lol [ 11   ] [ 11   ]      ) ; f1  . a   = id IorP terFac arithERR subExpr ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { Foo f  ; Foo1 f1  ; f  . a  = 100    ; put ( f  . a     ) ; f  . i [ 4   ] [ 4   ]   = f  . a   + f  . a     ; put ( f  . i [ 4   ] [ 4   ]      ) ; f  . i [ 0   ] [ 0   ]   = f  . i [ 4   ] [ 4   ]   * f  . i [ 4   ] [ 4   ]      ; put ( f  . i [ 0   ] [ 0   ]      ) ; f  . lol [ 11   ] [ 11   ]   = 9999    ; put ( f  . lol [ 11   ] [ 11   ]      ) ; f1  . a   = f IorP terFac arithERR subExpr ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { Foo f  ; Foo1 f1  ; f  . a  = 100    ; put ( f  . a     ) ; f  . i [ 4   ] [ 4   ]   = f  . a   + f  . a     ; put ( f  . i [ 4   ] [ 4   ]      ) ; f  . i [ 0   ] [ 0   ]   = f  . i [ 4   ] [ 4   ]   * f  . i [ 4   ] [ 4   ]      ; put ( f  . i [ 0   ] [ 0   ]      ) ; f  . lol [ 11   ] [ 11   ]   = 9999    ; put ( f  . lol [ 11   ] [ 11   ]      ) ; f1  . a   = f i_ndiceList I_F terFac arithERR subExpr ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { Foo f  ; Foo1 f1  ; f  . a  = 100    ; put ( f  . a     ) ; f  . i [ 4   ] [ 4   ]   = f  . a   + f  . a     ; put ( f  . i [ 4   ] [ 4   ]      ) ; f  . i [ 0   ] [ 0   ]   = f  . i [ 4   ] [ 4   ]   * f  . i [ 4   ] [ 4   ]      ; put ( f  . i [ 0   ] [ 0   ]      ) ; f  . lol [ 11   ] [ 11   ]   = 9999    ; put ( f  . lol [ 11   ] [ 11   ]      ) ; f1  . a   = f  I_F terFac arithERR subExpr ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { Foo f  ; Foo1 f1  ; f  . a  = 100    ; put ( f  . a     ) ; f  . i [ 4   ] [ 4   ]   = f  . a   + f  . a     ; put ( f  . i [ 4   ] [ 4   ]      ) ; f  . i [ 0   ] [ 0   ]   = f  . i [ 4   ] [ 4   ]   * f  . i [ 4   ] [ 4   ]      ; put ( f  . i [ 0   ] [ 0   ]      ) ; f  . lol [ 11   ] [ 11   ]   = 9999    ; put ( f  . lol [ 11   ] [ 11   ]      ) ; f1  . a   = f  . id IorP terFac arithERR subExpr ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { Foo f  ; Foo1 f1  ; f  . a  = 100    ; put ( f  . a     ) ; f  . i [ 4   ] [ 4   ]   = f  . a   + f  . a     ; put ( f  . i [ 4   ] [ 4   ]      ) ; f  . i [ 0   ] [ 0   ]   = f  . i [ 4   ] [ 4   ]   * f  . i [ 4   ] [ 4   ]      ; put ( f  . i [ 0   ] [ 0   ]      ) ; f  . lol [ 11   ] [ 11   ]   = 9999    ; put ( f  . lol [ 11   ] [ 11   ]      ) ; f1  . a   = f  . lol IorP terFac arithERR subExpr ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { Foo f  ; Foo1 f1  ; f  . a  = 100    ; put ( f  . a     ) ; f  . i [ 4   ] [ 4   ]   = f  . a   + f  . a     ; put ( f  . i [ 4   ] [ 4   ]      ) ; f  . i [ 0   ] [ 0   ]   = f  . i [ 4   ] [ 4   ]   * f  . i [ 4   ] [ 4   ]      ; put ( f  . i [ 0   ] [ 0   ]      ) ; f  . lol [ 11   ] [ 11   ]   = 9999    ; put ( f  . lol [ 11   ] [ 11   ]      ) ; f1  . a   = f  . lol i_ndiceList I_F terFac arithERR subExpr ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { Foo f  ; Foo1 f1  ; f  . a  = 100    ; put ( f  . a     ) ; f  . i [ 4   ] [ 4   ]   = f  . a   + f  . a     ; put ( f  . i [ 4   ] [ 4   ]      ) ; f  . i [ 0   ] [ 0   ]   = f  . i [ 4   ] [ 4   ]   * f  . i [ 4   ] [ 4   ]      ; put ( f  . i [ 0   ] [ 0   ]      ) ; f  . lol [ 11   ] [ 11   ]   = 9999    ; put ( f  . lol [ 11   ] [ 11   ]      ) ; f1  . a   = f  . lol indice i_ndiceList I_F terFac arithERR subExpr ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { Foo f  ; Foo1 f1  ; f  . a  = 100    ; put ( f  . a     ) ; f  . i [ 4   ] [ 4   ]   = f  . a   + f  . a     ; put ( f  . i [ 4   ] [ 4   ]      ) ; f  . i [ 0   ] [ 0   ]   = f  . i [ 4   ] [ 4   ]   * f  . i [ 4   ] [ 4   ]      ; put ( f  . i [ 0   ] [ 0   ]      ) ; f  . lol [ 11   ] [ 11   ]   = 9999    ; put ( f  . lol [ 11   ] [ 11   ]      ) ; f1  . a   = f  . lol [ arithExpr ] i_ndiceList I_F terFac arithERR subExpr ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { Foo f  ; Foo1 f1  ; f  . a  = 100    ; put ( f  . a     ) ; f  . i [ 4   ] [ 4   ]   = f  . a   + f  . a     ; put ( f  . i [ 4   ] [ 4   ]      ) ; f  . i [ 0   ] [ 0   ]   = f  . i [ 4   ] [ 4   ]   * f  . i [ 4   ] [ 4   ]      ; put ( f  . i [ 0   ] [ 0   ]      ) ; f  . lol [ 11   ] [ 11   ]   = 9999    ; put ( f  . lol [ 11   ] [ 11   ]      ) ; f1  . a   = f  . lol [ term arithERR ] i_ndiceList I_F terFac arithERR subExpr ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { Foo f  ; Foo1 f1  ; f  . a  = 100    ; put ( f  . a     ) ; f  . i [ 4   ] [ 4   ]   = f  . a   + f  . a     ; put ( f  . i [ 4   ] [ 4   ]      ) ; f  . i [ 0   ] [ 0   ]   = f  . i [ 4   ] [ 4   ]   * f  . i [ 4   ] [ 4   ]      ; put ( f  . i [ 0   ] [ 0   ]      ) ; f  . lol [ 11   ] [ 11   ]   = 9999    ; put ( f  . lol [ 11   ] [ 11   ]      ) ; f1  . a   = f  . lol [ factor terFac arithERR ] i_ndiceList I_F terFac arithERR subExpr ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { Foo f  ; Foo1 f1  ; f  . a  = 100    ; put ( f  . a     ) ; f  . i [ 4   ] [ 4   ]   = f  . a   + f  . a     ; put ( f  . i [ 4   ] [ 4   ]      ) ; f  . i [ 0   ] [ 0   ]   = f  . i [ 4   ] [ 4   ]   * f  . i [ 4   ] [ 4   ]      ; put ( f  . i [ 0   ] [ 0   ]      ) ; f  . lol [ 11   ] [ 11   ]   = 9999    ; put ( f  . lol [ 11   ] [ 11   ]      ) ; f1  . a   = f  . lol [ num terFac arithERR ] i_ndiceList I_F terFac arithERR subExpr ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { Foo f  ; Foo1 f1  ; f  . a  = 100    ; put ( f  . a     ) ; f  . i [ 4   ] [ 4   ]   = f  . a   + f  . a     ; put ( f  . i [ 4   ] [ 4   ]      ) ; f  . i [ 0   ] [ 0   ]   = f  . i [ 4   ] [ 4   ]   * f  . i [ 4   ] [ 4   ]      ; put ( f  . i [ 0   ] [ 0   ]      ) ; f  . lol [ 11   ] [ 11   ]   = 9999    ; put ( f  . lol [ 11   ] [ 11   ]      ) ; f1  . a   = f  . lol [ 11 terFac arithERR ] i_ndiceList I_F terFac arithERR subExpr ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { Foo f  ; Foo1 f1  ; f  . a  = 100    ; put ( f  . a     ) ; f  . i [ 4   ] [ 4   ]   = f  . a   + f  . a     ; put ( f  . i [ 4   ] [ 4   ]      ) ; f  . i [ 0   ] [ 0   ]   = f  . i [ 4   ] [ 4   ]   * f  . i [ 4   ] [ 4   ]      ; put ( f  . i [ 0   ] [ 0   ]      ) ; f  . lol [ 11   ] [ 11   ]   = 9999    ; put ( f  . lol [ 11   ] [ 11   ]      ) ; f1  . a   = f  . lol [ 11  arithERR ] i_ndiceList I_F terFac arithERR subExpr ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { Foo f  ; Foo1 f1  ; f  . a  = 100    ; put ( f  . a     ) ; f  . i [ 4   ] [ 4   ]   = f  . a   + f  . a     ; put ( f  . i [ 4   ] [ 4   ]      ) ; f  . i [ 0   ] [ 0   ]   = f  . i [ 4   ] [ 4   ]   * f  . i [ 4   ] [ 4   ]      ; put ( f  . i [ 0   ] [ 0   ]      ) ; f  . lol [ 11   ] [ 11   ]   = 9999    ; put ( f  . lol [ 11   ] [ 11   ]      ) ; f1  . a   = f  . lol [ 11   ] i_ndiceList I_F terFac arithERR subExpr ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { Foo f  ; Foo1 f1  ; f  . a  = 100    ; put ( f  . a     ) ; f  . i [ 4   ] [ 4   ]   = f  . a   + f  . a     ; put ( f  . i [ 4   ] [ 4   ]      ) ; f  . i [ 0   ] [ 0   ]   = f  . i [ 4   ] [ 4   ]   * f  . i [ 4   ] [ 4   ]      ; put ( f  . i [ 0   ] [ 0   ]      ) ; f  . lol [ 11   ] [ 11   ]   = 9999    ; put ( f  . lol [ 11   ] [ 11   ]      ) ; f1  . a   = f  . lol [ 11   ] indice i_ndiceList I_F terFac arithERR subExpr ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { Foo f  ; Foo1 f1  ; f  . a  = 100    ; put ( f  . a     ) ; f  . i [ 4   ] [ 4   ]   = f  . a   + f  . a     ; put ( f  . i [ 4   ] [ 4   ]      ) ; f  . i [ 0   ] [ 0   ]   = f  . i [ 4   ] [ 4   ]   * f  . i [ 4   ] [ 4   ]      ; put ( f  . i [ 0   ] [ 0   ]      ) ; f  . lol [ 11   ] [ 11   ]   = 9999    ; put ( f  . lol [ 11   ] [ 11   ]      ) ; f1  . a   = f  . lol [ 11   ] [ arithExpr ] i_ndiceList I_F terFac arithERR subExpr ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { Foo f  ; Foo1 f1  ; f  . a  = 100    ; put ( f  . a     ) ; f  . i [ 4   ] [ 4   ]   = f  . a   + f  . a     ; put ( f  . i [ 4   ] [ 4   ]      ) ; f  . i [ 0   ] [ 0   ]   = f  . i [ 4   ] [ 4   ]   * f  . i [ 4   ] [ 4   ]      ; put ( f  . i [ 0   ] [ 0   ]      ) ; f  . lol [ 11   ] [ 11   ]   = 9999    ; put ( f  . lol [ 11   ] [ 11   ]      ) ; f1  . a   = f  . lol [ 11   ] [ term arithERR ] i_ndiceList I_F terFac arithERR subExpr ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { Foo f  ; Foo1 f1  ; f  . a  = 100    ; put ( f  . a     ) ; f  . i [ 4   ] [ 4   ]   = f  . a   + f  . a     ; put ( f  . i [ 4   ] [ 4   ]      ) ; f  . i [ 0   ] [ 0   ]   = f  . i [ 4   ] [ 4   ]   * f  . i [ 4   ] [ 4   ]      ; put ( f  . i [ 0   ] [ 0   ]      ) ; f  . lol [ 11   ] [ 11   ]   = 9999    ; put ( f  . lol [ 11   ] [ 11   ]      ) ; f1  . a   = f  . lol [ 11   ] [ factor terFac arithERR ] i_ndiceList I_F terFac arithERR subExpr ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { Foo f  ; Foo1 f1  ; f  . a  = 100    ; put ( f  . a     ) ; f  . i [ 4   ] [ 4   ]   = f  . a   + f  . a     ; put ( f  . i [ 4   ] [ 4   ]      ) ; f  . i [ 0   ] [ 0   ]   = f  . i [ 4   ] [ 4   ]   * f  . i [ 4   ] [ 4   ]      ; put ( f  . i [ 0   ] [ 0   ]      ) ; f  . lol [ 11   ] [ 11   ]   = 9999    ; put ( f  . lol [ 11   ] [ 11   ]      ) ; f1  . a   = f  . lol [ 11   ] [ num terFac arithERR ] i_ndiceList I_F terFac arithERR subExpr ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { Foo f  ; Foo1 f1  ; f  . a  = 100    ; put ( f  . a     ) ; f  . i [ 4   ] [ 4   ]   = f  . a   + f  . a     ; put ( f  . i [ 4   ] [ 4   ]      ) ; f  . i [ 0   ] [ 0   ]   = f  . i [ 4   ] [ 4   ]   * f  . i [ 4   ] [ 4   ]      ; put ( f  . i [ 0   ] [ 0   ]      ) ; f  . lol [ 11   ] [ 11   ]   = 9999    ; put ( f  . lol [ 11   ] [ 11   ]      ) ; f1  . a   = f  . lol [ 11   ] [ 11 terFac arithERR ] i_ndiceList I_F terFac arithERR subExpr ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { Foo f  ; Foo1 f1  ; f  . a  = 100    ; put ( f  . a     ) ; f  . i [ 4   ] [ 4   ]   = f  . a   + f  . a     ; put ( f  . i [ 4   ] [ 4   ]      ) ; f  . i [ 0   ] [ 0   ]   = f  . i [ 4   ] [ 4   ]   * f  . i [ 4   ] [ 4   ]      ; put ( f  . i [ 0   ] [ 0   ]      ) ; f  . lol [ 11   ] [ 11   ]   = 9999    ; put ( f  . lol [ 11   ] [ 11   ]      ) ; f1  . a   = f  . lol [ 11   ] [ 11  arithERR ] i_ndiceList I_F terFac arithERR subExpr ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { Foo f  ; Foo1 f1  ; f  . a  = 100    ; put ( f  . a     ) ; f  . i [ 4   ] [ 4   ]   = f  . a   + f  . a     ; put ( f  . i [ 4   ] [ 4   ]      ) ; f  . i [ 0   ] [ 0   ]   = f  . i [ 4   ] [ 4   ]   * f  . i [ 4   ] [ 4   ]      ; put ( f  . i [ 0   ] [ 0   ]      ) ; f  . lol [ 11   ] [ 11   ]   = 9999    ; put ( f  . lol [ 11   ] [ 11   ]      ) ; f1  . a   = f  . lol [ 11   ] [ 11   ] i_ndiceList I_F terFac arithERR subExpr ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { Foo f  ; Foo1 f1  ; f  . a  = 100    ; put ( f  . a     ) ; f  . i [ 4   ] [ 4   ]   = f  . a   + f  . a     ; put ( f  . i [ 4   ] [ 4   ]      ) ; f  . i [ 0   ] [ 0   ]   = f  . i [ 4   ] [ 4   ]   * f  . i [ 4   ] [ 4   ]      ; put ( f  . i [ 0   ] [ 0   ]      ) ; f  . lol [ 11   ] [ 11   ]   = 9999    ; put ( f  . lol [ 11   ] [ 11   ]      ) ; f1  . a   = f  . lol [ 11   ] [ 11   ]  I_F terFac arithERR subExpr ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { Foo f  ; Foo1 f1  ; f  . a  = 100    ; put ( f  . a     ) ; f  . i [ 4   ] [ 4   ]   = f  . a   + f  . a     ; put ( f  . i [ 4   ] [ 4   ]      ) ; f  . i [ 0   ] [ 0   ]   = f  . i [ 4   ] [ 4   ]   * f  . i [ 4   ] [ 4   ]      ; put ( f  . i [ 0   ] [ 0   ]      ) ; f  . lol [ 11   ] [ 11   ]   = 9999    ; put ( f  . lol [ 11   ] [ 11   ]      ) ; f1  . a   = f  . lol [ 11   ] [ 11   ]   terFac arithERR subExpr ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { Foo f  ; Foo1 f1  ; f  . a  = 100    ; put ( f  . a     ) ; f  . i [ 4   ] [ 4   ]   = f  . a   + f  . a     ; put ( f  . i [ 4   ] [ 4   ]      ) ; f  . i [ 0   ] [ 0   ]   = f  . i [ 4   ] [ 4   ]   * f  . i [ 4   ] [ 4   ]      ; put ( f  . i [ 0   ] [ 0   ]      ) ; f  . lol [ 11   ] [ 11   ]   = 9999    ; put ( f  . lol [ 11   ] [ 11   ]      ) ; f1  . a   = f  . lol [ 11   ] [ 11   ]    arithERR subExpr ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { Foo f  ; Foo1 f1  ; f  . a  = 100    ; put ( f  . a     ) ; f  . i [ 4   ] [ 4   ]   = f  . a   + f  . a     ; put ( f  . i [ 4   ] [ 4   ]      ) ; f  . i [ 0   ] [ 0   ]   = f  . i [ 4   ] [ 4   ]   * f  . i [ 4   ] [ 4   ]      ; put ( f  . i [ 0   ] [ 0   ]      ) ; f  . lol [ 11   ] [ 11   ]   = 9999    ; put ( f  . lol [ 11   ] [ 11   ]      ) ; f1  . a   = f  . lol [ 11   ] [ 11   ]     subExpr ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { Foo f  ; Foo1 f1  ; f  . a  = 100    ; put ( f  . a     ) ; f  . i [ 4   ] [ 4   ]   = f  . a   + f  . a     ; put ( f  . i [ 4   ] [ 4   ]      ) ; f  . i [ 0   ] [ 0   ]   = f  . i [ 4   ] [ 4   ]   * f  . i [ 4   ] [ 4   ]      ; put ( f  . i [ 0   ] [ 0   ]      ) ; f  . lol [ 11   ] [ 11   ]   = 9999    ; put ( f  . lol [ 11   ] [ 11   ]      ) ; f1  . a   = f  . lol [ 11   ] [ 11   ]      ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { Foo f  ; Foo1 f1  ; f  . a  = 100    ; put ( f  . a     ) ; f  . i [ 4   ] [ 4   ]   = f  . a   + f  . a     ; put ( f  . i [ 4   ] [ 4   ]      ) ; f  . i [ 0   ] [ 0   ]   = f  . i [ 4   ] [ 4   ]   * f  . i [ 4   ] [ 4   ]      ; put ( f  . i [ 0   ] [ 0   ]      ) ; f  . lol [ 11   ] [ 11   ]   = 9999    ; put ( f  . lol [ 11   ] [ 11   ]      ) ; f1  . a   = f  . lol [ 11   ] [ 11   ]      ; statement S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { Foo f  ; Foo1 f1  ; f  . a  = 100    ; put ( f  . a     ) ; f  . i [ 4   ] [ 4   ]   = f  . a   + f  . a     ; put ( f  . i [ 4   ] [ 4   ]      ) ; f  . i [ 0   ] [ 0   ]   = f  . i [ 4   ] [ 4   ]   * f  . i [ 4   ] [ 4   ]      ; put ( f  . i [ 0   ] [ 0   ]      ) ; f  . lol [ 11   ] [ 11   ]   = 9999    ; put ( f  . lol [ 11   ] [ 11   ]      ) ; f1  . a   = f  . lol [ 11   ] [ 11   ]      ; assignStat ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { Foo f  ; Foo1 f1  ; f  . a  = 100    ; put ( f  . a     ) ; f  . i [ 4   ] [ 4   ]   = f  . a   + f  . a     ; put ( f  . i [ 4   ] [ 4   ]      ) ; f  . i [ 0   ] [ 0   ]   = f  . i [ 4   ] [ 4   ]   * f  . i [ 4   ] [ 4   ]      ; put ( f  . i [ 0   ] [ 0   ]      ) ; f  . lol [ 11   ] [ 11   ]   = 9999    ; put ( f  . lol [ 11   ] [ 11   ]      ) ; f1  . a   = f  . lol [ 11   ] [ 11   ]      ; variable = expr ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { Foo f  ; Foo1 f1  ; f  . a  = 100    ; put ( f  . a     ) ; f  . i [ 4   ] [ 4   ]   = f  . a   + f  . a     ; put ( f  . i [ 4   ] [ 4   ]      ) ; f  . i [ 0   ] [ 0   ]   = f  . i [ 4   ] [ 4   ]   * f  . i [ 4   ] [ 4   ]      ; put ( f  . i [ 0   ] [ 0   ]      ) ; f  . lol [ 11   ] [ 11   ]   = 9999    ; put ( f  . lol [ 11   ] [ 11   ]      ) ; f1  . a   = f  . lol [ 11   ] [ 11   ]      ; id i_ndiceList dotNest = expr ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { Foo f  ; Foo1 f1  ; f  . a  = 100    ; put ( f  . a     ) ; f  . i [ 4   ] [ 4   ]   = f  . a   + f  . a     ; put ( f  . i [ 4   ] [ 4   ]      ) ; f  . i [ 0   ] [ 0   ]   = f  . i [ 4   ] [ 4   ]   * f  . i [ 4   ] [ 4   ]      ; put ( f  . i [ 0   ] [ 0   ]      ) ; f  . lol [ 11   ] [ 11   ]   = 9999    ; put ( f  . lol [ 11   ] [ 11   ]      ) ; f1  . a   = f  . lol [ 11   ] [ 11   ]      ; f1 i_ndiceList dotNest = expr ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { Foo f  ; Foo1 f1  ; f  . a  = 100    ; put ( f  . a     ) ; f  . i [ 4   ] [ 4   ]   = f  . a   + f  . a     ; put ( f  . i [ 4   ] [ 4   ]      ) ; f  . i [ 0   ] [ 0   ]   = f  . i [ 4   ] [ 4   ]   * f  . i [ 4   ] [ 4   ]      ; put ( f  . i [ 0   ] [ 0   ]      ) ; f  . lol [ 11   ] [ 11   ]   = 9999    ; put ( f  . lol [ 11   ] [ 11   ]      ) ; f1  . a   = f  . lol [ 11   ] [ 11   ]      ; f1  dotNest = expr ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { Foo f  ; Foo1 f1  ; f  . a  = 100    ; put ( f  . a     ) ; f  . i [ 4   ] [ 4   ]   = f  . a   + f  . a     ; put ( f  . i [ 4   ] [ 4   ]      ) ; f  . i [ 0   ] [ 0   ]   = f  . i [ 4   ] [ 4   ]   * f  . i [ 4   ] [ 4   ]      ; put ( f  . i [ 0   ] [ 0   ]      ) ; f  . lol [ 11   ] [ 11   ]   = 9999    ; put ( f  . lol [ 11   ] [ 11   ]      ) ; f1  . a   = f  . lol [ 11   ] [ 11   ]      ; f1  . id i_ndiceList dotNest = expr ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { Foo f  ; Foo1 f1  ; f  . a  = 100    ; put ( f  . a     ) ; f  . i [ 4   ] [ 4   ]   = f  . a   + f  . a     ; put ( f  . i [ 4   ] [ 4   ]      ) ; f  . i [ 0   ] [ 0   ]   = f  . i [ 4   ] [ 4   ]   * f  . i [ 4   ] [ 4   ]      ; put ( f  . i [ 0   ] [ 0   ]      ) ; f  . lol [ 11   ] [ 11   ]   = 9999    ; put ( f  . lol [ 11   ] [ 11   ]      ) ; f1  . a   = f  . lol [ 11   ] [ 11   ]      ; f1  . a i_ndiceList dotNest = expr ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { Foo f  ; Foo1 f1  ; f  . a  = 100    ; put ( f  . a     ) ; f  . i [ 4   ] [ 4   ]   = f  . a   + f  . a     ; put ( f  . i [ 4   ] [ 4   ]      ) ; f  . i [ 0   ] [ 0   ]   = f  . i [ 4   ] [ 4   ]   * f  . i [ 4   ] [ 4   ]      ; put ( f  . i [ 0   ] [ 0   ]      ) ; f  . lol [ 11   ] [ 11   ]   = 9999    ; put ( f  . lol [ 11   ] [ 11   ]      ) ; f1  . a   = f  . lol [ 11   ] [ 11   ]      ; f1  . a  dotNest = expr ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { Foo f  ; Foo1 f1  ; f  . a  = 100    ; put ( f  . a     ) ; f  . i [ 4   ] [ 4   ]   = f  . a   + f  . a     ; put ( f  . i [ 4   ] [ 4   ]      ) ; f  . i [ 0   ] [ 0   ]   = f  . i [ 4   ] [ 4   ]   * f  . i [ 4   ] [ 4   ]      ; put ( f  . i [ 0   ] [ 0   ]      ) ; f  . lol [ 11   ] [ 11   ]   = 9999    ; put ( f  . lol [ 11   ] [ 11   ]      ) ; f1  . a   = f  . lol [ 11   ] [ 11   ]      ; f1  . a   = expr ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { Foo f  ; Foo1 f1  ; f  . a  = 100    ; put ( f  . a     ) ; f  . i [ 4   ] [ 4   ]   = f  . a   + f  . a     ; put ( f  . i [ 4   ] [ 4   ]      ) ; f  . i [ 0   ] [ 0   ]   = f  . i [ 4   ] [ 4   ]   * f  . i [ 4   ] [ 4   ]      ; put ( f  . i [ 0   ] [ 0   ]      ) ; f  . lol [ 11   ] [ 11   ]   = 9999    ; put ( f  . lol [ 11   ] [ 11   ]      ) ; f1  . a   = f  . lol [ 11   ] [ 11   ]      ; f1  . a   = arithExpr subExpr ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { Foo f  ; Foo1 f1  ; f  . a  = 100    ; put ( f  . a     ) ; f  . i [ 4   ] [ 4   ]   = f  . a   + f  . a     ; put ( f  . i [ 4   ] [ 4   ]      ) ; f  . i [ 0   ] [ 0   ]   = f  . i [ 4   ] [ 4   ]   * f  . i [ 4   ] [ 4   ]      ; put ( f  . i [ 0   ] [ 0   ]      ) ; f  . lol [ 11   ] [ 11   ]   = 9999    ; put ( f  . lol [ 11   ] [ 11   ]      ) ; f1  . a   = f  . lol [ 11   ] [ 11   ]      ; f1  . a   = term arithERR subExpr ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { Foo f  ; Foo1 f1  ; f  . a  = 100    ; put ( f  . a     ) ; f  . i [ 4   ] [ 4   ]   = f  . a   + f  . a     ; put ( f  . i [ 4   ] [ 4   ]      ) ; f  . i [ 0   ] [ 0   ]   = f  . i [ 4   ] [ 4   ]   * f  . i [ 4   ] [ 4   ]      ; put ( f  . i [ 0   ] [ 0   ]      ) ; f  . lol [ 11   ] [ 11   ]   = 9999    ; put ( f  . lol [ 11   ] [ 11   ]      ) ; f1  . a   = f  . lol [ 11   ] [ 11   ]      ; f1  . a   = factor terFac arithERR subExpr ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { Foo f  ; Foo1 f1  ; f  . a  = 100    ; put ( f  . a     ) ; f  . i [ 4   ] [ 4   ]   = f  . a   + f  . a     ; put ( f  . i [ 4   ] [ 4   ]      ) ; f  . i [ 0   ] [ 0   ]   = f  . i [ 4   ] [ 4   ]   * f  . i [ 4   ] [ 4   ]      ; put ( f  . i [ 0   ] [ 0   ]      ) ; f  . lol [ 11   ] [ 11   ]   = 9999    ; put ( f  . lol [ 11   ] [ 11   ]      ) ; f1  . a   = f  . lol [ 11   ] [ 11   ]      ; f1  . a   = id IorP terFac arithERR subExpr ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { Foo f  ; Foo1 f1  ; f  . a  = 100    ; put ( f  . a     ) ; f  . i [ 4   ] [ 4   ]   = f  . a   + f  . a     ; put ( f  . i [ 4   ] [ 4   ]      ) ; f  . i [ 0   ] [ 0   ]   = f  . i [ 4   ] [ 4   ]   * f  . i [ 4   ] [ 4   ]      ; put ( f  . i [ 0   ] [ 0   ]      ) ; f  . lol [ 11   ] [ 11   ]   = 9999    ; put ( f  . lol [ 11   ] [ 11   ]      ) ; f1  . a   = f  . lol [ 11   ] [ 11   ]      ; f1  . a   = f1 IorP terFac arithERR subExpr ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { Foo f  ; Foo1 f1  ; f  . a  = 100    ; put ( f  . a     ) ; f  . i [ 4   ] [ 4   ]   = f  . a   + f  . a     ; put ( f  . i [ 4   ] [ 4   ]      ) ; f  . i [ 0   ] [ 0   ]   = f  . i [ 4   ] [ 4   ]   * f  . i [ 4   ] [ 4   ]      ; put ( f  . i [ 0   ] [ 0   ]      ) ; f  . lol [ 11   ] [ 11   ]   = 9999    ; put ( f  . lol [ 11   ] [ 11   ]      ) ; f1  . a   = f  . lol [ 11   ] [ 11   ]      ; f1  . a   = f1 i_ndiceList I_F terFac arithERR subExpr ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { Foo f  ; Foo1 f1  ; f  . a  = 100    ; put ( f  . a     ) ; f  . i [ 4   ] [ 4   ]   = f  . a   + f  . a     ; put ( f  . i [ 4   ] [ 4   ]      ) ; f  . i [ 0   ] [ 0   ]   = f  . i [ 4   ] [ 4   ]   * f  . i [ 4   ] [ 4   ]      ; put ( f  . i [ 0   ] [ 0   ]      ) ; f  . lol [ 11   ] [ 11   ]   = 9999    ; put ( f  . lol [ 11   ] [ 11   ]      ) ; f1  . a   = f  . lol [ 11   ] [ 11   ]      ; f1  . a   = f1  I_F terFac arithERR subExpr ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { Foo f  ; Foo1 f1  ; f  . a  = 100    ; put ( f  . a     ) ; f  . i [ 4   ] [ 4   ]   = f  . a   + f  . a     ; put ( f  . i [ 4   ] [ 4   ]      ) ; f  . i [ 0   ] [ 0   ]   = f  . i [ 4   ] [ 4   ]   * f  . i [ 4   ] [ 4   ]      ; put ( f  . i [ 0   ] [ 0   ]      ) ; f  . lol [ 11   ] [ 11   ]   = 9999    ; put ( f  . lol [ 11   ] [ 11   ]      ) ; f1  . a   = f  . lol [ 11   ] [ 11   ]      ; f1  . a   = f1  . id IorP terFac arithERR subExpr ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { Foo f  ; Foo1 f1  ; f  . a  = 100    ; put ( f  . a     ) ; f  . i [ 4   ] [ 4   ]   = f  . a   + f  . a     ; put ( f  . i [ 4   ] [ 4   ]      ) ; f  . i [ 0   ] [ 0   ]   = f  . i [ 4   ] [ 4   ]   * f  . i [ 4   ] [ 4   ]      ; put ( f  . i [ 0   ] [ 0   ]      ) ; f  . lol [ 11   ] [ 11   ]   = 9999    ; put ( f  . lol [ 11   ] [ 11   ]      ) ; f1  . a   = f  . lol [ 11   ] [ 11   ]      ; f1  . a   = f1  . a IorP terFac arithERR subExpr ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { Foo f  ; Foo1 f1  ; f  . a  = 100    ; put ( f  . a     ) ; f  . i [ 4   ] [ 4   ]   = f  . a   + f  . a     ; put ( f  . i [ 4   ] [ 4   ]      ) ; f  . i [ 0   ] [ 0   ]   = f  . i [ 4   ] [ 4   ]   * f  . i [ 4   ] [ 4   ]      ; put ( f  . i [ 0   ] [ 0   ]      ) ; f  . lol [ 11   ] [ 11   ]   = 9999    ; put ( f  . lol [ 11   ] [ 11   ]      ) ; f1  . a   = f  . lol [ 11   ] [ 11   ]      ; f1  . a   = f1  . a  terFac arithERR subExpr ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { Foo f  ; Foo1 f1  ; f  . a  = 100    ; put ( f  . a     ) ; f  . i [ 4   ] [ 4   ]   = f  . a   + f  . a     ; put ( f  . i [ 4   ] [ 4   ]      ) ; f  . i [ 0   ] [ 0   ]   = f  . i [ 4   ] [ 4   ]   * f  . i [ 4   ] [ 4   ]      ; put ( f  . i [ 0   ] [ 0   ]      ) ; f  . lol [ 11   ] [ 11   ]   = 9999    ; put ( f  . lol [ 11   ] [ 11   ]      ) ; f1  . a   = f  . lol [ 11   ] [ 11   ]      ; f1  . a   = f1  . a   arithERR subExpr ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { Foo f  ; Foo1 f1  ; f  . a  = 100    ; put ( f  . a     ) ; f  . i [ 4   ] [ 4   ]   = f  . a   + f  . a     ; put ( f  . i [ 4   ] [ 4   ]      ) ; f  . i [ 0   ] [ 0   ]   = f  . i [ 4   ] [ 4   ]   * f  . i [ 4   ] [ 4   ]      ; put ( f  . i [ 0   ] [ 0   ]      ) ; f  . lol [ 11   ] [ 11   ]   = 9999    ; put ( f  . lol [ 11   ] [ 11   ]      ) ; f1  . a   = f  . lol [ 11   ] [ 11   ]      ; f1  . a   = f1  . a   addOp term arithERR subExpr ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { Foo f  ; Foo1 f1  ; f  . a  = 100    ; put ( f  . a     ) ; f  . i [ 4   ] [ 4   ]   = f  . a   + f  . a     ; put ( f  . i [ 4   ] [ 4   ]      ) ; f  . i [ 0   ] [ 0   ]   = f  . i [ 4   ] [ 4   ]   * f  . i [ 4   ] [ 4   ]      ; put ( f  . i [ 0   ] [ 0   ]      ) ; f  . lol [ 11   ] [ 11   ]   = 9999    ; put ( f  . lol [ 11   ] [ 11   ]      ) ; f1  . a   = f  . lol [ 11   ] [ 11   ]      ; f1  . a   = f1  . a   + term arithERR subExpr ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { Foo f  ; Foo1 f1  ; f  . a  = 100    ; put ( f  . a     ) ; f  . i [ 4   ] [ 4   ]   = f  . a   + f  . a     ; put ( f  . i [ 4   ] [ 4   ]      ) ; f  . i [ 0   ] [ 0   ]   = f  . i [ 4   ] [ 4   ]   * f  . i [ 4   ] [ 4   ]      ; put ( f  . i [ 0   ] [ 0   ]      ) ; f  . lol [ 11   ] [ 11   ]   = 9999    ; put ( f  . lol [ 11   ] [ 11   ]      ) ; f1  . a   = f  . lol [ 11   ] [ 11   ]      ; f1  . a   = f1  . a   + factor terFac arithERR subExpr ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { Foo f  ; Foo1 f1  ; f  . a  = 100    ; put ( f  . a     ) ; f  . i [ 4   ] [ 4   ]   = f  . a   + f  . a     ; put ( f  . i [ 4   ] [ 4   ]      ) ; f  . i [ 0   ] [ 0   ]   = f  . i [ 4   ] [ 4   ]   * f  . i [ 4   ] [ 4   ]      ; put ( f  . i [ 0   ] [ 0   ]      ) ; f  . lol [ 11   ] [ 11   ]   = 9999    ; put ( f  . lol [ 11   ] [ 11   ]      ) ; f1  . a   = f  . lol [ 11   ] [ 11   ]      ; f1  . a   = f1  . a   + num terFac arithERR subExpr ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { Foo f  ; Foo1 f1  ; f  . a  = 100    ; put ( f  . a     ) ; f  . i [ 4   ] [ 4   ]   = f  . a   + f  . a     ; put ( f  . i [ 4   ] [ 4   ]      ) ; f  . i [ 0   ] [ 0   ]   = f  . i [ 4   ] [ 4   ]   * f  . i [ 4   ] [ 4   ]      ; put ( f  . i [ 0   ] [ 0   ]      ) ; f  . lol [ 11   ] [ 11   ]   = 9999    ; put ( f  . lol [ 11   ] [ 11   ]      ) ; f1  . a   = f  . lol [ 11   ] [ 11   ]      ; f1  . a   = f1  . a   + 1 terFac arithERR subExpr ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { Foo f  ; Foo1 f1  ; f  . a  = 100    ; put ( f  . a     ) ; f  . i [ 4   ] [ 4   ]   = f  . a   + f  . a     ; put ( f  . i [ 4   ] [ 4   ]      ) ; f  . i [ 0   ] [ 0   ]   = f  . i [ 4   ] [ 4   ]   * f  . i [ 4   ] [ 4   ]      ; put ( f  . i [ 0   ] [ 0   ]      ) ; f  . lol [ 11   ] [ 11   ]   = 9999    ; put ( f  . lol [ 11   ] [ 11   ]      ) ; f1  . a   = f  . lol [ 11   ] [ 11   ]      ; f1  . a   = f1  . a   + 1  arithERR subExpr ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { Foo f  ; Foo1 f1  ; f  . a  = 100    ; put ( f  . a     ) ; f  . i [ 4   ] [ 4   ]   = f  . a   + f  . a     ; put ( f  . i [ 4   ] [ 4   ]      ) ; f  . i [ 0   ] [ 0   ]   = f  . i [ 4   ] [ 4   ]   * f  . i [ 4   ] [ 4   ]      ; put ( f  . i [ 0   ] [ 0   ]      ) ; f  . lol [ 11   ] [ 11   ]   = 9999    ; put ( f  . lol [ 11   ] [ 11   ]      ) ; f1  . a   = f  . lol [ 11   ] [ 11   ]      ; f1  . a   = f1  . a   + 1   subExpr ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { Foo f  ; Foo1 f1  ; f  . a  = 100    ; put ( f  . a     ) ; f  . i [ 4   ] [ 4   ]   = f  . a   + f  . a     ; put ( f  . i [ 4   ] [ 4   ]      ) ; f  . i [ 0   ] [ 0   ]   = f  . i [ 4   ] [ 4   ]   * f  . i [ 4   ] [ 4   ]      ; put ( f  . i [ 0   ] [ 0   ]      ) ; f  . lol [ 11   ] [ 11   ]   = 9999    ; put ( f  . lol [ 11   ] [ 11   ]      ) ; f1  . a   = f  . lol [ 11   ] [ 11   ]      ; f1  . a   = f1  . a   + 1    ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { Foo f  ; Foo1 f1  ; f  . a  = 100    ; put ( f  . a     ) ; f  . i [ 4   ] [ 4   ]   = f  . a   + f  . a     ; put ( f  . i [ 4   ] [ 4   ]      ) ; f  . i [ 0   ] [ 0   ]   = f  . i [ 4   ] [ 4   ]   * f  . i [ 4   ] [ 4   ]      ; put ( f  . i [ 0   ] [ 0   ]      ) ; f  . lol [ 11   ] [ 11   ]   = 9999    ; put ( f  . lol [ 11   ] [ 11   ]      ) ; f1  . a   = f  . lol [ 11   ] [ 11   ]      ; f1  . a   = f1  . a   + 1    ; statement S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { Foo f  ; Foo1 f1  ; f  . a  = 100    ; put ( f  . a     ) ; f  . i [ 4   ] [ 4   ]   = f  . a   + f  . a     ; put ( f  . i [ 4   ] [ 4   ]      ) ; f  . i [ 0   ] [ 0   ]   = f  . i [ 4   ] [ 4   ]   * f  . i [ 4   ] [ 4   ]      ; put ( f  . i [ 0   ] [ 0   ]      ) ; f  . lol [ 11   ] [ 11   ]   = 9999    ; put ( f  . lol [ 11   ] [ 11   ]      ) ; f1  . a   = f  . lol [ 11   ] [ 11   ]      ; f1  . a   = f1  . a   + 1    ; ctrlStat ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { Foo f  ; Foo1 f1  ; f  . a  = 100    ; put ( f  . a     ) ; f  . i [ 4   ] [ 4   ]   = f  . a   + f  . a     ; put ( f  . i [ 4   ] [ 4   ]      ) ; f  . i [ 0   ] [ 0   ]   = f  . i [ 4   ] [ 4   ]   * f  . i [ 4   ] [ 4   ]      ; put ( f  . i [ 0   ] [ 0   ]      ) ; f  . lol [ 11   ] [ 11   ]   = 9999    ; put ( f  . lol [ 11   ] [ 11   ]      ) ; f1  . a   = f  . lol [ 11   ] [ 11   ]      ; f1  . a   = f1  . a   + 1    ; put ( expr ) ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { Foo f  ; Foo1 f1  ; f  . a  = 100    ; put ( f  . a     ) ; f  . i [ 4   ] [ 4   ]   = f  . a   + f  . a     ; put ( f  . i [ 4   ] [ 4   ]      ) ; f  . i [ 0   ] [ 0   ]   = f  . i [ 4   ] [ 4   ]   * f  . i [ 4   ] [ 4   ]      ; put ( f  . i [ 0   ] [ 0   ]      ) ; f  . lol [ 11   ] [ 11   ]   = 9999    ; put ( f  . lol [ 11   ] [ 11   ]      ) ; f1  . a   = f  . lol [ 11   ] [ 11   ]      ; f1  . a   = f1  . a   + 1    ; put ( arithExpr subExpr ) ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { Foo f  ; Foo1 f1  ; f  . a  = 100    ; put ( f  . a     ) ; f  . i [ 4   ] [ 4   ]   = f  . a   + f  . a     ; put ( f  . i [ 4   ] [ 4   ]      ) ; f  . i [ 0   ] [ 0   ]   = f  . i [ 4   ] [ 4   ]   * f  . i [ 4   ] [ 4   ]      ; put ( f  . i [ 0   ] [ 0   ]      ) ; f  . lol [ 11   ] [ 11   ]   = 9999    ; put ( f  . lol [ 11   ] [ 11   ]      ) ; f1  . a   = f  . lol [ 11   ] [ 11   ]      ; f1  . a   = f1  . a   + 1    ; put ( term arithERR subExpr ) ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { Foo f  ; Foo1 f1  ; f  . a  = 100    ; put ( f  . a     ) ; f  . i [ 4   ] [ 4   ]   = f  . a   + f  . a     ; put ( f  . i [ 4   ] [ 4   ]      ) ; f  . i [ 0   ] [ 0   ]   = f  . i [ 4   ] [ 4   ]   * f  . i [ 4   ] [ 4   ]      ; put ( f  . i [ 0   ] [ 0   ]      ) ; f  . lol [ 11   ] [ 11   ]   = 9999    ; put ( f  . lol [ 11   ] [ 11   ]      ) ; f1  . a   = f  . lol [ 11   ] [ 11   ]      ; f1  . a   = f1  . a   + 1    ; put ( factor terFac arithERR subExpr ) ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { Foo f  ; Foo1 f1  ; f  . a  = 100    ; put ( f  . a     ) ; f  . i [ 4   ] [ 4   ]   = f  . a   + f  . a     ; put ( f  . i [ 4   ] [ 4   ]      ) ; f  . i [ 0   ] [ 0   ]   = f  . i [ 4   ] [ 4   ]   * f  . i [ 4   ] [ 4   ]      ; put ( f  . i [ 0   ] [ 0   ]      ) ; f  . lol [ 11   ] [ 11   ]   = 9999    ; put ( f  . lol [ 11   ] [ 11   ]      ) ; f1  . a   = f  . lol [ 11   ] [ 11   ]      ; f1  . a   = f1  . a   + 1    ; put ( id IorP terFac arithERR subExpr ) ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { Foo f  ; Foo1 f1  ; f  . a  = 100    ; put ( f  . a     ) ; f  . i [ 4   ] [ 4   ]   = f  . a   + f  . a     ; put ( f  . i [ 4   ] [ 4   ]      ) ; f  . i [ 0   ] [ 0   ]   = f  . i [ 4   ] [ 4   ]   * f  . i [ 4   ] [ 4   ]      ; put ( f  . i [ 0   ] [ 0   ]      ) ; f  . lol [ 11   ] [ 11   ]   = 9999    ; put ( f  . lol [ 11   ] [ 11   ]      ) ; f1  . a   = f  . lol [ 11   ] [ 11   ]      ; f1  . a   = f1  . a   + 1    ; put ( f1 IorP terFac arithERR subExpr ) ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { Foo f  ; Foo1 f1  ; f  . a  = 100    ; put ( f  . a     ) ; f  . i [ 4   ] [ 4   ]   = f  . a   + f  . a     ; put ( f  . i [ 4   ] [ 4   ]      ) ; f  . i [ 0   ] [ 0   ]   = f  . i [ 4   ] [ 4   ]   * f  . i [ 4   ] [ 4   ]      ; put ( f  . i [ 0   ] [ 0   ]      ) ; f  . lol [ 11   ] [ 11   ]   = 9999    ; put ( f  . lol [ 11   ] [ 11   ]      ) ; f1  . a   = f  . lol [ 11   ] [ 11   ]      ; f1  . a   = f1  . a   + 1    ; put ( f1 i_ndiceList I_F terFac arithERR subExpr ) ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { Foo f  ; Foo1 f1  ; f  . a  = 100    ; put ( f  . a     ) ; f  . i [ 4   ] [ 4   ]   = f  . a   + f  . a     ; put ( f  . i [ 4   ] [ 4   ]      ) ; f  . i [ 0   ] [ 0   ]   = f  . i [ 4   ] [ 4   ]   * f  . i [ 4   ] [ 4   ]      ; put ( f  . i [ 0   ] [ 0   ]      ) ; f  . lol [ 11   ] [ 11   ]   = 9999    ; put ( f  . lol [ 11   ] [ 11   ]      ) ; f1  . a   = f  . lol [ 11   ] [ 11   ]      ; f1  . a   = f1  . a   + 1    ; put ( f1  I_F terFac arithERR subExpr ) ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { Foo f  ; Foo1 f1  ; f  . a  = 100    ; put ( f  . a     ) ; f  . i [ 4   ] [ 4   ]   = f  . a   + f  . a     ; put ( f  . i [ 4   ] [ 4   ]      ) ; f  . i [ 0   ] [ 0   ]   = f  . i [ 4   ] [ 4   ]   * f  . i [ 4   ] [ 4   ]      ; put ( f  . i [ 0   ] [ 0   ]      ) ; f  . lol [ 11   ] [ 11   ]   = 9999    ; put ( f  . lol [ 11   ] [ 11   ]      ) ; f1  . a   = f  . lol [ 11   ] [ 11   ]      ; f1  . a   = f1  . a   + 1    ; put ( f1  . id IorP terFac arithERR subExpr ) ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { Foo f  ; Foo1 f1  ; f  . a  = 100    ; put ( f  . a     ) ; f  . i [ 4   ] [ 4   ]   = f  . a   + f  . a     ; put ( f  . i [ 4   ] [ 4   ]      ) ; f  . i [ 0   ] [ 0   ]   = f  . i [ 4   ] [ 4   ]   * f  . i [ 4   ] [ 4   ]      ; put ( f  . i [ 0   ] [ 0   ]      ) ; f  . lol [ 11   ] [ 11   ]   = 9999    ; put ( f  . lol [ 11   ] [ 11   ]      ) ; f1  . a   = f  . lol [ 11   ] [ 11   ]      ; f1  . a   = f1  . a   + 1    ; put ( f1  . a IorP terFac arithERR subExpr ) ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { Foo f  ; Foo1 f1  ; f  . a  = 100    ; put ( f  . a     ) ; f  . i [ 4   ] [ 4   ]   = f  . a   + f  . a     ; put ( f  . i [ 4   ] [ 4   ]      ) ; f  . i [ 0   ] [ 0   ]   = f  . i [ 4   ] [ 4   ]   * f  . i [ 4   ] [ 4   ]      ; put ( f  . i [ 0   ] [ 0   ]      ) ; f  . lol [ 11   ] [ 11   ]   = 9999    ; put ( f  . lol [ 11   ] [ 11   ]      ) ; f1  . a   = f  . lol [ 11   ] [ 11   ]      ; f1  . a   = f1  . a   + 1    ; put ( f1  . a  terFac arithERR subExpr ) ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { Foo f  ; Foo1 f1  ; f  . a  = 100    ; put ( f  . a     ) ; f  . i [ 4   ] [ 4   ]   = f  . a   + f  . a     ; put ( f  . i [ 4   ] [ 4   ]      ) ; f  . i [ 0   ] [ 0   ]   = f  . i [ 4   ] [ 4   ]   * f  . i [ 4   ] [ 4   ]      ; put ( f  . i [ 0   ] [ 0   ]      ) ; f  . lol [ 11   ] [ 11   ]   = 9999    ; put ( f  . lol [ 11   ] [ 11   ]      ) ; f1  . a   = f  . lol [ 11   ] [ 11   ]      ; f1  . a   = f1  . a   + 1    ; put ( f1  . a   arithERR subExpr ) ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { Foo f  ; Foo1 f1  ; f  . a  = 100    ; put ( f  . a     ) ; f  . i [ 4   ] [ 4   ]   = f  . a   + f  . a     ; put ( f  . i [ 4   ] [ 4   ]      ) ; f  . i [ 0   ] [ 0   ]   = f  . i [ 4   ] [ 4   ]   * f  . i [ 4   ] [ 4   ]      ; put ( f  . i [ 0   ] [ 0   ]      ) ; f  . lol [ 11   ] [ 11   ]   = 9999    ; put ( f  . lol [ 11   ] [ 11   ]      ) ; f1  . a   = f  . lol [ 11   ] [ 11   ]      ; f1  . a   = f1  . a   + 1    ; put ( f1  . a    subExpr ) ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { Foo f  ; Foo1 f1  ; f  . a  = 100    ; put ( f  . a     ) ; f  . i [ 4   ] [ 4   ]   = f  . a   + f  . a     ; put ( f  . i [ 4   ] [ 4   ]      ) ; f  . i [ 0   ] [ 0   ]   = f  . i [ 4   ] [ 4   ]   * f  . i [ 4   ] [ 4   ]      ; put ( f  . i [ 0   ] [ 0   ]      ) ; f  . lol [ 11   ] [ 11   ]   = 9999    ; put ( f  . lol [ 11   ] [ 11   ]      ) ; f1  . a   = f  . lol [ 11   ] [ 11   ]      ; f1  . a   = f1  . a   + 1    ; put ( f1  . a     ) ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { Foo f  ; Foo1 f1  ; f  . a  = 100    ; put ( f  . a     ) ; f  . i [ 4   ] [ 4   ]   = f  . a   + f  . a     ; put ( f  . i [ 4   ] [ 4   ]      ) ; f  . i [ 0   ] [ 0   ]   = f  . i [ 4   ] [ 4   ]   * f  . i [ 4   ] [ 4   ]      ; put ( f  . i [ 0   ] [ 0   ]      ) ; f  . lol [ 11   ] [ 11   ]   = 9999    ; put ( f  . lol [ 11   ] [ 11   ]      ) ; f1  . a   = f  . lol [ 11   ] [ 11   ]      ; f1  . a   = f1  . a   + 1    ; put ( f1  . a     ) ;  } ; funcDefList
[INFO][SYNTAX]class Foo1 { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ; class Foo { int i  [ 10 ]   [ 10 ]   ; int a  ; int lol  [ 100 ]   ;     } ;  program { Foo f  ; Foo1 f1  ; f  . a  = 100    ; put ( f  . a     ) ; f  . i [ 4   ] [ 4   ]   = f  . a   + f  . a     ; put ( f  . i [ 4   ] [ 4   ]      ) ; f  . i [ 0   ] [ 0   ]   = f  . i [ 4   ] [ 4   ]   * f  . i [ 4   ] [ 4   ]      ; put ( f  . i [ 0   ] [ 0   ]      ) ; f  . lol [ 11   ] [ 11   ]   = 9999    ; put ( f  . lol [ 11   ] [ 11   ]      ) ; f1  . a   = f  . lol [ 11   ] [ 11   ]      ; f1  . a   = f1  . a   + 1    ; put ( f1  . a     ) ;  } ; 
