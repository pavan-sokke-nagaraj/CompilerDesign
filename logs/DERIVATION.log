[INFO][SYNTAX]prog
[INFO][SYNTAX]classDeclList progBody
[INFO][SYNTAX]ClassDecl classDeclList progBody
[INFO][SYNTAX]class id { varDecFunDef } ; classDeclList progBody
[INFO][SYNTAX]class Foo1 { varDecFunDef } ; classDeclList progBody
[INFO][SYNTAX]class Foo1 {  } ; classDeclList progBody
[INFO][SYNTAX]class Foo1 {  } ;  progBody
[INFO][SYNTAX]class Foo1 {  } ;  program funcBody ; funcDefList
[INFO][SYNTAX]class Foo1 {  } ;  program { bodyCode } ; funcDefList
[INFO][SYNTAX]class Foo1 {  } ;  program { id body_Code2 } ; funcDefList
[INFO][SYNTAX]class Foo1 {  } ;  program { c body_Code2 } ; funcDefList
[INFO][SYNTAX]class Foo1 {  } ;  program { c i_ndiceList dotList = expr ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 {  } ;  program { c  dotList = expr ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 {  } ;  program { c   = expr ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 {  } ;  program { c   = arithExpr subExpr ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 {  } ;  program { c   = term arithERR subExpr ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 {  } ;  program { c   = factor terFac arithERR subExpr ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 {  } ;  program { c   = id IorP terFac arithERR subExpr ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 {  } ;  program { c   = minA IorP terFac arithERR subExpr ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 {  } ;  program { c   = minA ( aParams ) terFac arithERR subExpr ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 {  } ;  program { c   = minA ( expr aPTailList ) terFac arithERR subExpr ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 {  } ;  program { c   = minA ( arithExpr subExpr aPTailList ) terFac arithERR subExpr ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 {  } ;  program { c   = minA ( term arithERR subExpr aPTailList ) terFac arithERR subExpr ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 {  } ;  program { c   = minA ( factor terFac arithERR subExpr aPTailList ) terFac arithERR subExpr ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 {  } ;  program { c   = minA ( id IorP terFac arithERR subExpr aPTailList ) terFac arithERR subExpr ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 {  } ;  program { c   = minA ( a IorP terFac arithERR subExpr aPTailList ) terFac arithERR subExpr ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 {  } ;  program { c   = minA ( a  terFac arithERR subExpr aPTailList ) terFac arithERR subExpr ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 {  } ;  program { c   = minA ( a   arithERR subExpr aPTailList ) terFac arithERR subExpr ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 {  } ;  program { c   = minA ( a    subExpr aPTailList ) terFac arithERR subExpr ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 {  } ;  program { c   = minA ( a     aPTailList ) terFac arithERR subExpr ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 {  } ;  program { c   = minA ( a     A_P_T aPTailList ) terFac arithERR subExpr ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 {  } ;  program { c   = minA ( a     , expr aPTailList ) terFac arithERR subExpr ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 {  } ;  program { c   = minA ( a     , arithExpr subExpr aPTailList ) terFac arithERR subExpr ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 {  } ;  program { c   = minA ( a     , term arithERR subExpr aPTailList ) terFac arithERR subExpr ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 {  } ;  program { c   = minA ( a     , factor terFac arithERR subExpr aPTailList ) terFac arithERR subExpr ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 {  } ;  program { c   = minA ( a     , id IorP terFac arithERR subExpr aPTailList ) terFac arithERR subExpr ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 {  } ;  program { c   = minA ( a     , b IorP terFac arithERR subExpr aPTailList ) terFac arithERR subExpr ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 {  } ;  program { c   = minA ( a     , b  terFac arithERR subExpr aPTailList ) terFac arithERR subExpr ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 {  } ;  program { c   = minA ( a     , b   arithERR subExpr aPTailList ) terFac arithERR subExpr ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 {  } ;  program { c   = minA ( a     , b    subExpr aPTailList ) terFac arithERR subExpr ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 {  } ;  program { c   = minA ( a     , b     aPTailList ) terFac arithERR subExpr ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 {  } ;  program { c   = minA ( a     , b      ) terFac arithERR subExpr ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 {  } ;  program { c   = minA ( a     , b      )  arithERR subExpr ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 {  } ;  program { c   = minA ( a     , b      )   subExpr ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 {  } ;  program { c   = minA ( a     , b      )    ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 {  } ;  program { c   = minA ( a     , b      )    ;  } ; funcDefList
[INFO][SYNTAX]class Foo1 {  } ;  program { c   = minA ( a     , b      )    ;  } ; 
