[INFO][SYNTAX]prog
[INFO][SYNTAX]classDeclList progBody
[INFO][SYNTAX]ClassDecl classDeclList progBody
[INFO][SYNTAX]class id { varDecFunDef } ; classDeclList progBody
[INFO][SYNTAX]class Foo1 { varDecFunDef } ; classDeclList progBody
[INFO][SYNTAX]class Foo1 { type id var_DecFunDef1 } ; classDeclList progBody
[INFO][SYNTAX]class Foo1 { int id var_DecFunDef1 } ; classDeclList progBody
[INFO][SYNTAX]class Foo1 { int a var_DecFunDef1 } ; classDeclList progBody
[INFO][SYNTAX]class Foo1 { int a arraySizeList ; varDecFunDef  } ; classDeclList progBody
[INFO][SYNTAX]class Foo1 { int a  ; varDecFunDef  } ; classDeclList progBody
[INFO][SYNTAX]class Foo1 { int a  ; type id var_DecFunDef1  } ; classDeclList progBody
[INFO][SYNTAX]class Foo1 { int a  ; int id var_DecFunDef1  } ; classDeclList progBody
[INFO][SYNTAX]class Foo1 { int a  ; int min var_DecFunDef1  } ; classDeclList progBody
[INFO][SYNTAX]class Foo1 { int a  ; int min ( fParams ) funcBody ; funcDefList  } ; classDeclList progBody
[INFO][SYNTAX]class Foo1 { int a  ; int min (  ) funcBody ; funcDefList  } ; classDeclList progBody
[INFO][SYNTAX]class Foo1 { int a  ; int min (  ) { bodyCode } ; funcDefList  } ; classDeclList progBody
[INFO][SYNTAX]class Foo1 { int a  ; int min (  ) { ctrlStat ; S_LIST } ; funcDefList  } ; classDeclList progBody
[INFO][SYNTAX]class Foo1 { int a  ; int min (  ) { return ( expr ) ; S_LIST } ; funcDefList  } ; classDeclList progBody
[INFO][SYNTAX]class Foo1 { int a  ; int min (  ) { return ( arithExpr subExpr ) ; S_LIST } ; funcDefList  } ; classDeclList progBody
[INFO][SYNTAX]class Foo1 { int a  ; int min (  ) { return ( term arithERR subExpr ) ; S_LIST } ; funcDefList  } ; classDeclList progBody
[INFO][SYNTAX]class Foo1 { int a  ; int min (  ) { return ( factor terFac arithERR subExpr ) ; S_LIST } ; funcDefList  } ; classDeclList progBody
[INFO][SYNTAX]class Foo1 { int a  ; int min (  ) { return ( id IorP terFac arithERR subExpr ) ; S_LIST } ; funcDefList  } ; classDeclList progBody
[INFO][SYNTAX]class Foo1 { int a  ; int min (  ) { return ( a IorP terFac arithERR subExpr ) ; S_LIST } ; funcDefList  } ; classDeclList progBody
[INFO][SYNTAX]class Foo1 { int a  ; int min (  ) { return ( a  terFac arithERR subExpr ) ; S_LIST } ; funcDefList  } ; classDeclList progBody
[INFO][SYNTAX]class Foo1 { int a  ; int min (  ) { return ( a   arithERR subExpr ) ; S_LIST } ; funcDefList  } ; classDeclList progBody
[INFO][SYNTAX]class Foo1 { int a  ; int min (  ) { return ( a    subExpr ) ; S_LIST } ; funcDefList  } ; classDeclList progBody
[INFO][SYNTAX]class Foo1 { int a  ; int min (  ) { return ( a     ) ; S_LIST } ; funcDefList  } ; classDeclList progBody
[INFO][SYNTAX]class Foo1 { int a  ; int min (  ) { return ( a     ) ;  } ; funcDefList  } ; classDeclList progBody
[INFO][SYNTAX]class Foo1 { int a  ; int min (  ) { return ( a     ) ;  } ;   } ; classDeclList progBody
[INFO][SYNTAX]class Foo1 { int a  ; int min (  ) { return ( a     ) ;  } ;   } ; ClassDecl classDeclList progBody
[INFO][SYNTAX]class Foo1 { int a  ; int min (  ) { return ( a     ) ;  } ;   } ; class id { varDecFunDef } ; classDeclList progBody
[INFO][SYNTAX]class Foo1 { int a  ; int min (  ) { return ( a     ) ;  } ;   } ; class Foo { varDecFunDef } ; classDeclList progBody
[INFO][SYNTAX]class Foo1 { int a  ; int min (  ) { return ( a     ) ;  } ;   } ; class Foo { type id var_DecFunDef1 } ; classDeclList progBody
[INFO][SYNTAX]class Foo1 { int a  ; int min (  ) { return ( a     ) ;  } ;   } ; class Foo { int id var_DecFunDef1 } ; classDeclList progBody
[INFO][SYNTAX]class Foo1 { int a  ; int min (  ) { return ( a     ) ;  } ;   } ; class Foo { int a var_DecFunDef1 } ; classDeclList progBody
[INFO][SYNTAX]class Foo1 { int a  ; int min (  ) { return ( a     ) ;  } ;   } ; class Foo { int a arraySizeList ; varDecFunDef  } ; classDeclList progBody
[INFO][SYNTAX]class Foo1 { int a  ; int min (  ) { return ( a     ) ;  } ;   } ; class Foo { int a  ; varDecFunDef  } ; classDeclList progBody
[INFO][SYNTAX]class Foo1 { int a  ; int min (  ) { return ( a     ) ;  } ;   } ; class Foo { int a  ; type id var_DecFunDef1  } ; classDeclList progBody
[INFO][SYNTAX]class Foo1 { int a  ; int min (  ) { return ( a     ) ;  } ;   } ; class Foo { int a  ; Foo1 id var_DecFunDef1  } ; classDeclList progBody
[INFO][SYNTAX]class Foo1 { int a  ; int min (  ) { return ( a     ) ;  } ;   } ; class Foo { int a  ; Foo1 f1 var_DecFunDef1  } ; classDeclList progBody
[INFO][SYNTAX]class Foo1 { int a  ; int min (  ) { return ( a     ) ;  } ;   } ; class Foo { int a  ; Foo1 f1 arraySizeList ; varDecFunDef   } ; classDeclList progBody
[INFO][SYNTAX]class Foo1 { int a  ; int min (  ) { return ( a     ) ;  } ;   } ; class Foo { int a  ; Foo1 f1  ; varDecFunDef   } ; classDeclList progBody
[INFO][SYNTAX]class Foo1 { int a  ; int min (  ) { return ( a     ) ;  } ;   } ; class Foo { int a  ; Foo1 f1  ; type id var_DecFunDef1   } ; classDeclList progBody
[INFO][SYNTAX]class Foo1 { int a  ; int min (  ) { return ( a     ) ;  } ;   } ; class Foo { int a  ; Foo1 f1  ; int id var_DecFunDef1   } ; classDeclList progBody
[INFO][SYNTAX]class Foo1 { int a  ; int min (  ) { return ( a     ) ;  } ;   } ; class Foo { int a  ; Foo1 f1  ; int min var_DecFunDef1   } ; classDeclList progBody
[INFO][SYNTAX]class Foo1 { int a  ; int min (  ) { return ( a     ) ;  } ;   } ; class Foo { int a  ; Foo1 f1  ; int min ( fParams ) funcBody ; funcDefList   } ; classDeclList progBody
[INFO][SYNTAX]class Foo1 { int a  ; int min (  ) { return ( a     ) ;  } ;   } ; class Foo { int a  ; Foo1 f1  ; int min (  ) funcBody ; funcDefList   } ; classDeclList progBody
[INFO][SYNTAX]class Foo1 { int a  ; int min (  ) { return ( a     ) ;  } ;   } ; class Foo { int a  ; Foo1 f1  ; int min (  ) { bodyCode } ; funcDefList   } ; classDeclList progBody
[INFO][SYNTAX]class Foo1 { int a  ; int min (  ) { return ( a     ) ;  } ;   } ; class Foo { int a  ; Foo1 f1  ; int min (  ) { ctrlStat ; S_LIST } ; funcDefList   } ; classDeclList progBody
[INFO][SYNTAX]class Foo1 { int a  ; int min (  ) { return ( a     ) ;  } ;   } ; class Foo { int a  ; Foo1 f1  ; int min (  ) { return ( expr ) ; S_LIST } ; funcDefList   } ; classDeclList progBody
[INFO][SYNTAX]class Foo1 { int a  ; int min (  ) { return ( a     ) ;  } ;   } ; class Foo { int a  ; Foo1 f1  ; int min (  ) { return ( arithExpr subExpr ) ; S_LIST } ; funcDefList   } ; classDeclList progBody
[INFO][SYNTAX]class Foo1 { int a  ; int min (  ) { return ( a     ) ;  } ;   } ; class Foo { int a  ; Foo1 f1  ; int min (  ) { return ( term arithERR subExpr ) ; S_LIST } ; funcDefList   } ; classDeclList progBody
[INFO][SYNTAX]class Foo1 { int a  ; int min (  ) { return ( a     ) ;  } ;   } ; class Foo { int a  ; Foo1 f1  ; int min (  ) { return ( factor terFac arithERR subExpr ) ; S_LIST } ; funcDefList   } ; classDeclList progBody
[INFO][SYNTAX]class Foo1 { int a  ; int min (  ) { return ( a     ) ;  } ;   } ; class Foo { int a  ; Foo1 f1  ; int min (  ) { return ( id IorP terFac arithERR subExpr ) ; S_LIST } ; funcDefList   } ; classDeclList progBody
[INFO][SYNTAX]class Foo1 { int a  ; int min (  ) { return ( a     ) ;  } ;   } ; class Foo { int a  ; Foo1 f1  ; int min (  ) { return ( a IorP terFac arithERR subExpr ) ; S_LIST } ; funcDefList   } ; classDeclList progBody
[INFO][SYNTAX]class Foo1 { int a  ; int min (  ) { return ( a     ) ;  } ;   } ; class Foo { int a  ; Foo1 f1  ; int min (  ) { return ( a  terFac arithERR subExpr ) ; S_LIST } ; funcDefList   } ; classDeclList progBody
[INFO][SYNTAX]class Foo1 { int a  ; int min (  ) { return ( a     ) ;  } ;   } ; class Foo { int a  ; Foo1 f1  ; int min (  ) { return ( a   arithERR subExpr ) ; S_LIST } ; funcDefList   } ; classDeclList progBody
[INFO][SYNTAX]class Foo1 { int a  ; int min (  ) { return ( a     ) ;  } ;   } ; class Foo { int a  ; Foo1 f1  ; int min (  ) { return ( a    subExpr ) ; S_LIST } ; funcDefList   } ; classDeclList progBody
[INFO][SYNTAX]class Foo1 { int a  ; int min (  ) { return ( a     ) ;  } ;   } ; class Foo { int a  ; Foo1 f1  ; int min (  ) { return ( a     ) ; S_LIST } ; funcDefList   } ; classDeclList progBody
[INFO][SYNTAX]class Foo1 { int a  ; int min (  ) { return ( a     ) ;  } ;   } ; class Foo { int a  ; Foo1 f1  ; int min (  ) { return ( a     ) ;  } ; funcDefList   } ; classDeclList progBody
[INFO][SYNTAX]class Foo1 { int a  ; int min (  ) { return ( a     ) ;  } ;   } ; class Foo { int a  ; Foo1 f1  ; int min (  ) { return ( a     ) ;  } ;    } ; classDeclList progBody
[INFO][SYNTAX]class Foo1 { int a  ; int min (  ) { return ( a     ) ;  } ;   } ; class Foo { int a  ; Foo1 f1  ; int min (  ) { return ( a     ) ;  } ;    } ;  progBody
[INFO][SYNTAX]class Foo1 { int a  ; int min (  ) { return ( a     ) ;  } ;   } ; class Foo { int a  ; Foo1 f1  ; int min (  ) { return ( a     ) ;  } ;    } ;  program funcBody ; funcDefList
[INFO][SYNTAX]class Foo1 { int a  ; int min (  ) { return ( a     ) ;  } ;   } ; class Foo { int a  ; Foo1 f1  ; int min (  ) { return ( a     ) ;  } ;    } ;  program { bodyCode } ; funcDefList
[INFO][SYNTAX]class Foo1 { int a  ; int min (  ) { return ( a     ) ;  } ;   } ; class Foo { int a  ; Foo1 f1  ; int min (  ) { return ( a     ) ;  } ;    } ;  program { int id arraySizeList ; bodyCode } ; funcDefList
[INFO][SYNTAX]class Foo1 { int a  ; int min (  ) { return ( a     ) ;  } ;   } ; class Foo { int a  ; Foo1 f1  ; int min (  ) { return ( a     ) ;  } ;    } ;  program { int id arraySizeList ; bodyCode } ; funcDefList
[INFO][SYNTAX]class Foo1 { int a  ; int min (  ) { return ( a     ) ;  } ;   } ; class Foo { int a  ; Foo1 f1  ; int min (  ) { return ( a     ) ;  } ;    } ;  program { int a arraySizeList ; bodyCode } ; funcDefList
[INFO][SYNTAX]class Foo1 { int a  ; int min (  ) { return ( a     ) ;  } ;   } ; class Foo { int a  ; Foo1 f1  ; int min (  ) { return ( a     ) ;  } ;    } ;  program { int a  ; bodyCode } ; funcDefList
[INFO][SYNTAX]class Foo1 { int a  ; int min (  ) { return ( a     ) ;  } ;   } ; class Foo { int a  ; Foo1 f1  ; int min (  ) { return ( a     ) ;  } ;    } ;  program { int a  ; int id arraySizeList ; bodyCode } ; funcDefList
[INFO][SYNTAX]class Foo1 { int a  ; int min (  ) { return ( a     ) ;  } ;   } ; class Foo { int a  ; Foo1 f1  ; int min (  ) { return ( a     ) ;  } ;    } ;  program { int a  ; int id arraySizeList ; bodyCode } ; funcDefList
[INFO][SYNTAX]class Foo1 { int a  ; int min (  ) { return ( a     ) ;  } ;   } ; class Foo { int a  ; Foo1 f1  ; int min (  ) { return ( a     ) ;  } ;    } ;  program { int a  ; int b arraySizeList ; bodyCode } ; funcDefList
[INFO][SYNTAX]class Foo1 { int a  ; int min (  ) { return ( a     ) ;  } ;   } ; class Foo { int a  ; Foo1 f1  ; int min (  ) { return ( a     ) ;  } ;    } ;  program { int a  ; int b  ; bodyCode } ; funcDefList
[INFO][SYNTAX]class Foo1 { int a  ; int min (  ) { return ( a     ) ;  } ;   } ; class Foo { int a  ; Foo1 f1  ; int min (  ) { return ( a     ) ;  } ;    } ;  program { int a  ; int b  ; id body_Code2 } ; funcDefList
[INFO][SYNTAX]class Foo1 { int a  ; int min (  ) { return ( a     ) ;  } ;   } ; class Foo { int a  ; Foo1 f1  ; int min (  ) { return ( a     ) ;  } ;    } ;  program { int a  ; int b  ; Foo body_Code2 } ; funcDefList
[INFO][SYNTAX]class Foo1 { int a  ; int min (  ) { return ( a     ) ;  } ;   } ; class Foo { int a  ; Foo1 f1  ; int min (  ) { return ( a     ) ;  } ;    } ;  program { int a  ; int b  ; Foo id arraySizeList ; bodyCode } ; funcDefList
[INFO][SYNTAX]class Foo1 { int a  ; int min (  ) { return ( a     ) ;  } ;   } ; class Foo { int a  ; Foo1 f1  ; int min (  ) { return ( a     ) ;  } ;    } ;  program { int a  ; int b  ; Foo foo arraySizeList ; bodyCode } ; funcDefList
[INFO][SYNTAX]class Foo1 { int a  ; int min (  ) { return ( a     ) ;  } ;   } ; class Foo { int a  ; Foo1 f1  ; int min (  ) { return ( a     ) ;  } ;    } ;  program { int a  ; int b  ; Foo foo  ; bodyCode } ; funcDefList
[INFO][SYNTAX]class Foo1 { int a  ; int min (  ) { return ( a     ) ;  } ;   } ; class Foo { int a  ; Foo1 f1  ; int min (  ) { return ( a     ) ;  } ;    } ;  program { int a  ; int b  ; Foo foo  ; id body_Code2 } ; funcDefList
[INFO][SYNTAX]class Foo1 { int a  ; int min (  ) { return ( a     ) ;  } ;   } ; class Foo { int a  ; Foo1 f1  ; int min (  ) { return ( a     ) ;  } ;    } ;  program { int a  ; int b  ; Foo foo  ; b body_Code2 } ; funcDefList
[INFO][SYNTAX]class Foo1 { int a  ; int min (  ) { return ( a     ) ;  } ;   } ; class Foo { int a  ; Foo1 f1  ; int min (  ) { return ( a     ) ;  } ;    } ;  program { int a  ; int b  ; Foo foo  ; b i_ndiceList dotList = expr ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int a  ; int min (  ) { return ( a     ) ;  } ;   } ; class Foo { int a  ; Foo1 f1  ; int min (  ) { return ( a     ) ;  } ;    } ;  program { int a  ; int b  ; Foo foo  ; b  dotList = expr ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int a  ; int min (  ) { return ( a     ) ;  } ;   } ; class Foo { int a  ; Foo1 f1  ; int min (  ) { return ( a     ) ;  } ;    } ;  program { int a  ; int b  ; Foo foo  ; b   = expr ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int a  ; int min (  ) { return ( a     ) ;  } ;   } ; class Foo { int a  ; Foo1 f1  ; int min (  ) { return ( a     ) ;  } ;    } ;  program { int a  ; int b  ; Foo foo  ; b   = arithExpr subExpr ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int a  ; int min (  ) { return ( a     ) ;  } ;   } ; class Foo { int a  ; Foo1 f1  ; int min (  ) { return ( a     ) ;  } ;    } ;  program { int a  ; int b  ; Foo foo  ; b   = term arithERR subExpr ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int a  ; int min (  ) { return ( a     ) ;  } ;   } ; class Foo { int a  ; Foo1 f1  ; int min (  ) { return ( a     ) ;  } ;    } ;  program { int a  ; int b  ; Foo foo  ; b   = factor terFac arithERR subExpr ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int a  ; int min (  ) { return ( a     ) ;  } ;   } ; class Foo { int a  ; Foo1 f1  ; int min (  ) { return ( a     ) ;  } ;    } ;  program { int a  ; int b  ; Foo foo  ; b   = id IorP terFac arithERR subExpr ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int a  ; int min (  ) { return ( a     ) ;  } ;   } ; class Foo { int a  ; Foo1 f1  ; int min (  ) { return ( a     ) ;  } ;    } ;  program { int a  ; int b  ; Foo foo  ; b   = foo IorP terFac arithERR subExpr ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int a  ; int min (  ) { return ( a     ) ;  } ;   } ; class Foo { int a  ; Foo1 f1  ; int min (  ) { return ( a     ) ;  } ;    } ;  program { int a  ; int b  ; Foo foo  ; b   = foo i_ndiceList I_F terFac arithERR subExpr ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int a  ; int min (  ) { return ( a     ) ;  } ;   } ; class Foo { int a  ; Foo1 f1  ; int min (  ) { return ( a     ) ;  } ;    } ;  program { int a  ; int b  ; Foo foo  ; b   = foo  I_F terFac arithERR subExpr ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int a  ; int min (  ) { return ( a     ) ;  } ;   } ; class Foo { int a  ; Foo1 f1  ; int min (  ) { return ( a     ) ;  } ;    } ;  program { int a  ; int b  ; Foo foo  ; b   = foo  . id IorP terFac arithERR subExpr ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int a  ; int min (  ) { return ( a     ) ;  } ;   } ; class Foo { int a  ; Foo1 f1  ; int min (  ) { return ( a     ) ;  } ;    } ;  program { int a  ; int b  ; Foo foo  ; b   = foo  . min IorP terFac arithERR subExpr ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int a  ; int min (  ) { return ( a     ) ;  } ;   } ; class Foo { int a  ; Foo1 f1  ; int min (  ) { return ( a     ) ;  } ;    } ;  program { int a  ; int b  ; Foo foo  ; b   = foo  . min ( aParams ) terFac arithERR subExpr ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int a  ; int min (  ) { return ( a     ) ;  } ;   } ; class Foo { int a  ; Foo1 f1  ; int min (  ) { return ( a     ) ;  } ;    } ;  program { int a  ; int b  ; Foo foo  ; b   = foo  . min ( [ arithExpr ] ) terFac arithERR subExpr ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int a  ; int min (  ) { return ( a     ) ;  } ;   } ; class Foo { int a  ; Foo1 f1  ; int min (  ) { return ( a     ) ;  } ;    } ;  program { int a  ; int b  ; Foo foo  ; b   = foo  . min ( [ arithExpr ] )  arithERR subExpr ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int a  ; int min (  ) { return ( a     ) ;  } ;   } ; class Foo { int a  ; Foo1 f1  ; int min (  ) { return ( a     ) ;  } ;    } ;  program { int a  ; int b  ; Foo foo  ; b   = foo  . min ( [ arithExpr ] )   subExpr ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int a  ; int min (  ) { return ( a     ) ;  } ;   } ; class Foo { int a  ; Foo1 f1  ; int min (  ) { return ( a     ) ;  } ;    } ;  program { int a  ; int b  ; Foo foo  ; b   = foo  . min ( [ arithExpr ] )    ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int a  ; int min (  ) { return ( a     ) ;  } ;   } ; class Foo { int a  ; Foo1 f1  ; int min (  ) { return ( a     ) ;  } ;    } ;  program { int a  ; int b  ; Foo foo  ; b   = foo  . min ( [ arithExpr ] )    ; statement S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int a  ; int min (  ) { return ( a     ) ;  } ;   } ; class Foo { int a  ; Foo1 f1  ; int min (  ) { return ( a     ) ;  } ;    } ;  program { int a  ; int b  ; Foo foo  ; b   = foo  . min ( [ arithExpr ] )    ; assignStat ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int a  ; int min (  ) { return ( a     ) ;  } ;   } ; class Foo { int a  ; Foo1 f1  ; int min (  ) { return ( a     ) ;  } ;    } ;  program { int a  ; int b  ; Foo foo  ; b   = foo  . min ( [ arithExpr ] )    ; variable = expr ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int a  ; int min (  ) { return ( a     ) ;  } ;   } ; class Foo { int a  ; Foo1 f1  ; int min (  ) { return ( a     ) ;  } ;    } ;  program { int a  ; int b  ; Foo foo  ; b   = foo  . min ( [ arithExpr ] )    ; id i_ndiceList dotNest = expr ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int a  ; int min (  ) { return ( a     ) ;  } ;   } ; class Foo { int a  ; Foo1 f1  ; int min (  ) { return ( a     ) ;  } ;    } ;  program { int a  ; int b  ; Foo foo  ; b   = foo  . min ( [ arithExpr ] )    ; b i_ndiceList dotNest = expr ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int a  ; int min (  ) { return ( a     ) ;  } ;   } ; class Foo { int a  ; Foo1 f1  ; int min (  ) { return ( a     ) ;  } ;    } ;  program { int a  ; int b  ; Foo foo  ; b   = foo  . min ( [ arithExpr ] )    ; b  dotNest = expr ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int a  ; int min (  ) { return ( a     ) ;  } ;   } ; class Foo { int a  ; Foo1 f1  ; int min (  ) { return ( a     ) ;  } ;    } ;  program { int a  ; int b  ; Foo foo  ; b   = foo  . min ( [ arithExpr ] )    ; b   = expr ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int a  ; int min (  ) { return ( a     ) ;  } ;   } ; class Foo { int a  ; Foo1 f1  ; int min (  ) { return ( a     ) ;  } ;    } ;  program { int a  ; int b  ; Foo foo  ; b   = foo  . min ( [ arithExpr ] )    ; b   = arithExpr subExpr ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int a  ; int min (  ) { return ( a     ) ;  } ;   } ; class Foo { int a  ; Foo1 f1  ; int min (  ) { return ( a     ) ;  } ;    } ;  program { int a  ; int b  ; Foo foo  ; b   = foo  . min ( [ term arithERR ] )    ; b   = arithExpr subExpr ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int a  ; int min (  ) { return ( a     ) ;  } ;   } ; class Foo { int a  ; Foo1 f1  ; int min (  ) { return ( a     ) ;  } ;    } ;  program { int a  ; int b  ; Foo foo  ; b   = foo  . min ( [ factor terFac arithERR ] )    ; b   = arithExpr subExpr ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int a  ; int min (  ) { return ( a     ) ;  } ;   } ; class Foo { int a  ; Foo1 f1  ; int min (  ) { return ( a     ) ;  } ;    } ;  program { int a  ; int b  ; Foo foo  ; b   = foo  . min ( [ id IorP terFac arithERR ] )    ; b   = arithExpr subExpr ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int a  ; int min (  ) { return ( a     ) ;  } ;   } ; class Foo { int a  ; Foo1 f1  ; int min (  ) { return ( a     ) ;  } ;    } ;  program { int a  ; int b  ; Foo foo  ; b   = foo  . min ( [ foo IorP terFac arithERR ] )    ; b   = arithExpr subExpr ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int a  ; int min (  ) { return ( a     ) ;  } ;   } ; class Foo { int a  ; Foo1 f1  ; int min (  ) { return ( a     ) ;  } ;    } ;  program { int a  ; int b  ; Foo foo  ; b   = foo  . min ( [ foo i_ndiceList I_F terFac arithERR ] )    ; b   = arithExpr subExpr ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int a  ; int min (  ) { return ( a     ) ;  } ;   } ; class Foo { int a  ; Foo1 f1  ; int min (  ) { return ( a     ) ;  } ;    } ;  program { int a  ; int b  ; Foo foo  ; b   = foo  . min ( [ foo  I_F terFac arithERR ] )    ; b   = arithExpr subExpr ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int a  ; int min (  ) { return ( a     ) ;  } ;   } ; class Foo { int a  ; Foo1 f1  ; int min (  ) { return ( a     ) ;  } ;    } ;  program { int a  ; int b  ; Foo foo  ; b   = foo  . min ( [ foo  . id IorP terFac arithERR ] )    ; b   = arithExpr subExpr ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int a  ; int min (  ) { return ( a     ) ;  } ;   } ; class Foo { int a  ; Foo1 f1  ; int min (  ) { return ( a     ) ;  } ;    } ;  program { int a  ; int b  ; Foo foo  ; b   = foo  . min ( [ foo  . f1 IorP terFac arithERR ] )    ; b   = arithExpr subExpr ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int a  ; int min (  ) { return ( a     ) ;  } ;   } ; class Foo { int a  ; Foo1 f1  ; int min (  ) { return ( a     ) ;  } ;    } ;  program { int a  ; int b  ; Foo foo  ; b   = foo  . min ( [ foo  . f1 i_ndiceList I_F terFac arithERR ] )    ; b   = arithExpr subExpr ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int a  ; int min (  ) { return ( a     ) ;  } ;   } ; class Foo { int a  ; Foo1 f1  ; int min (  ) { return ( a     ) ;  } ;    } ;  program { int a  ; int b  ; Foo foo  ; b   = foo  . min ( [ foo  . f1  I_F terFac arithERR ] )    ; b   = arithExpr subExpr ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int a  ; int min (  ) { return ( a     ) ;  } ;   } ; class Foo { int a  ; Foo1 f1  ; int min (  ) { return ( a     ) ;  } ;    } ;  program { int a  ; int b  ; Foo foo  ; b   = foo  . min ( [ foo  . f1  . id IorP terFac arithERR ] )    ; b   = arithExpr subExpr ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int a  ; int min (  ) { return ( a     ) ;  } ;   } ; class Foo { int a  ; Foo1 f1  ; int min (  ) { return ( a     ) ;  } ;    } ;  program { int a  ; int b  ; Foo foo  ; b   = foo  . min ( [ foo  . f1  . min IorP terFac arithERR ] )    ; b   = arithExpr subExpr ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int a  ; int min (  ) { return ( a     ) ;  } ;   } ; class Foo { int a  ; Foo1 f1  ; int min (  ) { return ( a     ) ;  } ;    } ;  program { int a  ; int b  ; Foo foo  ; b   = foo  . min ( [ foo  . f1  . min ( aParams ) terFac arithERR ] )    ; b   = arithExpr subExpr ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int a  ; int min (  ) { return ( a     ) ;  } ;   } ; class Foo { int a  ; Foo1 f1  ; int min (  ) { return ( a     ) ;  } ;    } ;  program { int a  ; int b  ; Foo foo  ; b   = foo  . min ( [ foo  . f1  . min ( [ arithExpr ] ) terFac arithERR ] )    ; b   = arithExpr subExpr ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int a  ; int min (  ) { return ( a     ) ;  } ;   } ; class Foo { int a  ; Foo1 f1  ; int min (  ) { return ( a     ) ;  } ;    } ;  program { int a  ; int b  ; Foo foo  ; b   = foo  . min ( [ foo  . f1  . min ( [ arithExpr ] )  arithERR ] )    ; b   = arithExpr subExpr ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int a  ; int min (  ) { return ( a     ) ;  } ;   } ; class Foo { int a  ; Foo1 f1  ; int min (  ) { return ( a     ) ;  } ;    } ;  program { int a  ; int b  ; Foo foo  ; b   = foo  . min ( [ foo  . f1  . min ( [ arithExpr ] )   ] )    ; b   = arithExpr subExpr ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int a  ; int min (  ) { return ( a     ) ;  } ;   } ; class Foo { int a  ; Foo1 f1  ; int min (  ) { return ( a     ) ;  } ;    } ;  program { int a  ; int b  ; Foo foo  ; b   = foo  . min ( [ foo  . f1  . min ( [ arithExpr ] )   ] )    ; b   = arithExpr  ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int a  ; int min (  ) { return ( a     ) ;  } ;   } ; class Foo { int a  ; Foo1 f1  ; int min (  ) { return ( a     ) ;  } ;    } ;  program { int a  ; int b  ; Foo foo  ; b   = foo  . min ( [ foo  . f1  . min ( [ arithExpr ] )   ] )    ; b   = arithExpr  ; statement S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int a  ; int min (  ) { return ( a     ) ;  } ;   } ; class Foo { int a  ; Foo1 f1  ; int min (  ) { return ( a     ) ;  } ;    } ;  program { int a  ; int b  ; Foo foo  ; b   = foo  . min ( [ foo  . f1  . min ( [ arithExpr ] )   ] )    ; b   = arithExpr  ; assignStat ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int a  ; int min (  ) { return ( a     ) ;  } ;   } ; class Foo { int a  ; Foo1 f1  ; int min (  ) { return ( a     ) ;  } ;    } ;  program { int a  ; int b  ; Foo foo  ; b   = foo  . min ( [ foo  . f1  . min ( [ arithExpr ] )   ] )    ; b   = arithExpr  ; variable = expr ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int a  ; int min (  ) { return ( a     ) ;  } ;   } ; class Foo { int a  ; Foo1 f1  ; int min (  ) { return ( a     ) ;  } ;    } ;  program { int a  ; int b  ; Foo foo  ; b   = foo  . min ( [ foo  . f1  . min ( [ arithExpr ] )   ] )    ; b   = arithExpr  ; id i_ndiceList dotNest = expr ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int a  ; int min (  ) { return ( a     ) ;  } ;   } ; class Foo { int a  ; Foo1 f1  ; int min (  ) { return ( a     ) ;  } ;    } ;  program { int a  ; int b  ; Foo foo  ; b   = foo  . min ( [ foo  . f1  . min ( [ arithExpr ] )   ] )    ; b   = arithExpr  ; a i_ndiceList dotNest = expr ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int a  ; int min (  ) { return ( a     ) ;  } ;   } ; class Foo { int a  ; Foo1 f1  ; int min (  ) { return ( a     ) ;  } ;    } ;  program { int a  ; int b  ; Foo foo  ; b   = foo  . min ( [ foo  . f1  . min ( [ arithExpr ] )   ] )    ; b   = arithExpr  ; a  dotNest = expr ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int a  ; int min (  ) { return ( a     ) ;  } ;   } ; class Foo { int a  ; Foo1 f1  ; int min (  ) { return ( a     ) ;  } ;    } ;  program { int a  ; int b  ; Foo foo  ; b   = foo  . min ( [ foo  . f1  . min ( [ arithExpr ] )   ] )    ; b   = arithExpr  ; a   = expr ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int a  ; int min (  ) { return ( a     ) ;  } ;   } ; class Foo { int a  ; Foo1 f1  ; int min (  ) { return ( a     ) ;  } ;    } ;  program { int a  ; int b  ; Foo foo  ; b   = foo  . min ( [ foo  . f1  . min ( [ arithExpr ] )   ] )    ; b   = arithExpr  ; a   = arithExpr subExpr ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int a  ; int min (  ) { return ( a     ) ;  } ;   } ; class Foo { int a  ; Foo1 f1  ; int min (  ) { return ( a     ) ;  } ;    } ;  program { int a  ; int b  ; Foo foo  ; b   = foo  . min ( [ foo  . f1  . min ( [ term arithERR ] )   ] )    ; b   = arithExpr  ; a   = arithExpr subExpr ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int a  ; int min (  ) { return ( a     ) ;  } ;   } ; class Foo { int a  ; Foo1 f1  ; int min (  ) { return ( a     ) ;  } ;    } ;  program { int a  ; int b  ; Foo foo  ; b   = foo  . min ( [ foo  . f1  . min ( [ factor terFac arithERR ] )   ] )    ; b   = arithExpr  ; a   = arithExpr subExpr ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int a  ; int min (  ) { return ( a     ) ;  } ;   } ; class Foo { int a  ; Foo1 f1  ; int min (  ) { return ( a     ) ;  } ;    } ;  program { int a  ; int b  ; Foo foo  ; b   = foo  . min ( [ foo  . f1  . min ( [ id IorP terFac arithERR ] )   ] )    ; b   = arithExpr  ; a   = arithExpr subExpr ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int a  ; int min (  ) { return ( a     ) ;  } ;   } ; class Foo { int a  ; Foo1 f1  ; int min (  ) { return ( a     ) ;  } ;    } ;  program { int a  ; int b  ; Foo foo  ; b   = foo  . min ( [ foo  . f1  . min ( [ rand IorP terFac arithERR ] )   ] )    ; b   = arithExpr  ; a   = arithExpr subExpr ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int a  ; int min (  ) { return ( a     ) ;  } ;   } ; class Foo { int a  ; Foo1 f1  ; int min (  ) { return ( a     ) ;  } ;    } ;  program { int a  ; int b  ; Foo foo  ; b   = foo  . min ( [ foo  . f1  . min ( [ rand ( aParams ) terFac arithERR ] )   ] )    ; b   = arithExpr  ; a   = arithExpr subExpr ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int a  ; int min (  ) { return ( a     ) ;  } ;   } ; class Foo { int a  ; Foo1 f1  ; int min (  ) { return ( a     ) ;  } ;    } ;  program { int a  ; int b  ; Foo foo  ; b   = foo  . min ( [ foo  . f1  . min ( [ rand ( [ arithExpr ] ) terFac arithERR ] )   ] )    ; b   = arithExpr  ; a   = arithExpr subExpr ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int a  ; int min (  ) { return ( a     ) ;  } ;   } ; class Foo { int a  ; Foo1 f1  ; int min (  ) { return ( a     ) ;  } ;    } ;  program { int a  ; int b  ; Foo foo  ; b   = foo  . min ( [ foo  . f1  . min ( [ rand ( [ arithExpr ] )  arithERR ] )   ] )    ; b   = arithExpr  ; a   = arithExpr subExpr ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int a  ; int min (  ) { return ( a     ) ;  } ;   } ; class Foo { int a  ; Foo1 f1  ; int min (  ) { return ( a     ) ;  } ;    } ;  program { int a  ; int b  ; Foo foo  ; b   = foo  . min ( [ foo  . f1  . min ( [ rand ( [ arithExpr ] )   ] )   ] )    ; b   = arithExpr  ; a   = arithExpr subExpr ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int a  ; int min (  ) { return ( a     ) ;  } ;   } ; class Foo { int a  ; Foo1 f1  ; int min (  ) { return ( a     ) ;  } ;    } ;  program { int a  ; int b  ; Foo foo  ; b   = foo  . min ( [ foo  . f1  . min ( [ rand ( [ arithExpr ] )   ] )   ] )    ; b   = arithExpr  ; a   = arithExpr  ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int a  ; int min (  ) { return ( a     ) ;  } ;   } ; class Foo { int a  ; Foo1 f1  ; int min (  ) { return ( a     ) ;  } ;    } ;  program { int a  ; int b  ; Foo foo  ; b   = foo  . min ( [ foo  . f1  . min ( [ rand ( [ arithExpr ] )   ] )   ] )    ; b   = arithExpr  ; a   = arithExpr  ;  } ; funcDefList
[INFO][SYNTAX]class Foo1 { int a  ; int min (  ) { return ( a     ) ;  } ;   } ; class Foo { int a  ; Foo1 f1  ; int min (  ) { return ( a     ) ;  } ;    } ;  program { int a  ; int b  ; Foo foo  ; b   = foo  . min ( [ foo  . f1  . min ( [ rand ( [ arithExpr ] )   ] )   ] )    ; b   = arithExpr  ; a   = arithExpr  ;  } ; func_Def funcDefList
[INFO][SYNTAX]class Foo1 { int a  ; int min (  ) { return ( a     ) ;  } ;   } ; class Foo { int a  ; Foo1 f1  ; int min (  ) { return ( a     ) ;  } ;    } ;  program { int a  ; int b  ; Foo foo  ; b   = foo  . min ( [ foo  . f1  . min ( [ rand ( [ arithExpr ] )   ] )   ] )    ; b   = arithExpr  ; a   = arithExpr  ;  } ; funcHead funcBody ; funcDefList
[INFO][SYNTAX]class Foo1 { int a  ; int min (  ) { return ( a     ) ;  } ;   } ; class Foo { int a  ; Foo1 f1  ; int min (  ) { return ( a     ) ;  } ;    } ;  program { int a  ; int b  ; Foo foo  ; b   = foo  . min ( [ foo  . f1  . min ( [ rand ( [ arithExpr ] )   ] )   ] )    ; b   = arithExpr  ; a   = arithExpr  ;  } ; type id ( fParams ) funcBody ; funcDefList
[INFO][SYNTAX]class Foo1 { int a  ; int min (  ) { return ( a     ) ;  } ;   } ; class Foo { int a  ; Foo1 f1  ; int min (  ) { return ( a     ) ;  } ;    } ;  program { int a  ; int b  ; Foo foo  ; b   = foo  . min ( [ foo  . f1  . min ( [ rand ( [ arithExpr ] )   ] )   ] )    ; b   = arithExpr  ; a   = arithExpr  ;  } ; int id ( fParams ) funcBody ; funcDefList
[INFO][SYNTAX]class Foo1 { int a  ; int min (  ) { return ( a     ) ;  } ;   } ; class Foo { int a  ; Foo1 f1  ; int min (  ) { return ( a     ) ;  } ;    } ;  program { int a  ; int b  ; Foo foo  ; b   = foo  . min ( [ foo  . f1  . min ( [ rand ( [ arithExpr ] )   ] )   ] )    ; b   = arithExpr  ; a   = arithExpr  ;  } ; int rand ( fParams ) funcBody ; funcDefList
[INFO][SYNTAX]class Foo1 { int a  ; int min (  ) { return ( a     ) ;  } ;   } ; class Foo { int a  ; Foo1 f1  ; int min (  ) { return ( a     ) ;  } ;    } ;  program { int a  ; int b  ; Foo foo  ; b   = foo  . min ( [ foo  . f1  . min ( [ rand ( [ arithExpr ] )   ] )   ] )    ; b   = arithExpr  ; a   = arithExpr  ;  } ; int rand (  ) funcBody ; funcDefList
[INFO][SYNTAX]class Foo1 { int a  ; int min (  ) { return ( a     ) ;  } ;   } ; class Foo { int a  ; Foo1 f1  ; int min (  ) { return ( a     ) ;  } ;    } ;  program { int a  ; int b  ; Foo foo  ; b   = foo  . min ( [ foo  . f1  . min ( [ rand ( [ arithExpr ] )   ] )   ] )    ; b   = arithExpr  ; a   = arithExpr  ;  } ; int rand (  ) { bodyCode } ; funcDefList
[INFO][SYNTAX]class Foo1 { int a  ; int min (  ) { return ( a     ) ;  } ;   } ; class Foo { int a  ; Foo1 f1  ; int min (  ) { return ( a     ) ;  } ;    } ;  program { int a  ; int b  ; Foo foo  ; b   = foo  . min ( [ foo  . f1  . min ( [ rand ( [ arithExpr ] )   ] )   ] )    ; b   = arithExpr  ; a   = arithExpr  ;  } ; int rand (  ) { int id arraySizeList ; bodyCode } ; funcDefList
[INFO][SYNTAX]class Foo1 { int a  ; int min (  ) { return ( a     ) ;  } ;   } ; class Foo { int a  ; Foo1 f1  ; int min (  ) { return ( a     ) ;  } ;    } ;  program { int a  ; int b  ; Foo foo  ; b   = foo  . min ( [ foo  . f1  . min ( [ rand ( [ arithExpr ] )   ] )   ] )    ; b   = arithExpr  ; a   = arithExpr  ;  } ; int rand (  ) { int id arraySizeList ; bodyCode } ; funcDefList
[INFO][SYNTAX]class Foo1 { int a  ; int min (  ) { return ( a     ) ;  } ;   } ; class Foo { int a  ; Foo1 f1  ; int min (  ) { return ( a     ) ;  } ;    } ;  program { int a  ; int b  ; Foo foo  ; b   = foo  . min ( [ foo  . f1  . min ( [ rand ( [ arithExpr ] )   ] )   ] )    ; b   = arithExpr  ; a   = arithExpr  ;  } ; int rand (  ) { int c arraySizeList ; bodyCode } ; funcDefList
[INFO][SYNTAX]class Foo1 { int a  ; int min (  ) { return ( a     ) ;  } ;   } ; class Foo { int a  ; Foo1 f1  ; int min (  ) { return ( a     ) ;  } ;    } ;  program { int a  ; int b  ; Foo foo  ; b   = foo  . min ( [ foo  . f1  . min ( [ rand ( [ arithExpr ] )   ] )   ] )    ; b   = arithExpr  ; a   = arithExpr  ;  } ; int rand (  ) { int c  ; bodyCode } ; funcDefList
[INFO][SYNTAX]class Foo1 { int a  ; int min (  ) { return ( a     ) ;  } ;   } ; class Foo { int a  ; Foo1 f1  ; int min (  ) { return ( a     ) ;  } ;    } ;  program { int a  ; int b  ; Foo foo  ; b   = foo  . min ( [ foo  . f1  . min ( [ rand ( [ arithExpr ] )   ] )   ] )    ; b   = arithExpr  ; a   = arithExpr  ;  } ; int rand (  ) { int c  ; ctrlStat ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int a  ; int min (  ) { return ( a     ) ;  } ;   } ; class Foo { int a  ; Foo1 f1  ; int min (  ) { return ( a     ) ;  } ;    } ;  program { int a  ; int b  ; Foo foo  ; b   = foo  . min ( [ foo  . f1  . min ( [ rand ( [ arithExpr ] )   ] )   ] )    ; b   = arithExpr  ; a   = arithExpr  ;  } ; int rand (  ) { int c  ; return ( expr ) ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int a  ; int min (  ) { return ( a     ) ;  } ;   } ; class Foo { int a  ; Foo1 f1  ; int min (  ) { return ( a     ) ;  } ;    } ;  program { int a  ; int b  ; Foo foo  ; b   = foo  . min ( [ foo  . f1  . min ( [ rand ( [ arithExpr ] )   ] )   ] )    ; b   = arithExpr  ; a   = arithExpr  ;  } ; int rand (  ) { int c  ; return ( arithExpr subExpr ) ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int a  ; int min (  ) { return ( a     ) ;  } ;   } ; class Foo { int a  ; Foo1 f1  ; int min (  ) { return ( a     ) ;  } ;    } ;  program { int a  ; int b  ; Foo foo  ; b   = foo  . min ( [ foo  . f1  . min ( [ rand ( [ term arithERR ] )   ] )   ] )    ; b   = arithExpr  ; a   = arithExpr  ;  } ; int rand (  ) { int c  ; return ( arithExpr subExpr ) ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int a  ; int min (  ) { return ( a     ) ;  } ;   } ; class Foo { int a  ; Foo1 f1  ; int min (  ) { return ( a     ) ;  } ;    } ;  program { int a  ; int b  ; Foo foo  ; b   = foo  . min ( [ foo  . f1  . min ( [ rand ( [ factor terFac arithERR ] )   ] )   ] )    ; b   = arithExpr  ; a   = arithExpr  ;  } ; int rand (  ) { int c  ; return ( arithExpr subExpr ) ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int a  ; int min (  ) { return ( a     ) ;  } ;   } ; class Foo { int a  ; Foo1 f1  ; int min (  ) { return ( a     ) ;  } ;    } ;  program { int a  ; int b  ; Foo foo  ; b   = foo  . min ( [ foo  . f1  . min ( [ rand ( [ id IorP terFac arithERR ] )   ] )   ] )    ; b   = arithExpr  ; a   = arithExpr  ;  } ; int rand (  ) { int c  ; return ( arithExpr subExpr ) ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int a  ; int min (  ) { return ( a     ) ;  } ;   } ; class Foo { int a  ; Foo1 f1  ; int min (  ) { return ( a     ) ;  } ;    } ;  program { int a  ; int b  ; Foo foo  ; b   = foo  . min ( [ foo  . f1  . min ( [ rand ( [ c IorP terFac arithERR ] )   ] )   ] )    ; b   = arithExpr  ; a   = arithExpr  ;  } ; int rand (  ) { int c  ; return ( arithExpr subExpr ) ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int a  ; int min (  ) { return ( a     ) ;  } ;   } ; class Foo { int a  ; Foo1 f1  ; int min (  ) { return ( a     ) ;  } ;    } ;  program { int a  ; int b  ; Foo foo  ; b   = foo  . min ( [ foo  . f1  . min ( [ rand ( [ c  terFac arithERR ] )   ] )   ] )    ; b   = arithExpr  ; a   = arithExpr  ;  } ; int rand (  ) { int c  ; return ( arithExpr subExpr ) ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int a  ; int min (  ) { return ( a     ) ;  } ;   } ; class Foo { int a  ; Foo1 f1  ; int min (  ) { return ( a     ) ;  } ;    } ;  program { int a  ; int b  ; Foo foo  ; b   = foo  . min ( [ foo  . f1  . min ( [ rand ( [ c   arithERR ] )   ] )   ] )    ; b   = arithExpr  ; a   = arithExpr  ;  } ; int rand (  ) { int c  ; return ( arithExpr subExpr ) ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int a  ; int min (  ) { return ( a     ) ;  } ;   } ; class Foo { int a  ; Foo1 f1  ; int min (  ) { return ( a     ) ;  } ;    } ;  program { int a  ; int b  ; Foo foo  ; b   = foo  . min ( [ foo  . f1  . min ( [ rand ( [ c    ] )   ] )   ] )    ; b   = arithExpr  ; a   = arithExpr  ;  } ; int rand (  ) { int c  ; return ( arithExpr subExpr ) ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int a  ; int min (  ) { return ( a     ) ;  } ;   } ; class Foo { int a  ; Foo1 f1  ; int min (  ) { return ( a     ) ;  } ;    } ;  program { int a  ; int b  ; Foo foo  ; b   = foo  . min ( [ foo  . f1  . min ( [ rand ( [ c    ] )   ] )   ] )    ; b   = arithExpr  ; a   = arithExpr  ;  } ; int rand (  ) { int c  ; return ( arithExpr  ) ; S_LIST } ; funcDefList
[INFO][SYNTAX]class Foo1 { int a  ; int min (  ) { return ( a     ) ;  } ;   } ; class Foo { int a  ; Foo1 f1  ; int min (  ) { return ( a     ) ;  } ;    } ;  program { int a  ; int b  ; Foo foo  ; b   = foo  . min ( [ foo  . f1  . min ( [ rand ( [ c    ] )   ] )   ] )    ; b   = arithExpr  ; a   = arithExpr  ;  } ; int rand (  ) { int c  ; return ( arithExpr  ) ;  } ; funcDefList
[INFO][SYNTAX]class Foo1 { int a  ; int min (  ) { return ( a     ) ;  } ;   } ; class Foo { int a  ; Foo1 f1  ; int min (  ) { return ( a     ) ;  } ;    } ;  program { int a  ; int b  ; Foo foo  ; b   = foo  . min ( [ foo  . f1  . min ( [ rand ( [ c    ] )   ] )   ] )    ; b   = arithExpr  ; a   = arithExpr  ;  } ; int rand (  ) { int c  ; return ( arithExpr  ) ;  } ; 
